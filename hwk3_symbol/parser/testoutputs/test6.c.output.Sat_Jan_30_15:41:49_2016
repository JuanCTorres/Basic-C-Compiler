Result of test done to parser.

test6.c BEGIN.
===========================================================

No syntatical errors detected.

ROOT (0, 0) (Child of 0, 0)
  FUNC_DECLARATION myfunc (type: INT_TYPE)(0, 0) (Child of 0, 0)
    FORMAL_PARAMS (1, 0) (Child of 0, 0)
      ID a (type: INT_TYPE)(1, 0) (Child of 0, 0)
      ID b (type: INT_TYPE)(1, 0) (Child of 0, 0)
    SEQ (1, 0) (Child of 0, 0)
      LOCAL_DECLARATIONS (1, 0) (Child of 0, 0)
      STATEMENT_LIST (1, 0) (Child of 0, 0)
        RETURN (1, 0) (Child of 0, 0)
          + (1, 0) (Child of 0, 0)
            ID a(1, 0) (Child of 0, 0)
            ID b(1, 0) (Child of 0, 0)
  FUNC_DECLARATION main (type: VOID_TYPE)(0, 0) (Child of 0, 0)
    FORMAL_PARAMS (1, 0) (Child of 0, 0)
    SEQ (1, 0) (Child of 0, 0)
      LOCAL_DECLARATIONS (1, 1) (Child of 0, 0)
      STATEMENT_LIST (1, 1) (Child of 0, 0)
        SEQ (2, 1) (Child of 1, 1)
          LOCAL_DECLARATIONS (2, 0) (Child of 1, 1)
            = (2, 0) (Child of 1, 1)
              ID c (type: INT_TYPE)(2, 0) (Child of 1, 1)
              INT_LITERAL 4(2, 0) (Child of 1, 1)
            = (2, 0) (Child of 1, 1)
              ID d (type: INT_TYPE)(2, 0) (Child of 1, 1)
              INT_LITERAL 5(2, 0) (Child of 1, 1)
          STATEMENT_LIST (2, 0) (Child of 1, 1)
            SEQ (3, 0) (Child of 2, 0)
              LOCAL_DECLARATIONS (3, 0) (Child of 2, 0)
                = (3, 0) (Child of 2, 0)
                  ID e (type: INT_TYPE)(3, 0) (Child of 2, 0)
                  INT_LITERAL 6(3, 0) (Child of 2, 0)
              STATEMENT_LIST (3, 0) (Child of 2, 0)
                SEQ (4, 0) (Child of 3, 0)
                  LOCAL_DECLARATIONS (4, 0) (Child of 3, 0)
                    = (4, 0) (Child of 3, 0)
                      ID eeee (type: INT_TYPE)(4, 0) (Child of 3, 0)
                      INT_LITERAL 113(4, 0) (Child of 3, 0)
                  STATEMENT_LIST (4, 0) (Child of 3, 0)
                    FOR (4, 0) (Child of 3, 0)
                      = (4, 0) (Child of 3, 0)
                        ID i(4, 0) (Child of 3, 0)
                        INT_LITERAL 3(4, 0) (Child of 3, 0)
                      < (4, 0) (Child of 3, 0)
                        ID i(4, 0) (Child of 3, 0)
                        INT_LITERAL 4(4, 0) (Child of 3, 0)
                      ++ (4, 0) (Child of 3, 0)
                        ID i(4, 0) (Child of 3, 0)
                      SEQ (5, 0) (Child of 4, 0)
                        LOCAL_DECLARATIONS (5, 0) (Child of 4, 0)
                        STATEMENT_LIST (5, 0) (Child of 4, 0)
                          = (5, 0) (Child of 4, 0)
                            ID banana(5, 0) (Child of 4, 0)
                            INT_LITERAL 3(5, 0) (Child of 4, 0)
                = (3, 0) (Child of 2, 0)
                  ID a(3, 0) (Child of 2, 0)
                  INT_LITERAL 54(3, 0) (Child of 2, 0)
                SEQ (4, 0) (Child of 3, 0)
                  LOCAL_DECLARATIONS (4, 1) (Child of 3, 0)
                  STATEMENT_LIST (4, 1) (Child of 3, 0)
                    FOR (4, 1) (Child of 3, 0)
                      = (4, 1) (Child of 3, 0)
                        ID num(4, 1) (Child of 3, 0)
                        ID blah(4, 1) (Child of 3, 0)
                      < (4, 1) (Child of 3, 0)
                        ID num(4, 1) (Child of 3, 0)
                        ID something(4, 1) (Child of 3, 0)
                      -- (4, 1) (Child of 3, 0)
                        ID blah(4, 1) (Child of 3, 0)
                      SEQ (5, 1) (Child of 4, 1)
                        LOCAL_DECLARATIONS (5, 1) (Child of 4, 1)
                        STATEMENT_LIST (5, 1) (Child of 4, 1)
                          CALL (5, 1) (Child of 4, 1)
                            FUNCTION whois(5, 1) (Child of 4, 1)
                              ID blah(5, 1) (Child of 4, 1)
                              ID blahblah(5, 1) (Child of 4, 1)
            CALL (2, 0) (Child of 1, 1)
              FUNCTION myfunc(2, 0) (Child of 1, 1)
                ID f(2, 0) (Child of 1, 1)
                ID g(2, 0) (Child of 1, 1)
            CALL (2, 0) (Child of 1, 1)
              FUNCTION newfunc(2, 0) (Child of 1, 1)
                ID h(2, 0) (Child of 1, 1)
                ID i(2, 0) (Child of 1, 1)
            SEQ (3, 0) (Child of 2, 0)
              LOCAL_DECLARATIONS (3, 1) (Child of 2, 0)
                = (3, 1) (Child of 2, 0)
                  ID mynewvar (type: INT_TYPE)(3, 1) (Child of 2, 0)
                  INT_LITERAL 9(3, 1) (Child of 2, 0)
              STATEMENT_LIST (3, 1) (Child of 2, 0)
            = (2, 0) (Child of 1, 1)
              ID j(2, 0) (Child of 1, 1)
              INT_LITERAL 3(2, 0) (Child of 1, 1)
        = (1, 1) (Child of 0, 0)
          ID k(1, 1) (Child of 0, 0)
          INT_LITERAL 8(1, 1) (Child of 0, 0)
array same as level
(lvl: 0, sibno: 0) contains:
  FUNC_VOID main (0 params:)
  FUNC_INT myfunc (2 params: VAR_INT  VAR_INT )
  (lvl: 1, sibno: 0) contains:
    VAR_INT a
    VAR_INT b
  (lvl: 1, sibno: 1) contains:
    (lvl: 2, sibno: 0) contains:
      VAR_INT c
      VAR_INT d
      (lvl: 3, sibno: 0) contains:
        VAR_INT e
        (lvl: 4, sibno: 0) contains:
          VAR_INT eeee
          (lvl: 5, sibno: 0) contains:
        (lvl: 4, sibno: 1) contains:
          (lvl: 5, sibno: 1) contains:
      (lvl: 3, sibno: 1) contains:
        VAR_INT mynewvar


===========================================================
test6.c finished.
