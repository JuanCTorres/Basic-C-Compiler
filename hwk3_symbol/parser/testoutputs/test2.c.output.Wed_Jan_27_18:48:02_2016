Result of test done to parser.

test2.c BEGIN.
===========================================================

No syntatical errors detected.

ROOT (0, 0) (Child of -1, 0)
  FUNCTION my_func (type: INT_TYPE)(0, 0) (Child of -1, 0)
    FORMAL_PARAMS (0, 0) (Child of -1, 0)
      ID q (type: INT_TYPE)(0, 0) (Child of -1, 0)
      ID b (type: INT_TYPE)(0, 0) (Child of -1, 0)
    SEQ (1, 0) (Child of 0, 0)
      LOCAL_DECLARATIONS (1, 0) (Child of 0, 0)
      STATEMENT_LIST (1, 0) (Child of 0, 0)
        PRINT (1, 0) (Child of 0, 0)
          + (1, 0) (Child of 0, 0)
            ID q(1, 0) (Child of 0, 0)
            ID b(1, 0) (Child of 0, 0)
        RETURN (1, 0) (Child of 0, 0)
          INT_LITERAL 12345(1, 0) (Child of 0, 0)
  FUNCTION your_func (type: VOID_TYPE)(0, 0) (Child of -1, 0)
    FORMAL_PARAMS (0, 0) (Child of -1, 0)
    SEQ (1, 0) (Child of 0, 0)
      LOCAL_DECLARATIONS (1, 1) (Child of 0, 0)
        ID gg (type: INT_TYPE)(1, 1) (Child of 0, 0)
        ID ee (type: INT_TYPE)(1, 1) (Child of 0, 0)
      STATEMENT_LIST (1, 1) (Child of 0, 0)
        PRINT (1, 1) (Child of 0, 0)
          STRING_LITERAL LOL!\n(1, 1) (Child of 0, 0)
  FUNCTION main (type: INT_TYPE)(0, 0) (Child of -1, 0)
    FORMAL_PARAMS (0, 0) (Child of -1, 0)
    SEQ (1, 0) (Child of 0, 0)
      LOCAL_DECLARATIONS (1, 2) (Child of 0, 0)
        ID a (type: INT_TYPE)(1, 2) (Child of 0, 0)
        ID t (type: INT_TYPE)(1, 2) (Child of 0, 0)
        ID y (type: INT_TYPE)(1, 2) (Child of 0, 0)
        ID u (type: INT_TYPE)(1, 2) (Child of 0, 0)
        ID w (type: INT_TYPE)(1, 2) (Child of 0, 0)
        ID v (type: INT_TYPE)(1, 2) (Child of 0, 0)
        ID ppp (type: INT_TYPE)(1, 2) (Child of 0, 0)
      STATEMENT_LIST (1, 2) (Child of 0, 0)
        = (1, 2) (Child of 0, 0)
          ID a(1, 2) (Child of 0, 0)
          = (1, 2) (Child of 0, 0)
            ID t(1, 2) (Child of 0, 0)
            = (1, 2) (Child of 0, 0)
              ID y(1, 2) (Child of 0, 0)
              - (1, 2) (Child of 0, 0)
                / (1, 2) (Child of 0, 0)
                  INT_LITERAL 4(1, 2) (Child of 0, 0)
                  INT_LITERAL 5(1, 2) (Child of 0, 0)
        IF_ELSE_STMT (1, 2) (Child of 0, 0)
          > (1, 2) (Child of 0, 0)
            ID a(1, 2) (Child of 0, 0)
            INT_LITERAL 10(1, 2) (Child of 0, 0)
          SEQ (2, 2) (Child of 1, 2)
            LOCAL_DECLARATIONS (2, 0) (Child of 1, 2)
            STATEMENT_LIST (2, 0) (Child of 1, 2)
              IF_ELSE_STMT (2, 0) (Child of 1, 2)
                INT_LITERAL 1(2, 0) (Child of 1, 2)
                SEQ (3, 0) (Child of 2, 0)
                  LOCAL_DECLARATIONS (3, 0) (Child of 2, 0)
                  STATEMENT_LIST (3, 0) (Child of 2, 0)
                    DO_WHILE (3, 0) (Child of 2, 0)
                      != (3, 0) (Child of 2, 0)
                        / (3, 0) (Child of 2, 0)
                          * (3, 0) (Child of 2, 0)
                            ID a(3, 0) (Child of 2, 0)
                            - (3, 0) (Child of 2, 0)
                              ID t(3, 0) (Child of 2, 0)
                              ID u(3, 0) (Child of 2, 0)
                          ID w(3, 0) (Child of 2, 0)
                        INT_LITERAL 10(3, 0) (Child of 2, 0)
                      SEQ (4, 0) (Child of 3, 0)
                        LOCAL_DECLARATIONS (4, 0) (Child of 3, 0)
                        STATEMENT_LIST (4, 0) (Child of 3, 0)
                          READ (4, 0) (Child of 3, 0)
                            ID input(4, 0) (Child of 3, 0)
                SEQ (3, 0) (Child of 2, 0)
                  LOCAL_DECLARATIONS (3, 1) (Child of 2, 0)
                  STATEMENT_LIST (3, 1) (Child of 2, 0)
                    PRINT (3, 1) (Child of 2, 0)
                      STRING_LITERAL not\n(3, 1) (Child of 2, 0)
          SEQ (2, 2) (Child of 1, 2)
            LOCAL_DECLARATIONS (2, 1) (Child of 1, 2)
            STATEMENT_LIST (2, 1) (Child of 1, 2)
              FOR (2, 1) (Child of 1, 2)
                = (2, 1) (Child of 1, 2)
                  ID t(2, 1) (Child of 1, 2)
                  INT_LITERAL 0(2, 1) (Child of 1, 2)
                < (2, 1) (Child of 1, 2)
                  ID t(2, 1) (Child of 1, 2)
                  INT_LITERAL 99(2, 1) (Child of 1, 2)
                ++ (2, 1) (Child of 1, 2)
                  ID t(2, 1) (Child of 1, 2)
                SEQ (3, 1) (Child of 2, 1)
                  LOCAL_DECLARATIONS (3, 2) (Child of 2, 1)
                  STATEMENT_LIST (3, 2) (Child of 2, 1)
                    = (3, 2) (Child of 2, 1)
                      ID a(3, 2) (Child of 2, 1)
                      = (3, 2) (Child of 2, 1)
                        ID y(3, 2) (Child of 2, 1)
                        ID u(3, 2) (Child of 2, 1)
                    = (3, 2) (Child of 2, 1)
                      ID y(3, 2) (Child of 2, 1)
                      = (3, 2) (Child of 2, 1)
                        ID a(3, 2) (Child of 2, 1)
                        ID w(3, 2) (Child of 2, 1)
                    PRINT (3, 2) (Child of 2, 1)
                      STRING_LITERAL in for loop\n(3, 2) (Child of 2, 1)
        = (1, 2) (Child of 0, 0)
          ID w(1, 2) (Child of 0, 0)
          CALL (1, 2) (Child of 0, 0)
            FUNCTION my_func(1, 2) (Child of 0, 0)
              ID w(1, 2) (Child of 0, 0)
              ID v(1, 2) (Child of 0, 0)
              ID ppp(1, 2) (Child of 0, 0)
        CALL (1, 2) (Child of 0, 0)
          FUNCTION your_func(1, 2) (Child of 0, 0)
        RETURN (1, 2) (Child of 0, 0)
          INT_LITERAL 0(1, 2) (Child of 0, 0)


===========================================================
test2.c finished.
