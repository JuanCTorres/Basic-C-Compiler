                       | 
                       | 
                       |  #This function has locals 
                       | 
                       | 
                       | 
                       |  #This function has locals 
                       | 
                       | #END OF PROG: 2792
                       | 
  0x0000:              | .pos 0
  0x0000:30f4fcff0000  | 	irmovl stack, %esp
  0x0006:30f5fcff0000  | 	irmovl stack, %ebp
  0x000c:808e000000    | 	call main
  0x0011:00            | 	halt
  0x0014:              | .pos 0x14
                       | #(LABEL, my_func, -, -)
  0x0014:              | my_func:
                       | 
  0x0014:30f110000000  | 	irmovl 16, %ecx
  0x001a:6114          | 	subl %ecx, %esp
                       | #NUM PARAMS: 2
  0x001c:500504000000  | 	mrmovl 4(%ebp), %eax
  0x0022:4005f8ffffff  | 	rmmovl %eax, -8(%ebp)
  0x0028:500508000000  | 	mrmovl 8(%ebp), %eax
  0x002e:4005f4ffffff  | 	rmmovl %eax, -12(%ebp)
                       | #(ADD, __T0, q, b)
  0x0034:5005f4ffffff  | 	mrmovl -12(%ebp), %eax
  0x003a:5015f8ffffff  | 	mrmovl -8(%ebp), %ecx
  0x0040:6010          | 	addl %ecx, %eax
  0x0042:400ffc0a0000  | 	rmmovl %eax, 2812
                       | 
                       | #(PRINT, __T0, -, -)
  0x0048:502ffc0a0000  | 	mrmovl 2812, %edx
  0x004e:402f14feff00  | 	rmmovl %edx, 0x00FFFE14
                       | #(RETURN, __12345, -, -)
  0x0054:30f739300000  | 	irmovl 12345, %edi
  0x005a:2054          | 	rrmovl %ebp, %esp
  0x005c:b05f          | 	popl %ebp
  0x005e:30f1f8ffffff  | 	irmovl -8, %ecx
  0x0064:6014          | 	addl %ecx, %esp
  0x0066:90            | 	ret
                       | #(LABEL, your_func, -, -)
  0x0067:              | your_func:
                       | 
  0x0067:30f110000000  | 	irmovl 16, %ecx
  0x006d:6114          | 	subl %ecx, %esp
                       | #NUM PARAMS: 0
                       | #(PRINT, LOL!\n, -, -)
  0x006f:30f2740b0000  | 	irmovl 2932, %edx
  0x0075:402f10feff00  | 	rmmovl %edx, 0x00FFFE10
                       | #(RETURN, __void, -, -)
  0x007b:30f700000000  | 	irmovl 0, %edi
  0x0081:2054          | 	rrmovl %ebp, %esp
  0x0083:b05f          | 	popl %ebp
  0x0085:30f1f8ffffff  | 	irmovl -8, %ecx
  0x008b:6014          | 	addl %ecx, %esp
  0x008d:90            | 	ret
                       | #(LABEL, main, -, -)
  0x008e:              | main:
                       | 
  0x008e:30f134000000  | 	irmovl 52, %ecx
  0x0094:6114          | 	subl %ecx, %esp
                       | #NUM PARAMS: 0
                       | #(DIV, __T1, __4, __5)
  0x0096:30f004000000  | 	irmovl 4, %eax
  0x009c:30f105000000  | 	irmovl 5, %ecx
  0x00a2:6510          | 	divl %ecx, %eax
  0x00a4:400f000b0000  | 	rmmovl %eax, 2816
                       | 
                       | #(NEG, __T2, __T1, -)
  0x00aa:501f000b0000  | 	mrmovl 2816, %ecx
  0x00b0:30f000000000  | 	irmovl 0, %eax
  0x00b6:6110          | 	subl %ecx, %eax
  0x00b8:400f040b0000  | 	rmmovl %eax, 2820
                       | #(ASSIGN, y, __T2, -)
  0x00be:500f040b0000  | 	mrmovl 2820, %eax
  0x00c4:4005e0ffffff  | 	rmmovl %eax, -32(%ebp)
                       | #(ASSIGN, t, y, -)
  0x00ca:5005e0ffffff  | 	mrmovl -32(%ebp), %eax
  0x00d0:4005f0ffffff  | 	rmmovl %eax, -16(%ebp)
                       | #(ASSIGN, a, t, -)
  0x00d6:5005f0ffffff  | 	mrmovl -16(%ebp), %eax
  0x00dc:4005f8ffffff  | 	rmmovl %eax, -8(%ebp)
                       | #(ASSIGN, __T4, a, -)
  0x00e2:5005f8ffffff  | 	mrmovl -8(%ebp), %eax
  0x00e8:400f0c0b0000  | 	rmmovl %eax, 2828
                       | #(ASSIGN, __T5, __10, -)
  0x00ee:30f00a000000  | 	irmovl 10, %eax
  0x00f4:400f100b0000  | 	rmmovl %eax, 2832
                       | #(GT, __T6, __T4, __T5)
  0x00fa:500f0c0b0000  | 	mrmovl 2828, %eax
  0x0100:501f100b0000  | 	mrmovl 2832, %ecx
  0x0106:6110          | 	subl %ecx, %eax
  0x0108:400f140b0000  | 	rmmovl %eax, 2836
                       | #(ifTrue, __L_49_TRUE, __T6, -)
  0x010e:7624010000    | 	jg L_49_TRUE
                       | #(ASSIGN, __T6, __0, -)
  0x0113:30f000000000  | 	irmovl 0, %eax
  0x0119:400f140b0000  | 	rmmovl %eax, 2836
                       | #(GOTO, __L_49_DONE, -, -)
  0x011f:7030010000    | 	jmp L_49_DONE
                       | #(LABEL, __L_49_TRUE, -, -)
  0x0124:              | L_49_TRUE:
                       | 
                       | #(ASSIGN, __T6, __1, -)
  0x0124:30f001000000  | 	irmovl 1, %eax
  0x012a:400f140b0000  | 	rmmovl %eax, 2836
                       | #(LABEL, __L_49_DONE, -, -)
  0x0130:              | L_49_DONE:
                       | 
                       | #(ASSIGN, __T3, __T6, -)
  0x0130:500f140b0000  | 	mrmovl 2836, %eax
  0x0136:400f080b0000  | 	rmmovl %eax, 2824
                       | #(ifFalse, __L_48_ELSE, __T3, -)
  0x013c:500f080b0000  | 	mrmovl 2824, %eax
  0x0142:30f100000000  | 	irmovl 0, %ecx
  0x0148:6110          | 	subl %ecx, %eax
  0x014a:7359020000    | 	je L_48_ELSE
                       | #(ASSIGN, __T7, __1, -)
  0x014f:30f001000000  | 	irmovl 1, %eax
  0x0155:400f180b0000  | 	rmmovl %eax, 2840
                       | #(ifFalse, __L_55_ELSE, __T7, -)
  0x015b:500f180b0000  | 	mrmovl 2840, %eax
  0x0161:30f100000000  | 	irmovl 0, %ecx
  0x0167:6110          | 	subl %ecx, %eax
  0x0169:7348020000    | 	je L_55_ELSE
                       | #(LABEL, __L_60_DO_WHILE_BEGIN, -, -)
  0x016e:              | L_60_DO_WHILE_BEGIN:
                       | 
                       | #(ASSIGN, a, __3, -)
  0x016e:30f003000000  | 	irmovl 3, %eax
  0x0174:4005f8ffffff  | 	rmmovl %eax, -8(%ebp)
                       | #(ASSIGN, a, __4, -)
  0x017a:30f004000000  | 	irmovl 4, %eax
  0x0180:4005f8ffffff  | 	rmmovl %eax, -8(%ebp)
                       | #(ASSIGN, t, __3, -)
  0x0186:30f003000000  | 	irmovl 3, %eax
  0x018c:4005f0ffffff  | 	rmmovl %eax, -16(%ebp)
                       | #(MULT, __T8, a, t)
  0x0192:5005f8ffffff  | 	mrmovl -8(%ebp), %eax
  0x0198:5015f0ffffff  | 	mrmovl -16(%ebp), %ecx
  0x019e:6410          | 	mull %ecx, %eax
  0x01a0:400f1c0b0000  | 	rmmovl %eax, 2844
                       | 
                       | #(SUB, __T9, t, u)
  0x01a6:5005f0ffffff  | 	mrmovl -16(%ebp), %eax
  0x01ac:5015ecffffff  | 	mrmovl -20(%ebp), %ecx
  0x01b2:6110          | 	subl %ecx, %eax
  0x01b4:400f200b0000  | 	rmmovl %eax, 2848
                       | 
                       | #(MULT, __T10, a, __T9)
  0x01ba:5005f8ffffff  | 	mrmovl -8(%ebp), %eax
  0x01c0:501f200b0000  | 	mrmovl 2848, %ecx
  0x01c6:6410          | 	mull %ecx, %eax
  0x01c8:400f240b0000  | 	rmmovl %eax, 2852
                       | 
                       | #(DIV, __T11, __T10, w)
  0x01ce:500f240b0000  | 	mrmovl 2852, %eax
  0x01d4:5015e4ffffff  | 	mrmovl -28(%ebp), %ecx
  0x01da:6510          | 	divl %ecx, %eax
  0x01dc:400f280b0000  | 	rmmovl %eax, 2856
                       | 
                       | #(ASSIGN, __T12, __T11, -)
  0x01e2:500f280b0000  | 	mrmovl 2856, %eax
  0x01e8:400f2c0b0000  | 	rmmovl %eax, 2860
                       | #(ASSIGN, __T13, __10, -)
  0x01ee:30f00a000000  | 	irmovl 10, %eax
  0x01f4:400f300b0000  | 	rmmovl %eax, 2864
                       | #(NEQ, __T14, __T12, __T13)
  0x01fa:500f2c0b0000  | 	mrmovl 2860, %eax
  0x0200:501f300b0000  | 	mrmovl 2864, %ecx
  0x0206:6110          | 	subl %ecx, %eax
  0x0208:400f340b0000  | 	rmmovl %eax, 2868
                       | #(ifTrue, __L_61_TRUE, __T14, -)
  0x020e:7424020000    | 	jne L_61_TRUE
                       | #(ASSIGN, __T14, __0, -)
  0x0213:30f000000000  | 	irmovl 0, %eax
  0x0219:400f340b0000  | 	rmmovl %eax, 2868
                       | #(GOTO, __L_61_DONE, -, -)
  0x021f:7030020000    | 	jmp L_61_DONE
                       | #(LABEL, __L_61_TRUE, -, -)
  0x0224:              | L_61_TRUE:
                       | 
                       | #(ASSIGN, __T14, __1, -)
  0x0224:30f001000000  | 	irmovl 1, %eax
  0x022a:400f340b0000  | 	rmmovl %eax, 2868
                       | #(LABEL, __L_61_DONE, -, -)
  0x0230:              | L_61_DONE:
                       | 
                       | #(ifTrue, __L_60_DO_WHILE_BEGIN, __T14, -)
  0x0230:500f340b0000  | 	mrmovl 2868, %eax
  0x0236:30f100000000  | 	irmovl 0, %ecx
  0x023c:6110          | 	subl %ecx, %eax
  0x023e:746e010000    | 	jne L_60_DO_WHILE_BEGIN
                       | #(GOTO, __L_55_FI, -, -)
  0x0243:7054020000    | 	jmp L_55_FI
                       | #(LABEL, __L_55_ELSE, -, -)
  0x0248:              | L_55_ELSE:
                       | 
                       | #(PRINT, not\n, -, -)
  0x0248:30f2a20b0000  | 	irmovl 2978, %edx
  0x024e:402f10feff00  | 	rmmovl %edx, 0x00FFFE10
                       | #(LABEL, __L_55_FI, -, -)
  0x0254:              | L_55_FI:
                       | 
                       | #(GOTO, __L_48_FI, -, -)
  0x0254:7027030000    | 	jmp L_48_FI
                       | #(LABEL, __L_48_ELSE, -, -)
  0x0259:              | L_48_ELSE:
                       | 
                       | #(ASSIGN, qwert, __123, -)
  0x0259:30f07b000000  | 	irmovl 123, %eax
  0x025f:4005d0ffffff  | 	rmmovl %eax, -48(%ebp)
                       | #(ASSIGN, t, __0, -)
  0x0265:30f000000000  | 	irmovl 0, %eax
  0x026b:4005f0ffffff  | 	rmmovl %eax, -16(%ebp)
                       | #(LABEL, __L_96_FOR_BEGIN, -, -)
  0x0271:              | L_96_FOR_BEGIN:
                       | 
                       | #(ASSIGN, __T15, t, -)
  0x0271:5005f0ffffff  | 	mrmovl -16(%ebp), %eax
  0x0277:400f380b0000  | 	rmmovl %eax, 2872
                       | #(ASSIGN, __T16, __99, -)
  0x027d:30f063000000  | 	irmovl 99, %eax
  0x0283:400f3c0b0000  | 	rmmovl %eax, 2876
                       | #(LT, __T17, __T15, __T16)
  0x0289:500f380b0000  | 	mrmovl 2872, %eax
  0x028f:501f3c0b0000  | 	mrmovl 2876, %ecx
  0x0295:6110          | 	subl %ecx, %eax
  0x0297:400f400b0000  | 	rmmovl %eax, 2880
                       | #(ifTrue, __L_100_TRUE, __T17, -)
  0x029d:72b3020000    | 	jl L_100_TRUE
                       | #(ASSIGN, __T17, __0, -)
  0x02a2:30f000000000  | 	irmovl 0, %eax
  0x02a8:400f400b0000  | 	rmmovl %eax, 2880
                       | #(GOTO, __L_100_DONE, -, -)
  0x02ae:70bf020000    | 	jmp L_100_DONE
                       | #(LABEL, __L_100_TRUE, -, -)
  0x02b3:              | L_100_TRUE:
                       | 
                       | #(ASSIGN, __T17, __1, -)
  0x02b3:30f001000000  | 	irmovl 1, %eax
  0x02b9:400f400b0000  | 	rmmovl %eax, 2880
                       | #(LABEL, __L_100_DONE, -, -)
  0x02bf:              | L_100_DONE:
                       | 
                       | #(ifFalse, __L_96_FOR_END, __T17, -)
  0x02bf:500f400b0000  | 	mrmovl 2880, %eax
  0x02c5:30f100000000  | 	irmovl 0, %ecx
  0x02cb:6110          | 	subl %ecx, %eax
  0x02cd:7327030000    | 	je L_96_FOR_END
                       | #(ASSIGN, y, u, -)
  0x02d2:5005ecffffff  | 	mrmovl -20(%ebp), %eax
  0x02d8:4005e0ffffff  | 	rmmovl %eax, -32(%ebp)
                       | #(ASSIGN, a, y, -)
  0x02de:5005e0ffffff  | 	mrmovl -32(%ebp), %eax
  0x02e4:4005f8ffffff  | 	rmmovl %eax, -8(%ebp)
                       | #(ASSIGN, a, w, -)
  0x02ea:5005e4ffffff  | 	mrmovl -28(%ebp), %eax
  0x02f0:4005f8ffffff  | 	rmmovl %eax, -8(%ebp)
                       | #(ASSIGN, y, a, -)
  0x02f6:5005f8ffffff  | 	mrmovl -8(%ebp), %eax
  0x02fc:4005e0ffffff  | 	rmmovl %eax, -32(%ebp)
                       | #(PRINT, in for loop\n, -, -)
  0x0302:30f2840b0000  | 	irmovl 2948, %edx
  0x0308:402f10feff00  | 	rmmovl %edx, 0x00FFFE10
                       | #(INC, t, -, -)
  0x030e:5005f0ffffff  | 	mrmovl -16(%ebp), %eax
  0x0314:30f101000000  | 	irmovl 1, %ecx
  0x031a:6010          | 	addl %ecx, %eax
  0x031c:4005f0ffffff  | 	rmmovl %eax, -16(%ebp)
                       | #(GOTO, __L_96_FOR_BEGIN, -, -)
  0x0322:7071020000    | 	jmp L_96_FOR_BEGIN
                       | #(LABEL, __L_96_FOR_END, -, -)
  0x0327:              | L_96_FOR_END:
                       | 
                       | #(LABEL, __L_48_FI, -, -)
  0x0327:              | L_48_FI:
                       | 
                       | #(PRECALL, your_func, -, -)
  0x0327:a05f          | 	pushl %ebp
  0x0329:2045          | 	rrmovl %esp, %ebp
                       | #(CALL, your_func, -, -)
  0x032b:8067000000    | 	call your_func
                       | #(POSTCALL, your_func, -, -)
  0x0330:30f114000000  | 	irmovl 20, %ecx
  0x0336:2054          | 	rrmovl %ebp, %esp
  0x0338:6014          | 	addl %ecx, %esp
                       | #(MULT, __T19, __2, a)
  0x033a:30f002000000  | 	irmovl 2, %eax
  0x0340:5015f8ffffff  | 	mrmovl -8(%ebp), %ecx
  0x0346:6410          | 	mull %ecx, %eax
  0x0348:400f480b0000  | 	rmmovl %eax, 2888
                       | 
                       | #(ASSIGN, w, __T19, -)
  0x034e:500f480b0000  | 	mrmovl 2888, %eax
  0x0354:4005e4ffffff  | 	rmmovl %eax, -28(%ebp)
                       | #(ASSIGN, __T20, a, -)
  0x035a:5005f8ffffff  | 	mrmovl -8(%ebp), %eax
  0x0360:400f4c0b0000  | 	rmmovl %eax, 2892
                       | #(PUSH, __T20, -, -)
  0x0366:500f4c0b0000  | 	mrmovl 2892, %eax
  0x036c:a00f          | 	pushl %eax
                       | #(ASSIGN, __T21, t, -)
  0x036e:5005f0ffffff  | 	mrmovl -16(%ebp), %eax
  0x0374:400f500b0000  | 	rmmovl %eax, 2896
                       | #(PUSH, __T21, -, -)
  0x037a:500f500b0000  | 	mrmovl 2896, %eax
  0x0380:a00f          | 	pushl %eax
                       | #(PRECALL, my_func, -, -)
  0x0382:a05f          | 	pushl %ebp
  0x0384:2045          | 	rrmovl %esp, %ebp
                       | #(CALL, my_func, -, -)
  0x0386:8014000000    | 	call my_func
                       | #(POSTCALL, my_func, -, -)
  0x038b:30f114000000  | 	irmovl 20, %ecx
  0x0391:2054          | 	rrmovl %ebp, %esp
  0x0393:6014          | 	addl %ecx, %esp
                       | #(MULT, __T22, __2, __RET_INT)
  0x0395:30f002000000  | 	irmovl 2, %eax
  0x039b:2071          | 	rrmovl %edi, %ecx
  0x039d:6410          | 	mull %ecx, %eax
  0x039f:400f540b0000  | 	rmmovl %eax, 2900
                       | 
                       | #(ASSIGN, w, __T22, -)
  0x03a5:500f540b0000  | 	mrmovl 2900, %eax
  0x03ab:4005e4ffffff  | 	rmmovl %eax, -28(%ebp)
                       | #(ADD, __T23, a, w)
  0x03b1:5005f8ffffff  | 	mrmovl -8(%ebp), %eax
  0x03b7:5015e4ffffff  | 	mrmovl -28(%ebp), %ecx
  0x03bd:6010          | 	addl %ecx, %eax
  0x03bf:400f580b0000  | 	rmmovl %eax, 2904
                       | 
                       | #(MULT, __T24, t, ppp)
  0x03c5:5005f0ffffff  | 	mrmovl -16(%ebp), %eax
  0x03cb:5015dcffffff  | 	mrmovl -36(%ebp), %ecx
  0x03d1:6410          | 	mull %ecx, %eax
  0x03d3:400f5c0b0000  | 	rmmovl %eax, 2908
                       | 
                       | #(SUB, __T25, __T24, y)
  0x03d9:500f5c0b0000  | 	mrmovl 2908, %eax
  0x03df:5015e0ffffff  | 	mrmovl -32(%ebp), %ecx
  0x03e5:6110          | 	subl %ecx, %eax
  0x03e7:400f600b0000  | 	rmmovl %eax, 2912
                       | 
                       | #(SUB, __T26, __T25, u)
  0x03ed:500f600b0000  | 	mrmovl 2912, %eax
  0x03f3:5015ecffffff  | 	mrmovl -20(%ebp), %ecx
  0x03f9:6110          | 	subl %ecx, %eax
  0x03fb:400f640b0000  | 	rmmovl %eax, 2916
                       | 
                       | #(SUB, __T27, __T26, w)
  0x0401:500f640b0000  | 	mrmovl 2916, %eax
  0x0407:5015e4ffffff  | 	mrmovl -28(%ebp), %ecx
  0x040d:6110          | 	subl %ecx, %eax
  0x040f:400f680b0000  | 	rmmovl %eax, 2920
                       | 
                       | #(DIV, __T28, __T23, __T27)
  0x0415:500f580b0000  | 	mrmovl 2904, %eax
  0x041b:501f680b0000  | 	mrmovl 2920, %ecx
  0x0421:6510          | 	divl %ecx, %eax
  0x0423:400f6c0b0000  | 	rmmovl %eax, 2924
                       | 
                       | #(RETURN, __T28, -, -)
  0x0429:507f6c0b0000  | 	mrmovl 2924, %edi
  0x042f:2054          | 	rrmovl %ebp, %esp
  0x0431:b05f          | 	popl %ebp
  0x0433:30f1f8ffffff  | 	irmovl -8, %ecx
  0x0439:6014          | 	addl %ecx, %esp
  0x043b:90            | 	ret
  0x0b74:              | .pos 0xb74    #qwerty
                       | 
  0x0b74:4c            | 	.byte 	0x4c
                       | 
  0x0b75:4f            | 	.byte 	0x4f
                       | 
  0x0b76:4c            | 	.byte 	0x4c
                       | 
  0x0b77:21            | 	.byte 	0x21
                       | 
  0x0b78:0a            | 	.byte 	0xa
                       | 
  0x0b79:00            | 	.byte 	0x0
  0x0b84:              | .pos 0xb84    #qwerty
                       | 
  0x0b84:69            | 	.byte 	0x69
                       | 
  0x0b85:6e            | 	.byte 	0x6e
                       | 
  0x0b86:20            | 	.byte 	0x20
                       | 
  0x0b87:66            | 	.byte 	0x66
                       | 
  0x0b88:6f            | 	.byte 	0x6f
                       | 
  0x0b89:72            | 	.byte 	0x72
                       | 
  0x0b8a:20            | 	.byte 	0x20
                       | 
  0x0b8b:6c            | 	.byte 	0x6c
                       | 
  0x0b8c:6f            | 	.byte 	0x6f
                       | 
  0x0b8d:6f            | 	.byte 	0x6f
                       | 
  0x0b8e:70            | 	.byte 	0x70
                       | 
  0x0b8f:0a            | 	.byte 	0xa
                       | 
  0x0b90:00            | 	.byte 	0x0
  0x0ba2:              | .pos 0xba2    #qwerty
                       | 
  0x0ba2:6e            | 	.byte 	0x6e
                       | 
  0x0ba3:6f            | 	.byte 	0x6f
                       | 
  0x0ba4:74            | 	.byte 	0x74
                       | 
  0x0ba5:0a            | 	.byte 	0xa
                       | 
  0x0ba6:00            | 	.byte 	0x0
                       | 
  0x0bb4:              | .pos 0xbb4   # Start of global var space 
  0xfffc:              | .pos 0x0000FFFC
  0xfffc:              | stack:
