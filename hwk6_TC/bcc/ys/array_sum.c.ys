

 #This function has locals 

#END OF PROG: 5224

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
#(LABEL, sum, -, -)
sum:

	irmovl 20, %ecx
	subl %ecx, %esp
#NUM PARAMS: 1
#### SOMETHING
#(MULT, __T0, __4, __4)
	irmovl 4, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5244

#(ADDR, __T1, b, -)
	irmovl 80, %eax
	addl %ebp, %eax
	rmmovl %eax, 5248
#(SUB, __T2, __T1, __T0)
	mrmovl 5248, %eax
	mrmovl 5244, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5252

#(ASSIGN, __T2, __5, -)
	irmovl 5, %eax
	mrmovl 5252, %ecx
	rmmovl %eax, (%ecx)#(MULT, __T4, __3, __4)
	irmovl 3, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5260

#(ADDR, __T5, b, -)
	irmovl 80, %eax
	addl %ebp, %eax
	rmmovl %eax, 5264
#(SUB, __T6, __T5, __T4)
	mrmovl 5264, %eax
	mrmovl 5260, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5268

#(ASSIGN, __T6, __4, -)
	irmovl 4, %eax
	mrmovl 5268, %ecx
	rmmovl %eax, (%ecx)#(ASSIGN, d, __0, -)
	irmovl 0, %eax
	rmmovl %eax, -12(%ebp)
#(LABEL, __L_18_FOR_BEGIN, -, -)
L_18_FOR_BEGIN:

#(ASSIGN, __T8, d, -)
	mrmovl -12(%ebp), %eax
	rmmovl %eax, 5276
#(ASSIGN, __T9, __5, -)
	irmovl 5, %eax
	rmmovl %eax, 5280
#(LT, __T10, __T8, __T9)
	mrmovl 5276, %eax
	mrmovl 5280, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5284
#(ifTrue, __L_22_TRUE, __T10, -)
	jl L_22_TRUE
#(ASSIGN, __T10, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5284
#(GOTO, __L_22_DONE, -, -)
	jmp L_22_DONE
#(LABEL, __L_22_TRUE, -, -)
L_22_TRUE:

#(ASSIGN, __T10, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5284
#(LABEL, __L_22_DONE, -, -)
L_22_DONE:

#(ifFalse, __L_18_FOR_END, __T10, -)
	mrmovl 5284, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_18_FOR_END
#(MULT, __T12, d, __4)
	mrmovl -12(%ebp), %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5292

#(ADDR, __T13, b, -)
	irmovl 80, %eax
	addl %ebp, %eax
	rmmovl %eax, 5296
#(SUB, __T14, __T13, __T12)
	mrmovl 5296, %eax
	mrmovl 5292, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5300

#(DEREF, __T11, __T14, -)
	mrmovl 5300, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5288
#(MULT, __T17, d, __4)
	mrmovl -12(%ebp), %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5312

#(ADDR, __T18, b, -)
	irmovl 80, %eax
	addl %ebp, %eax
	rmmovl %eax, 5316
#(SUB, __T19, __T18, __T17)
	mrmovl 5316, %eax
	mrmovl 5312, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5320

#(DEREF, __T16, __T19, -)
	mrmovl 5320, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5308
#(ADD, __T21, c, __T16)
	mrmovl -8(%ebp), %eax
	mrmovl 5308, %ecx
	addl %ecx, %eax
	rmmovl %eax, 5328

#(ASSIGN, c, __T21, -)
	mrmovl 5328, %eax
	rmmovl %eax, -8(%ebp)
#(INC, d, -, -)
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -12(%ebp)
#(GOTO, __L_18_FOR_BEGIN, -, -)
	jmp L_18_FOR_BEGIN
#(LABEL, __L_18_FOR_END, -, -)
L_18_FOR_END:

#(RETURN, c, -, -)
	mrmovl -8(%ebp), %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
#(LABEL, main, -, -)
main:

	irmovl 88, %ecx
	subl %ecx, %esp
#NUM PARAMS: 0
#### SOMETHING
#(MULT, __T23, __0, __4)
	irmovl 0, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5336

#(ADDR, __T24, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5340
#(SUB, __T25, __T24, __T23)
	mrmovl 5340, %eax
	mrmovl 5336, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5344

#(ASSIGN, __T25, __1, -)
	irmovl 1, %eax
	mrmovl 5344, %ecx
	rmmovl %eax, (%ecx)#(MULT, __T27, __1, __4)
	irmovl 1, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5352

#(ADDR, __T28, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5356
#(SUB, __T29, __T28, __T27)
	mrmovl 5356, %eax
	mrmovl 5352, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5360

#(ASSIGN, __T29, __2, -)
	irmovl 2, %eax
	mrmovl 5360, %ecx
	rmmovl %eax, (%ecx)#(MULT, __T31, __2, __4)
	irmovl 2, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5368

#(ADDR, __T32, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5372
#(SUB, __T33, __T32, __T31)
	mrmovl 5372, %eax
	mrmovl 5368, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5376

#(ASSIGN, __T33, __3, -)
	irmovl 3, %eax
	mrmovl 5376, %ecx
	rmmovl %eax, (%ecx)#(PRINT, Passing array i as a parameter to my_f(). Should return 8, -, -)
	irmovl 5868, %edx
	rmmovl %edx, 0x00FFFE10
#(MULT, __T36, __0, __4)
	irmovl 0, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5388

#(ADDR, __T37, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5392
#(SUB, __T38, __T37, __T36)
	mrmovl 5392, %eax
	mrmovl 5388, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5396

#(DEREF, __T35, __T38, -)
	mrmovl 5396, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5384
#(ASSIGN, __T40, __T35, -)
	mrmovl 5384, %eax
	rmmovl %eax, 5404
#(PUSH, __T40, -, -)
	mrmovl 5404, %eax
	pushl %eax
#(MULT, __T42, __1, __4)
	irmovl 1, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5412

#(ADDR, __T43, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5416
#(SUB, __T44, __T43, __T42)
	mrmovl 5416, %eax
	mrmovl 5412, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5420

#(DEREF, __T41, __T44, -)
	mrmovl 5420, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5408
#(ASSIGN, __T46, __T41, -)
	mrmovl 5408, %eax
	rmmovl %eax, 5428
#(PUSH, __T46, -, -)
	mrmovl 5428, %eax
	pushl %eax
#(MULT, __T48, __2, __4)
	irmovl 2, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5436

#(ADDR, __T49, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5440
#(SUB, __T50, __T49, __T48)
	mrmovl 5440, %eax
	mrmovl 5436, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5444

#(DEREF, __T47, __T50, -)
	mrmovl 5444, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5432
#(ASSIGN, __T52, __T47, -)
	mrmovl 5432, %eax
	rmmovl %eax, 5452
#(PUSH, __T52, -, -)
	mrmovl 5452, %eax
	pushl %eax
#(MULT, __T54, __3, __4)
	irmovl 3, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5460

#(ADDR, __T55, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5464
#(SUB, __T56, __T55, __T54)
	mrmovl 5464, %eax
	mrmovl 5460, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5468

#(DEREF, __T53, __T56, -)
	mrmovl 5468, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5456
#(ASSIGN, __T58, __T53, -)
	mrmovl 5456, %eax
	rmmovl %eax, 5476
#(PUSH, __T58, -, -)
	mrmovl 5476, %eax
	pushl %eax
#(MULT, __T60, __4, __4)
	irmovl 4, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5484

#(ADDR, __T61, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5488
#(SUB, __T62, __T61, __T60)
	mrmovl 5488, %eax
	mrmovl 5484, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5492

#(DEREF, __T59, __T62, -)
	mrmovl 5492, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5480
#(ASSIGN, __T64, __T59, -)
	mrmovl 5480, %eax
	rmmovl %eax, 5500
#(PUSH, __T64, -, -)
	mrmovl 5500, %eax
	pushl %eax
#(MULT, __T66, __5, __4)
	irmovl 5, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5508

#(ADDR, __T67, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5512
#(SUB, __T68, __T67, __T66)
	mrmovl 5512, %eax
	mrmovl 5508, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5516

#(DEREF, __T65, __T68, -)
	mrmovl 5516, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5504
#(ASSIGN, __T70, __T65, -)
	mrmovl 5504, %eax
	rmmovl %eax, 5524
#(PUSH, __T70, -, -)
	mrmovl 5524, %eax
	pushl %eax
#(MULT, __T72, __6, __4)
	irmovl 6, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5532

#(ADDR, __T73, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5536
#(SUB, __T74, __T73, __T72)
	mrmovl 5536, %eax
	mrmovl 5532, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5540

#(DEREF, __T71, __T74, -)
	mrmovl 5540, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5528
#(ASSIGN, __T76, __T71, -)
	mrmovl 5528, %eax
	rmmovl %eax, 5548
#(PUSH, __T76, -, -)
	mrmovl 5548, %eax
	pushl %eax
#(MULT, __T78, __7, __4)
	irmovl 7, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5556

#(ADDR, __T79, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5560
#(SUB, __T80, __T79, __T78)
	mrmovl 5560, %eax
	mrmovl 5556, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5564

#(DEREF, __T77, __T80, -)
	mrmovl 5564, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5552
#(ASSIGN, __T82, __T77, -)
	mrmovl 5552, %eax
	rmmovl %eax, 5572
#(PUSH, __T82, -, -)
	mrmovl 5572, %eax
	pushl %eax
#(MULT, __T84, __8, __4)
	irmovl 8, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5580

#(ADDR, __T85, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5584
#(SUB, __T86, __T85, __T84)
	mrmovl 5584, %eax
	mrmovl 5580, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5588

#(DEREF, __T83, __T86, -)
	mrmovl 5588, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5576
#(ASSIGN, __T88, __T83, -)
	mrmovl 5576, %eax
	rmmovl %eax, 5596
#(PUSH, __T88, -, -)
	mrmovl 5596, %eax
	pushl %eax
#(MULT, __T90, __9, __4)
	irmovl 9, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5604

#(ADDR, __T91, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5608
#(SUB, __T92, __T91, __T90)
	mrmovl 5608, %eax
	mrmovl 5604, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5612

#(DEREF, __T89, __T92, -)
	mrmovl 5612, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5600
#(ASSIGN, __T94, __T89, -)
	mrmovl 5600, %eax
	rmmovl %eax, 5620
#(PUSH, __T94, -, -)
	mrmovl 5620, %eax
	pushl %eax
#(MULT, __T96, __10, __4)
	irmovl 10, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5628

#(ADDR, __T97, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5632
#(SUB, __T98, __T97, __T96)
	mrmovl 5632, %eax
	mrmovl 5628, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5636

#(DEREF, __T95, __T98, -)
	mrmovl 5636, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5624
#(ASSIGN, __T100, __T95, -)
	mrmovl 5624, %eax
	rmmovl %eax, 5644
#(PUSH, __T100, -, -)
	mrmovl 5644, %eax
	pushl %eax
#(MULT, __T102, __11, __4)
	irmovl 11, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5652

#(ADDR, __T103, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5656
#(SUB, __T104, __T103, __T102)
	mrmovl 5656, %eax
	mrmovl 5652, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5660

#(DEREF, __T101, __T104, -)
	mrmovl 5660, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5648
#(ASSIGN, __T106, __T101, -)
	mrmovl 5648, %eax
	rmmovl %eax, 5668
#(PUSH, __T106, -, -)
	mrmovl 5668, %eax
	pushl %eax
#(MULT, __T108, __12, __4)
	irmovl 12, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5676

#(ADDR, __T109, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5680
#(SUB, __T110, __T109, __T108)
	mrmovl 5680, %eax
	mrmovl 5676, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5684

#(DEREF, __T107, __T110, -)
	mrmovl 5684, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5672
#(ASSIGN, __T112, __T107, -)
	mrmovl 5672, %eax
	rmmovl %eax, 5692
#(PUSH, __T112, -, -)
	mrmovl 5692, %eax
	pushl %eax
#(MULT, __T114, __13, __4)
	irmovl 13, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5700

#(ADDR, __T115, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5704
#(SUB, __T116, __T115, __T114)
	mrmovl 5704, %eax
	mrmovl 5700, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5708

#(DEREF, __T113, __T116, -)
	mrmovl 5708, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5696
#(ASSIGN, __T118, __T113, -)
	mrmovl 5696, %eax
	rmmovl %eax, 5716
#(PUSH, __T118, -, -)
	mrmovl 5716, %eax
	pushl %eax
#(MULT, __T120, __14, __4)
	irmovl 14, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5724

#(ADDR, __T121, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5728
#(SUB, __T122, __T121, __T120)
	mrmovl 5728, %eax
	mrmovl 5724, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5732

#(DEREF, __T119, __T122, -)
	mrmovl 5732, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5720
#(ASSIGN, __T124, __T119, -)
	mrmovl 5720, %eax
	rmmovl %eax, 5740
#(PUSH, __T124, -, -)
	mrmovl 5740, %eax
	pushl %eax
#(MULT, __T126, __15, __4)
	irmovl 15, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5748

#(ADDR, __T127, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5752
#(SUB, __T128, __T127, __T126)
	mrmovl 5752, %eax
	mrmovl 5748, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5756

#(DEREF, __T125, __T128, -)
	mrmovl 5756, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5744
#(ASSIGN, __T130, __T125, -)
	mrmovl 5744, %eax
	rmmovl %eax, 5764
#(PUSH, __T130, -, -)
	mrmovl 5764, %eax
	pushl %eax
#(MULT, __T132, __16, __4)
	irmovl 16, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5772

#(ADDR, __T133, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5776
#(SUB, __T134, __T133, __T132)
	mrmovl 5776, %eax
	mrmovl 5772, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5780

#(DEREF, __T131, __T134, -)
	mrmovl 5780, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5768
#(ASSIGN, __T136, __T131, -)
	mrmovl 5768, %eax
	rmmovl %eax, 5788
#(PUSH, __T136, -, -)
	mrmovl 5788, %eax
	pushl %eax
#(MULT, __T138, __17, __4)
	irmovl 17, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5796

#(ADDR, __T139, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5800
#(SUB, __T140, __T139, __T138)
	mrmovl 5800, %eax
	mrmovl 5796, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5804

#(DEREF, __T137, __T140, -)
	mrmovl 5804, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5792
#(ASSIGN, __T142, __T137, -)
	mrmovl 5792, %eax
	rmmovl %eax, 5812
#(PUSH, __T142, -, -)
	mrmovl 5812, %eax
	pushl %eax
#(MULT, __T144, __18, __4)
	irmovl 18, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5820

#(ADDR, __T145, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5824
#(SUB, __T146, __T145, __T144)
	mrmovl 5824, %eax
	mrmovl 5820, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5828

#(DEREF, __T143, __T146, -)
	mrmovl 5828, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5816
#(ASSIGN, __T148, __T143, -)
	mrmovl 5816, %eax
	rmmovl %eax, 5836
#(PUSH, __T148, -, -)
	mrmovl 5836, %eax
	pushl %eax
#(MULT, __T150, __19, __4)
	irmovl 19, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5844

#(ADDR, __T151, i, -)
	irmovl -8, %eax
	addl %ebp, %eax
	rmmovl %eax, 5848
#(SUB, __T152, __T151, __T150)
	mrmovl 5848, %eax
	mrmovl 5844, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5852

#(DEREF, __T149, __T152, -)
	mrmovl 5852, %ecx
	mrmovl (%ecx), %eax
	rmmovl %eax, 5840
#(ASSIGN, __T154, __T149, -)
	mrmovl 5840, %eax
	rmmovl %eax, 5860
#(PUSH, __T154, -, -)
	mrmovl 5860, %eax
	pushl %eax
#(PRECALL, sum, -, -)
	pushl %ebp
	rrmovl %esp, %ebp
#(CALL, sum, -, -)
	call sum
#(POSTCALL, sum, -, -)
	irmovl 24, %ecx
	rrmovl %ebp, %esp
	addl %ecx, %esp
#(PRINT, __RET_INT, -, -)
	rrmovl %edi, %edx
	rmmovl %edx, 0x00FFFE14
#(RETURN, __0, -, -)
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
.pos 0x16ec    #qwerty

	.byte 	0x50

	.byte 	0x61

	.byte 	0x73

	.byte 	0x73

	.byte 	0x69

	.byte 	0x6e

	.byte 	0x67

	.byte 	0x20

	.byte 	0x61

	.byte 	0x72

	.byte 	0x72

	.byte 	0x61

	.byte 	0x79

	.byte 	0x20

	.byte 	0x69

	.byte 	0x20

	.byte 	0x61

	.byte 	0x73

	.byte 	0x20

	.byte 	0x61

	.byte 	0x20

	.byte 	0x70

	.byte 	0x61

	.byte 	0x72

	.byte 	0x61

	.byte 	0x6d

	.byte 	0x65

	.byte 	0x74

	.byte 	0x65

	.byte 	0x72

	.byte 	0x20

	.byte 	0x74

	.byte 	0x6f

	.byte 	0x20

	.byte 	0x6d

	.byte 	0x79

	.byte 	0x5f

	.byte 	0x66

	.byte 	0x28

	.byte 	0x29

	.byte 	0x2e

	.byte 	0x20

	.byte 	0x53

	.byte 	0x68

	.byte 	0x6f

	.byte 	0x75

	.byte 	0x6c

	.byte 	0x64

	.byte 	0x20

	.byte 	0x72

	.byte 	0x65

	.byte 	0x74

	.byte 	0x75

	.byte 	0x72

	.byte 	0x6e

	.byte 	0x20

	.byte 	0x38

	.byte 	0x0

.pos 0x1766   # Start of global var space 
.pos 0x0000FFFC
stack:
