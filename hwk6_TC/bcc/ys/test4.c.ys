#END OF PROG: 1232

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
#(LABEL, main, -, -)
main:

	irmovl 464, %ecx
	subl %ecx, %esp
#NUM PARAMS: 3
	mrmovl 4(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl 8(%ebp), %eax
	rmmovl %eax, -12(%ebp)
	mrmovl 12(%ebp), %eax
	rmmovl %eax, -16(%ebp)
#(ASSIGN, __T1, e, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, 1256
#(ASSIGN, __T2, f, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 1260
#(NEQ, __T3, __T1, __T2)
	mrmovl 1256, %eax
	mrmovl 1260, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1264
#(ifTrue, __L_23_TRUE, __T3, -)
	jne L_23_TRUE
#(ASSIGN, __T3, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1264
#(GOTO, __L_23_DONE, -, -)
	jmp L_23_DONE
#(LABEL, __L_23_TRUE, -, -)
L_23_TRUE:

#(ASSIGN, __T3, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1264
#(LABEL, __L_23_DONE, -, -)
L_23_DONE:

#(ASSIGN, __T0, __T3, -)
	mrmovl 1264, %eax
	rmmovl %eax, 1252
#(ifFalse, __L_22_FI, __T0, -)
	mrmovl 1252, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_22_FI
#(LABEL, __L_34_WHILE_BEGIN, -, -)
L_34_WHILE_BEGIN:

#(ASSIGN, __T4, h, -)
	mrmovl -40(%ebp), %eax
	rmmovl %eax, 1268
#(ASSIGN, __T5, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1272
#(NEQ, __T6, __T4, __T5)
	mrmovl 1268, %eax
	mrmovl 1272, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1276
#(ifTrue, __L_35_TRUE, __T6, -)
	jne L_35_TRUE
#(ASSIGN, __T6, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1276
#(GOTO, __L_35_DONE, -, -)
	jmp L_35_DONE
#(LABEL, __L_35_TRUE, -, -)
L_35_TRUE:

#(ASSIGN, __T6, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1276
#(LABEL, __L_35_DONE, -, -)
L_35_DONE:

#(ifFalse, __L_34_WHILE_END, __T6, -)
	mrmovl 1276, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_34_WHILE_END
#(LABEL, __L_42_FOR_BEGIN, -, -)
L_42_FOR_BEGIN:

#(ASSIGN, __T7, h, -)
	mrmovl -40(%ebp), %eax
	rmmovl %eax, 1280
#(ASSIGN, __T8, __10, -)
	irmovl 10, %eax
	rmmovl %eax, 1284
#(GT, __T9, __T7, __T8)
	mrmovl 1280, %eax
	mrmovl 1284, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1288
#(ifTrue, __L_44_TRUE, __T9, -)
	jg L_44_TRUE
#(ASSIGN, __T9, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1288
#(GOTO, __L_44_DONE, -, -)
	jmp L_44_DONE
#(LABEL, __L_44_TRUE, -, -)
L_44_TRUE:

#(ASSIGN, __T9, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1288
#(LABEL, __L_44_DONE, -, -)
L_44_DONE:

#(ifFalse, __L_42_FOR_END, __T9, -)
	mrmovl 1288, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_42_FOR_END
#(INC, h, -, -)
	mrmovl -40(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -40(%ebp)
#(GOTO, __L_42_FOR_BEGIN, -, -)
	jmp L_42_FOR_BEGIN
#(LABEL, __L_42_FOR_END, -, -)
L_42_FOR_END:

#(GOTO, __L_34_WHILE_BEGIN, -, -)
	jmp L_34_WHILE_BEGIN
#(LABEL, __L_34_WHILE_END, -, -)
L_34_WHILE_END:

#(LABEL, __L_22_FI, -, -)
L_22_FI:

#(RETURN, __void, -, -)
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret

.pos 0x518   # Start of global var space 
.pos 0x0000FFFC
stack:
