Result of test done to parser.

test1.c BEGIN.
===========================================================






ROOT (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  = (uid: N1) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
    ID (uid: N2) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 a [scope (0,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
    INT_LITERAL (uid: N3) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
  ID (uid: N4) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 b [scope (0,0) <- (0,0)] declared at line 2  (type: INT_TYPE) 
  = (uid: N5) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
    ID (uid: N6) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 c [scope (0,0) <- (0,0)] declared at line 3  (type: INT_TYPE) 
    INT_LITERAL (uid: N7) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 23 (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N8) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 main  (0 params:)[scope (0,0) <- (0,0)] declared at line 6  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N9) inferred ret type: ROOT isDecl = 0, ignore = 0 
    SEQ (uid: N10) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N11) inferred ret type: ROOT isDecl = 0, ignore = 0 
        ID (uid: N12) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        ID (uid: N13) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        ID (uid: N14) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        ID (uid: N15) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 d [scope (1,0) <- (0,0)] declared at line 14  (type: INT_TYPE) 
        ID (uid: N16) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 e [scope (1,0) <- (0,0)] declared at line 14  (type: INT_TYPE) 
        ID (uid: N17) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 f [scope (1,0) <- (0,0)] declared at line 14  (type: INT_TYPE) 
        = (uid: N18) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N19) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 h [scope (1,0) <- (0,0)] declared at line 15  (type: INT_TYPE) 
          INT_LITERAL (uid: N20) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 2 (type: INT_TYPE) 
        = (uid: N21) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N22) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 i [scope (1,0) <- (0,0)] declared at line 15  (type: INT_TYPE) 
          INT_LITERAL (uid: N23) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 3 (type: INT_TYPE) 
        ARRAY_TYPE (uid: N24) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 cc [scope (1,0) <- (0,0)] declared at line 16  (type: INT_TYPE) 
          INT_LITERAL (uid: N25) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 12 (type: INT_TYPE) 
        ARRAY_TYPE (uid: N26) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 dd [scope (1,0) <- (0,0)] declared at line 16  (type: INT_TYPE) 
          INT_LITERAL (uid: N27) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 5 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N28) inferred ret type: ROOT isDecl = 0, ignore = 0 
        = (uid: N29) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ARRAY_TYPE (uid: N30) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 cc [scope (1,0) <- (0,0)] declared at line 16  (type: INT_TYPE) 
            * (uid: N31) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
              ID (uid: N32) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
              ID (uid: N33) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          * (uid: N34) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N35) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N36) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        PRINT (uid: N37) inferred ret type: ROOT isDecl = 0, ignore = 0 
          STRING_LITERAL (uid: N38) inferred ret type: ROOT isDecl = 0, ignore = 0 test basics!\n 
        READ (uid: N39) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N40) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 f [scope (1,0) <- (0,0)] declared at line 14  (type: INT_TYPE) 
        PRINT (uid: N41) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N42) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 f [scope (1,0) <- (0,0)] declared at line 14  (type: INT_TYPE) 
        = (uid: N43) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N44) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          - (uid: N45) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N46) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
            ID (uid: N47) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N48) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N49) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          + (uid: N50) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N51) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            INT_LITERAL (uid: N52) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
        = (uid: N53) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N54) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          - (uid: N55) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N56) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 5 (type: INT_TYPE) 
            INT_LITERAL (uid: N57) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 5 (type: INT_TYPE) 
        = (uid: N58) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N59) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          * (uid: N60) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N61) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
            INT_LITERAL (uid: N62) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -6 (type: INT_TYPE) 
        = (uid: N63) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N64) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          - (uid: N65) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N66) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -2 (type: INT_TYPE) 
            INT_LITERAL (uid: N67) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 9 (type: INT_TYPE) 
        = (uid: N68) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N69) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          + (uid: N70) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N71) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
            INT_LITERAL (uid: N72) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 7 (type: INT_TYPE) 
        = (uid: N73) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N74) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          - (uid: N75) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N76) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
            INT_LITERAL (uid: N77) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -10 (type: INT_TYPE) 
        = (uid: N78) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N79) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          - (uid: N80) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            INT_LITERAL (uid: N81) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 22 (type: INT_TYPE) 
            INT_LITERAL (uid: N82) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -88 (type: INT_TYPE) 
        = (uid: N83) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N84) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          INT_LITERAL (uid: N85) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 5 (type: INT_TYPE) 
        = (uid: N86) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N87) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          * (uid: N88) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N89) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            UNARY - (uid: N90) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
              ID (uid: N91) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N92) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N93) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          + (uid: N94) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N95) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N96) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N97) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N98) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          - (uid: N99) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N100) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N101) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N102) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N103) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          * (uid: N104) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N105) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N106) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N107) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N108) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          / (uid: N109) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N110) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N111) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N112) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N113) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          % (uid: N114) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N115) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N116) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N117) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N118) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          < (uid: N119) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N120) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N121) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N122) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N123) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          <= (uid: N124) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N125) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N126) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N127) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N128) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          > (uid: N129) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N130) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N131) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N132) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N133) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          >= (uid: N134) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N135) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N136) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N137) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N138) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          == (uid: N139) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N140) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N141) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N142) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N143) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          != (uid: N144) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N145) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N146) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N147) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N148) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          && (uid: N149) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N150) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N151) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N152) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N153) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          || (uid: N154) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N155) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N156) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N157) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N158) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          ! (uid: N159) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N160) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N161) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N162) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          UNARY - (uid: N163) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N164) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N165) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N166) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          INT_LITERAL (uid: N167) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 15 (type: INT_TYPE) 
        = (uid: N168) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N169) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          ++ (uid: N170) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N171) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        PRINT (uid: N172) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N173) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N174) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N175) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          -- (uid: N176) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N177) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
        = (uid: N178) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N179) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          % (uid: N180) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N181) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            INT_LITERAL (uid: N182) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 5 (type: INT_TYPE) 
        = (uid: N183) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N184) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          INT_LITERAL (uid: N185) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -23 (type: INT_TYPE) 
        FOR (uid: N186) inferred ret type: ROOT isDecl = 0, ignore = 0 
          = (uid: N187) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N188) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            INT_LITERAL (uid: N189) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 100 (type: INT_TYPE) 
          < (uid: N190) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N191) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            INT_LITERAL (uid: N192) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 200 (type: INT_TYPE) 
          ++ (uid: N193) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N194) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
          SEQ (uid: N195) inferred ret type: ROOT isDecl = 0, ignore = 0 
            LOCAL_DECLARATIONS (uid: N196) inferred ret type: ROOT isDecl = 0, ignore = 0 
              = (uid: N197) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                ID (uid: N198) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 zz [scope (2,0) <- (1,0)] declared at line 66  (type: INT_TYPE) 
                INT_LITERAL (uid: N199) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -100 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N200) inferred ret type: ROOT isDecl = 0, ignore = 0 
              + (uid: N201) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                ID (uid: N202) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (2,0) <- (1,0)] declared at line 13  (type: INT_TYPE) 
                ID (uid: N203) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (2,0) <- (1,0)] declared at line 13  (type: INT_TYPE) 
              = (uid: N204) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                ID (uid: N205) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (2,0) <- (1,0)] declared at line 13  (type: INT_TYPE) 
                + (uid: N206) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                  ID (uid: N207) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 e [scope (2,0) <- (1,0)] declared at line 14  (type: INT_TYPE) 
                  ID (uid: N208) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 f [scope (2,0) <- (1,0)] declared at line 14  (type: INT_TYPE) 
        WHILE (uid: N209) inferred ret type: ROOT isDecl = 0, ignore = 0 
          == (uid: N210) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            - (uid: N211) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
              / (uid: N212) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                ID (uid: N213) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
                INT_LITERAL (uid: N214) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 5 (type: INT_TYPE) 
              + (uid: N215) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                INT_LITERAL (uid: N216) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -3 (type: INT_TYPE) 
                INT_LITERAL (uid: N217) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 -8 (type: INT_TYPE) 
            INT_LITERAL (uid: N218) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 100 (type: INT_TYPE) 
          SEQ (uid: N219) inferred ret type: ROOT isDecl = 0, ignore = 0 
            LOCAL_DECLARATIONS (uid: N220) inferred ret type: ROOT isDecl = 0, ignore = 0 
              ID (uid: N221) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 tt [scope (2,1) <- (1,0)] declared at line 72  (type: INT_TYPE) 
              ARRAY_TYPE (uid: N222) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 uu [scope (2,1) <- (1,0)] declared at line 72  (type: INT_TYPE) 
                INT_LITERAL (uid: N223) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 10 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N224) inferred ret type: ROOT isDecl = 0, ignore = 0 
              PRINT (uid: N225) inferred ret type: ROOT isDecl = 0, ignore = 0 
                * (uid: N226) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                  INT_LITERAL (uid: N227) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 12 (type: INT_TYPE) 
                  INT_LITERAL (uid: N228) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 21 (type: INT_TYPE) 
        DO_WHILE (uid: N229) inferred ret type: ROOT isDecl = 0, ignore = 0 
          INT_LITERAL (uid: N230) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
          SEQ (uid: N231) inferred ret type: ROOT isDecl = 0, ignore = 0 
            LOCAL_DECLARATIONS (uid: N232) inferred ret type: ROOT isDecl = 0, ignore = 0 
              ID (uid: N233) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 asd [scope (2,2) <- (1,0)] declared at line 78  (type: INT_TYPE) 
              ID (uid: N234) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 dsa [scope (2,2) <- (1,0)] declared at line 79  (type: INT_TYPE) 
            STATEMENT_LIST (uid: N235) inferred ret type: ROOT isDecl = 0, ignore = 0 
              = (uid: N236) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
                ID (uid: N237) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 asd [scope (2,2) <- (1,0)] declared at line 78  (type: INT_TYPE) 
                ID (uid: N238) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 dsa [scope (2,2) <- (1,0)] declared at line 79  (type: INT_TYPE) 
        IF_ELSE_STMT (uid: N239) inferred ret type: ROOT isDecl = 0, ignore = 0 
          == (uid: N240) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            * (uid: N241) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
              ID (uid: N242) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
              ID (uid: N243) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 b [scope (1,0) <- (0,0)] declared at line 13  (type: INT_TYPE) 
            ID (uid: N244) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 d [scope (1,0) <- (0,0)] declared at line 14  (type: INT_TYPE) 
          SEQ (uid: N245) inferred ret type: ROOT isDecl = 0, ignore = 0 
            LOCAL_DECLARATIONS (uid: N246) inferred ret type: ROOT isDecl = 0, ignore = 0 
              ID (uid: N247) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 x [scope (2,3) <- (1,0)] declared at line 84  (type: INT_TYPE) 
            STATEMENT_LIST (uid: N248) inferred ret type: ROOT isDecl = 0, ignore = 0 
          SEQ (uid: N249) inferred ret type: ROOT isDecl = 0, ignore = 0 
            LOCAL_DECLARATIONS (uid: N250) inferred ret type: ROOT isDecl = 0,0
61
67
 ignore = 0 
              ID (uid: N251) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 y [scope (2,4) <- (1,0)] declared at line 87  (type: INT_TYPE) 
            STATEMENT_LIST (uid: N252) inferred ret type: ROOT isDecl = 0, ignore = 0 
        RETURN (uid: N253) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,0) <- (0,0)]return to main at line 6 
          INT_LITERAL (uid: N254) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
(0-0) contains:
  VAR_INT __-88 (offset: 0 or addr: 0)
  VAR_INT __-2 (offset: 0 or addr: 0)
  VAR_INT __-3 (offset: 0 or addr: 0)
  VAR_INT __-6 (offset: 0 or addr: 0)
  VAR_INT __-8 (offset: 0 or addr: 0)
  VAR_INT __100 (offset: 0 or addr: 0)
  VAR_INT __-100 (offset: 0 or addr: 0)
  VAR_INT __10 (offset: 0 or addr: 0)
  VAR_INT __12 (offset: 0 or addr: 0)
  VAR_INT __15 (offset: 0 or addr: 0)
  VAR_INT __200 (offset: 0 or addr: 0)
  VAR_INT __-10 (offset: 0 or addr: 0)
  VAR_INT __21 (offset: 0 or addr: 0)
  VAR_INT __22 (offset: 0 or addr: 0)
  VAR_INT __23 (offset: 0 or addr: 0)
  VAR_INT __-23 (offset: 0 or addr: 0)
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __2 (offset: 0 or addr: 0)
  VAR_INT __3 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
  VAR_INT __5 (offset: 0 or addr: 0)
  VAR_INT __7 (offset: 0 or addr: 0)
  VAR_INT __9 (offset: 0 or addr: 0)
  STRING test basics!\n
There are 199 entries
0: (ASSIGN, a, __0, -)
1: (ASSIGN, c, __23, -)
2: (LABEL, main, -, -)
3: (ASSIGN, h, __2, -)
4: (ASSIGN, i, __3, -)
5: (MULT, __T0, a, b)
6: (MULT, __T1, a, b)
7: (MULT, __T2, __T0, __4)
8: (ADDR, __T3, cc, -)
9: (SUB, __T4, __T3, __T2)
10: (ASSIGN, __T4, __T1, -)
11: (PRINT, test basics!\n, -, -)
12: (READ, f, -, -)
13: (PRINT, f, -, -)
14: (SUB, __T6, __1, b)
15: (ASSIGN, c, __T6, -)
16: (ADD, __T7, b, __1)
17: (ASSIGN, c, __T7, -)
18: (SUB, __T8, __5, __5)
19: (ASSIGN, c, __T8, -)
20: (MULT, __T9, __1, __-6)
21: (ASSIGN, c, __T9, -)
22: (SUB, __T10, __-2, __9)
23: (ASSIGN, c, __T10, -)
24: (ADD, __T11, __1, __7)
25: (ASSIGN, c, __T11, -)
26: (SUB, __T12, __1, __-10)
27: (ASSIGN, c, __T12, -)
28: (SUB, __T13, __22, __-88)
29: (ASSIGN, c, __T13, -)
30: (ASSIGN, b, __5, -)
31: (NEG, __T14, b, -)
32: (MULT, __T15, a, __T14)
33: (ASSIGN, c, __T15, -)
34: (ADD, __T16, a, b)
35: (ASSIGN, c, __T16, -)
36: (SUB, __T17, a, b)
37: (ASSIGN, c, __T17, -)
38: (MULT, __T18, a, b)
39: (ASSIGN, c, __T18, -)
40: (DIV, __T19, a, b)
41: (ASSIGN, c, __T19, -)
42: (MOD, __T20, a, b)
43: (ASSIGN, c, __T20, -)
44: (ASSIGN, __T21, a, -)
45: (ASSIGN, __T22, b, -)
46: (LT, __T23, __T21, __T22)
47: (ifTrue, __L_119_TRUE, __T23, -)
48: (ASSIGN, __T23, __0, -)
49: (GOTO, __L_119_DONE, -, -)
50: (LABEL, __L_119_TRUE, -, -)
51: (ASSIGN, __T23, __1, -)
52: (LABEL, __L_119_DONE, -, -)
53: (ASSIGN, c, __T23, -)
54: (ASSIGN, __T24, a, -)
55: (ASSIGN, __T25, b, -)
56: (LTEQ, __T26, __T24, __T25)
57: (ifTrue, __L_124_TRUE, __T26, -)
58: (ASSIGN, __T26, __0, -)
59: (GOTO, __L_124_DONE, -, -)
60: (LABEL, __L_124_TRUE, -, -)
61: (ASSIGN, __T26, __1, -)
62: (LABEL, __L_124_DONE, -, -)
63: (ASSIGN, c, __T26, -)
64: (ASSIGN, __T27, a, -)
65: (ASSIGN, __T28, b, -)
66: (GT, __T29, __T27, __T28)
67: (ifTrue, __L_129_TRUE, __T29, -)
68: (ASSIGN, __T29, __0, -)
69: (GOTO, __L_129_DONE, -, -)
70: (LABEL, __L_129_TRUE, -, -)
71: (ASSIGN, __T29, __1, -)
72: (LABEL, __L_129_DONE, -, -)
73: (ASSIGN, c, __T29, -)
74: (ASSIGN, __T30, a, -)
75: (ASSIGN, __T31, b, -)
76: (GTEQ, __T32, __T30, __T31)
77: (ifTrue, __L_134_TRUE, __T32, -)
78: (ASSIGN, __T32, __0, -)
79: (GOTO, __L_134_DONE, -, -)
80: (LABEL, __L_134_TRUE, -, -)
81: (ASSIGN, __T32, __1, -)
82: (LABEL, __L_134_DONE, -, -)
83: (ASSIGN, c, __T32, -)
84: (ASSIGN, __T33, a, -)
85: (ASSIGN, __T34, b, -)
86: (EQ, __T35, __T33, __T34)
87: (ifTrue, __L_139_TRUE, __T35, -)
88: (ASSIGN, __T35, __0, -)
89: (GOTO, __L_139_DONE, -, -)
90: (LABEL, __L_139_TRUE, -, -)
91: (ASSIGN, __T35, __1, -)
92: (LABEL, __L_139_DONE, -, -)
93: (ASSIGN, c, __T35, -)
94: (ASSIGN, __T36, a, -)
95: (ASSIGN, __T37, b, -)
96: (NEQ, __T38, __T36, __T37)
97: (ifTrue, __L_144_TRUE, __T38, -)
98: (ASSIGN, __T38, __0, -)
99: (GOTO, __L_144_DONE, -, -)
100: (LABEL, __L_144_TRUE, -, -)
101: (ASSIGN, __T38, __1, -)
102: (LABEL, __L_144_DONE, -, -)
103: (ASSIGN, c, __T38, -)
104: (ASSIGN, __T40, a, -)
105: (ifFalse, __L_149_FALSE, __T40, -)
106: (ASSIGN, __T41, b, -)
107: (ifFalse, __L_149_FALSE, __T41, -)
108: (ASSIGN, __T42, __1, -)
109: (GOTO, __L_149_DONE, -, -)
110: (LABEL, __L_149_FALSE, -, -)
111: (ASSIGN, __T42, __0, -)
112: (LABEL, __L_149_DONE, -, -)
113: (ASSIGN, c, __T42, -)
114: (ASSIGN, __T43, a, -)
115: (ifTrue, __L_154_TRUE, __T43, -)
116: (ASSIGN, __T46, b, -)
117: (ifTrue, __L_154_TRUE, __T43, -)
118: (ASSIGN, __T45, __0, -)
119: (GOTO, __L_154_DONE, -, -)
120: (LABEL, __L_154_TRUE, -, -)
121: (ASSIGN, __T45, __1, -)
122: (LABEL, __L_154_DONE, -, -)
123: (ASSIGN, c, __T45, -)
124: (ASSIGN, __T47, b, -)
125: (ifFalse, __L_159_FALSE, __T47, -)
126: (ASSIGN, __T48, __0, -)
127: (GOTO, __L_159_DONE, -, -)
128: (LABEL, __L_159_FALSE, -, -)
129: (ASSIGN, __T48, __1, -)
130: (LABEL, __L_159_DONE, -, -)
131: (ASSIGN, c, __T48, -)
132: (NEG, __T49, b, -)
133: (ASSIGN, c, __T49, -)
134: (ASSIGN, b, __15, -)
135: (INC, b, -, -)
136: (ASSIGN, c, b, -)
137: (PRINT, c, -, -)
138: (DEC, b, -, -)
139: (ASSIGN, c, b, -)
140: (MOD, __T52, a, __5)
141: (ASSIGN, c, __T52, -)
142: (ASSIGN, c, __-23, -)
143: (ASSIGN, a, __100, -)
144: (LABEL, __L_186_FOR_BEGIN, -, -)
145: (ASSIGN, __T53, a, -)
146: (ASSIGN, __T54, __200, -)
147: (LT, __T55, __T53, __T54)
148: (ifTrue, __L_190_TRUE, __T55, -)
149: (ASSIGN, __T55, __0, -)
150: (GOTO, __L_190_DONE, -, -)
151: (LABEL, __L_190_TRUE, -, -)
152: (ASSIGN, __T55, __1, -)
153: (LABEL, __L_190_DONE, -, -)
154: (ifFalse, __L_186_FOR_END, __T55, -)
155: (ASSIGN, zz, __-100, -)
156: (ADD, __T56, a, b)
157: (ADD, __T57, e, f)
158: (ASSIGN, c, __T57, -)
159: (INC, a, -, -)
160: (GOTO, __L_186_FOR_BEGIN, -, -)
161: (LABEL, __L_186_FOR_END, -, -)
162: (LABEL, __L_209_WHILE_BEGIN, -, -)
163: (DIV, __T59, a, __5)
164: (ADD, __T60, __-3, __-8)
165: (SUB, __T61, __T59, __T60)
166: (ASSIGN, __T62, __T61, -)
167: (ASSIGN, __T63, __100, -)
168: (EQ, __T64, __T62, __T63)
169: (ifTrue, __L_210_TRUE, __T64, -)
170: (ASSIGN, __T64, __0, -)
171: (GOTO, __L_210_DONE, -, -)
172: (LABEL, __L_210_TRUE, -, -)
173: (ASSIGN, __T64, __1, -)
174: (LABEL, __L_210_DONE, -, -)
175: (ifFalse, __L_209_WHILE_END, __T64, -)
176: (MULT, __T65, __12, __21)
177: (PRINT, __T65, -, -)
178: (GOTO, __L_209_WHILE_BEGIN, -, -)
179: (LABEL, __L_209_WHILE_END, -, -)
180: (LABEL, __L_229_DO_WHILE_BEGIN, -, -)
181: (ASSIGN, asd, dsa, -)
182: (ifTrue, __L_229_DO_WHILE_BEGIN, __1, -)
183: (MULT, __T67, a, b)
184: (ASSIGN, __T68, __T67, -)
185: (ASSIGN, __T69, d, -)
186: (EQ, __T70, __T68, __T69)
187: (ifTrue, __L_240_TRUE, __T70, -)
188: (ASSIGN, __T70, __0, -)
189: (GOTO, __L_240_DONE, -, -)
190: (LABEL, __L_240_TRUE, -, -)
191: (ASSIGN, __T70, __1, -)
192: (LABEL, __L_240_DONE, -, -)
193: (ASSIGN, __T66, __T70, -)
194: (ifFalse, __L_239_ELSE, __T66, -)
195: (GOTO, __L_239_FI, -, -)
196: (LABEL, __L_239_ELSE, -, -)
197: (LABEL, __L_239_FI, -, -)
198: (RETURN, __0, -, -)

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 304
  VAR_INT a (offset: 0 or addr: 6316)
  VAR_INT b (offset: 0 or addr: 6320)
  VAR_INT c (offset: 0 or addr: 6324)
  (1-0) contains:
    VAR_ARRAY_INT dd (length: 5, offset: -8 or addr: 0), sym_length = 5 
    VAR_INT a (offset: -88 or addr: 0)
    VAR_INT b (offset: -92 or addr: 0)
    VAR_INT c (offset: -96 or addr: 0)
    VAR_INT d (offset: -100 or addr: 0)
    VAR_INT e (offset: -104 or addr: 0)
    VAR_INT f (offset: -108 or addr: 0)
    VAR_INT h (offset: -112 or addr: 0)
    VAR_INT i (offset: -116 or addr: 0)
    VAR_ARRAY_INT cc (length: 12, offset: -120 or addr: 0), sym_length = 12 
    (2-0) contains:
      VAR_INT zz (offset: -200 or addr: 0)
    (2-1) contains:
      VAR_INT tt (offset: -204 or addr: 0)
      VAR_ARRAY_INT uu (length: 10, offset: -208 or addr: 0), sym_length = 10 
    (2-2) contains:
      VAR_INT dsa (offset: -288 or addr: 0)
      VAR_INT asd (offset: -292 or addr: 0)
    (2-3) contains:
      VAR_INT x (offset: -296 or addr: 0)
    (2-4) contains:
      VAR_INT y (offset: -300 or addr: 0)


===========================================================
test1.c finished.
