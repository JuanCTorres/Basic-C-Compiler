Result of test done to parser.

scope.c BEGIN.
===========================================================






ROOT (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  ID (uid: N1) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 x [scope (0,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N2) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0 sub  (1 params: VAR_INT )[scope (0,0) <- (0,0)] declared at line 3  (type: VOID_TYPE) 
    FORMAL_PARAMS (uid: N3) inferred ret type: ROOT isDecl = 0, ignore = 0 
      ID (uid: N4) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 x [scope (1,0) <- (0,0)] declared at line 3  (type: INT_TYPE) 
    SEQ (uid: N5) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N6) inferred ret type: ROOT isDecl = 0, ignore = 0 
      STATEMENT_LIST (uid: N7) inferred ret type: ROOT isDecl = 0, ignore = 0 
        = (uid: N8) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N9) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (1,0) <- (0,0)] declared at line 3  (type: INT_TYPE) 
          INT_LITERAL (uid: N10) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 3 (type: INT_TYPE) 
        RETURN (uid: N0) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0 [scope (0,0) <- (0,0)]return to sub at line 3  (type: VOID_TYPE) 
          VOID_TYPE (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  FUNC_DECLARATION (uid: N11) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 main  (0 params:)[scope (0,0) <- (0,0)] declared at line 9  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N12) inferred ret type: ROOT isDecl = 0, ignore = 0 
    SEQ (uid: N13) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N14) inferred ret type: ROOT isDecl = 0, ignore = 0 
      STATEMENT_LIST (uid: N15) inferred ret type: ROOT isDecl = 0, ignore = 0 
        = (uid: N16) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N17) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (1,1) <- (0,0)] declared at line 1  (type: INT_TYPE) 
          INT_LITERAL (uid: N18) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
        PRINT (uid: N19) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N20) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (1,1) <- (0,0)] declared at line 1  (type: INT_TYPE) 
        SEQ (uid: N21) inferred ret type: ROOT isDecl = 0, ignore = 0 
          LOCAL_DECLARATIONS (uid: N22) inferred ret type: ROOT isDecl = 0, ignore = 0 
            ID (uid: N23) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 x [scope (2,0) <- (1,1)] declared at line 17  (type: INT_TYPE) 
          STATEMENT_LIST (uid: N24) inferred ret type: ROOT isDecl = 0, ignore = 0 
            = (uid: N25) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
              ID (uid: N26) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (2,0) <- (1,1)] declared at line 17  (type: INT_TYPE) 
              INT_LITERAL (uid: N27) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 2 (type: INT_TYPE) 
            CALL (uid: N28) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0  (type: VOID_TYPE) 
              FUNCTION (uid: N29) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0 sub  (1 params: VOID_TYPE)[scope (2,0) <- (1,1)] declared at line 3  (type: VOID_TYPE) 
                ID (uid: N30) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (2,0) <- (1,1)] declared at line 17  (type: INT_TYPE) 
            PRINT (uid: N31) inferred ret type: ROOT isDecl = 0, ignore = 0 
              ID (uid: N32) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (2,0) <- (1,1)] declared at line 17  (type: INT_TYPE) 
        PRINT (uid: N33) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N34) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (1,1) <- (0,0)] declared at line 1  (type: INT_TYPE) 
        RETURN (uid: N35) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,1) <- (0,0)]return to main at line 9 
          INT_LITERAL (uid: N36) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
(0-0) contains:
  VAR_INT __void (offset: 0 or addr: 0)
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __2 (offset: 0 or addr: 0)
  VAR_INT __3 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
There are 15 entries
0: (LABEL, sub, -, -)
1: (ASSIGN, x, __3, -)
2: (RETURN, __void, -, -)
3: (LABEL, main, -, -)
4: (ASSIGN, x, __1, -)
5: (PRINT, x, -, -)
6: (ASSIGN, x, __2, -)
7: (ASSIGN, __T0, x, -)
8: (PUSH, __T0, -, -)
9: (PRECALL, sub, -, -)
10: (CALL, sub, -, -)
11: (POSTCALL, sub, -, -)
12: (PRINT, x, -, -)
13: (PRINT, x, -, -)
14: (RETURN, __0, -, -)

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 0
  VAR_INT x (offset: 0 or addr: 484)
  FUNC_VOID sub (1 params: VAR_INT )space needed: 8
  (1-0) contains:
    VAR_INT x (offset: 4 or addr: 0)
  (1-1) contains:
    (2-0) contains:
      VAR_INT x (offset: 0 or addr: 0)


===========================================================
scope.c finished.
