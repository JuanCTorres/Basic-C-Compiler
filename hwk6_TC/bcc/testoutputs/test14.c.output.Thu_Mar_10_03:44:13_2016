Result of test done to parser.

test14.c BEGIN.
===========================================================






ROOT (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  = (uid: N1) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
    ID (uid: N2) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 aaa [scope (0,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
    INT_LITERAL (uid: N3) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 7 (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N4) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 func  (0 params:)[scope (0,0) <- (0,0)] declared at line 3  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N5) inferred ret type: ROOT isDecl = 0, ignore = 0 
    SEQ (uid: N6) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N7) inferred ret type: ROOT isDecl = 0, ignore = 0 
      STATEMENT_LIST (uid: N8) inferred ret type: ROOT isDecl = 0, ignore = 0 
        PRINT (uid: N9) inferred ret type: ROOT isDecl = 0, ignore = 0 
          STRING_LITERAL (uid: N10) inferred ret type: ROOT isDecl = 0, ignore = 0 accessing aaa again in a different function: 
        PRINT (uid: N11) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N12) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 aaa [scope (1,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
        RETURN (uid: N13) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,0) <- (0,0)]return to func at line 3 
          INT_LITERAL (uid: N14) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N15) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 main  (0 params:)[scope (0,0) <- (0,0)] declared at line 10  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N16) inferred ret type: ROOT isDecl = 0, ignore = 0 
    SEQ (uid: N17) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N18) inferred ret type: ROOT isDecl = 0, ignore = 0 
      STATEMENT_LIST (uid: N19) inferred ret type: ROOT isDecl = 0, ignore = 0 
        PRINT (uid: N20) inferred ret type: ROOT isDecl = 0, ignore = 0 
          STRING_LITERAL (uid: N21) inferred ret type: ROOT isDecl = 0, ignore = 0 aaa is a global var with value 7. Printing: 
        PRINT (uid: N22) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ID (uid: N23) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 aaa [scope (1,1) <- (0,0)] declared at line 1  (type: INT_TYPE) 
        CALL (uid: N24) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          FUNCTION (uid: N25) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 func  (0 params:)[scope (1,1) <- (0,0)] declared at line 3  (type: INT_TYPE) 
        RETURN (uid: N26) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,1) <- (0,0)]return to main at line 10 
          INT_LITERAL (uid: N27) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
(0-0) contains:
  STRING accessing aaa again in a different function:
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
  VAR_INT __7 (offset: 0 or addr: 0)
  STRING aaa is a global var with value 7. Printing:
There are 12 entries
0: (ASSIGN, aaa, __7, -)
1: (LABEL, func, -, -)
2: (PRINT, accessing aaa again in a different function:, -, -)
3: (PRINT, aaa, -, -)
4: (RETURN, __0, -, -)
5: (LABEL, main, -, -)
6: (PRINT, aaa is a global var with value 7. Printing:, -, -)
7: (PRINT, aaa, -, -)
8: (PRECALL, func, -, -)
9: (CALL, func, -, -)
10: (POSTCALL, func, -, -)
11: (RETURN, __0, -, -)

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 0
  VAR_INT aaa (offset: 0 or addr: 574)
  FUNC_INT func (0 params:)space needed: 0
  (1-0) contains:
  (1-1) contains:


===========================================================
test14.c finished.
