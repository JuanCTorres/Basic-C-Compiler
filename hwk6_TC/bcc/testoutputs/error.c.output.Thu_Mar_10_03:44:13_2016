Result of test done to parser.

error.c BEGIN.
===========================================================






ROOT (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  ID (uid: N1) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 x [scope (0,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N2) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 main  (0 params:)[scope (0,0) <- (0,0)] declared at line 3  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N3) inferred ret type: ROOT isDecl = 0, ignore = 0 
    SEQ (uid: N4) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N5) inferred ret type: ROOT isDecl = 0, ignore = 0 
        ID (uid: N6) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 y [scope (1,0) <- (0,0)] declared at line 5  (type: INT_TYPE) 
      STATEMENT_LIST (uid: N7) inferred ret type: ROOT isDecl = 0, ignore = 0 
        + (uid: N8) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N9) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 x [scope (1,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
          = (uid: N10) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            ID (uid: N11) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 y [scope (1,0) <- (0,0)] declared at line 5  (type: INT_TYPE) 
            + (uid: N12) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
              INT_LITERAL (uid: N13) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 2 (type: INT_TYPE) 
              INT_LITERAL (uid: N14) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 3 (type: INT_TYPE) 
        RETURN (uid: N15) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,0) <- (0,0)]return to main at line 3 
          INT_LITERAL (uid: N16) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
(0-0) contains:
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __2 (offset: 0 or addr: 0)
  VAR_INT __3 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
There are 5 entries
0: (LABEL, main, -, -)
1: (ADD, __T0, __2, __3)
2: (ASSIGN, y, __T0, -)
3: (ADD, __T1, x, y)
4: (RETURN, __0, -, -)

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 12
  VAR_INT x (offset: 0 or addr: 188)
  (1-0) contains:
    VAR_INT y (offset: -8 or addr: 0)


===========================================================
error.c finished.
