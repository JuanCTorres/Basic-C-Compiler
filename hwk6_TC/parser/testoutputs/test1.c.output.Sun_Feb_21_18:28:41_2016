Result of test done to parser.

test1.c BEGIN.
===========================================================



ROOT (uid: N0) inferred ret type: ROOT
  = (uid: N1) inferred ret type: INT_TYPE(type: INT_TYPE) 
    ID (uid: N2) inferred ret type: INT_TYPEa [scope (0,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
    INT_LITERAL (uid: N3) inferred ret type: INT_TYPE0(type: INT_TYPE) 
  ID (uid: N4) inferred ret type: INT_TYPEb [scope (0,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
  = (uid: N5) inferred ret type: INT_TYPE(type: INT_TYPE) 
    ID (uid: N6) inferred ret type: INT_TYPEc [scope (0,0) <- (0,0)] declared at line 3 (type: INT_TYPE) 
    INT_LITERAL (uid: N7) inferred ret type: INT_TYPE23(type: INT_TYPE) 
  FUNC_DECLARATION (uid: N8) inferred ret type: INT_TYPEmain  (0 params:)[scope (0,0) <- (0,0)] declared at line 6 (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N9) inferred ret type: ROOT
    SEQ (uid: N10) inferred ret type: ROOT
      LOCAL_DECLARATIONS (uid: N11) inferred ret type: ROOT
        ID (uid: N12) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        ID (uid: N13) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        ID (uid: N14) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        ID (uid: N15) inferred ret type: INT_TYPEd [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N16) inferred ret type: INT_TYPEe [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N17) inferred ret type: INT_TYPEf [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        = (uid: N18) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N19) inferred ret type: INT_TYPEh [scope (1,0) <- (0,0)] declared at line 15 (type: INT_TYPE) 
          INT_LITERAL (uid: N20) inferred ret type: INT_TYPE2(type: INT_TYPE) 
        = (uid: N21) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N22) inferred ret type: INT_TYPEi [scope (1,0) <- (0,0)] declared at line 15 (type: INT_TYPE) 
          INT_LITERAL (uid: N23) inferred ret type: INT_TYPE3(type: INT_TYPE) 
        ARRAY_TYPE (uid: N24) inferred ret type: INT_TYPEcc [scope (1,0) <- (0,0)] declared at line 16 (type: INT_TYPE) 
          INT_LITERAL (uid: N25) inferred ret type: INT_TYPE12(type: INT_TYPE) 
        ARRAY_TYPE (uid: N26) inferred ret type: INT_TYPEdd [scope (1,0) <- (0,0)] declared at line 16 (type: INT_TYPE) 
          INT_LITERAL (uid: N27) inferred ret type: INT_TYPE5(type: INT_TYPE) 
      STATEMENT_LIST (uid: N28) inferred ret type: ROOT
        = (uid: N29) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ARRAY_TYPE (uid: N30) inferred ret type: INT_TYPEcc [scope (1,0) <- (0,0)] declared at line 16 (type: INT_TYPE) 
            * (uid: N31) inferred ret type: INT_TYPE(type: INT_TYPE) 
              ID (uid: N32) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
              ID (uid: N33) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N34) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N35) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N36) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        PRINT (uid: N37) inferred ret type: ROOT
          STRING_LITERAL (uid: N38) inferred ret type: ROOTtest basics!\n 
        READ (uid: N39) inferred ret type: ROOT
          ID (uid: N40) inferred ret type: INT_TYPEf [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        = (uid: N41) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N42) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N43) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N44) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            ID (uid: N45) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N46) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N47) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          + (uid: N48) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N49) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N50) inferred ret type: INT_TYPE1(type: INT_TYPE) 
        = (uid: N51) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N52) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N53) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N54) inferred ret type: INT_TYPE5(type: INT_TYPE) 
            INT_LITERAL (uid: N55) inferred ret type: INT_TYPE5(type: INT_TYPE) 
        = (uid: N56) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N57) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N58) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N59) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            INT_LITERAL (uid: N60) inferred ret type: INT_TYPE-6(type: INT_TYPE) 
        = (uid: N61) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N62) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N63) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N64) inferred ret type: INT_TYPE-2(type: INT_TYPE) 
            INT_LITERAL (uid: N65) inferred ret type: INT_TYPE9(type: INT_TYPE) 
        = (uid: N66) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N67) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          + (uid: N68) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N69) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            INT_LITERAL (uid: N70) inferred ret type: INT_TYPE7(type: INT_TYPE) 
        = (uid: N71) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N72) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N73) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N74) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            INT_LITERAL (uid: N75) inferred ret type: INT_TYPE-10(type: INT_TYPE) 
        = (uid: N76) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N77) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N78) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N79) inferred ret type: INT_TYPE22(type: INT_TYPE) 
            INT_LITERAL (uid: N80) inferred ret type: INT_TYPE-88(type: INT_TYPE) 
        = (uid: N81) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N82) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N83) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N84) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            UNARY - (uid: N85) inferred ret type: INT_TYPE(type: INT_TYPE) 
              ID (uid: N86) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N87) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N88) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          + (uid: N89) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N90) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N91) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N92) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N93) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N94) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N95) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N96) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N97) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N98) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N99) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N100) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N101) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N102) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N103) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          / (uid: N104) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N105) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N106) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N107) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N108) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          % (uid: N109) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N110) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N111) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N112) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N113) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          < (uid: N114) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N115) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N116) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N117) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N118) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          <= (uid: N119) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N120) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N121) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N122) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N123) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          > (uid: N124) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N125) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N126) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N127) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N128) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          >= (uid: N129) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N130) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N131) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N132) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N133) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          == (uid: N134) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N135) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N136) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N137) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N138) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          != (uid: N139) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N140) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N141) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N142) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N143) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          && (uid: N144) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N145) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N146) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N147) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N148) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          || (uid: N149) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N150) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N151) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N152) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N153) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          ! (uid: N154) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N155) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N156) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N157) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          UNARY - (uid: N158) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N159) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N160) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N161) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          ++ (uid: N162) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N163) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N164) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N165) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          -- (uid: N166) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N167) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N168) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N169) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          % (uid: N170) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N171) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N172) inferred ret type: INT_TYPE5(type: INT_TYPE) 
        = (uid: N173) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N174) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          INT_LITERAL (uid: N175) inferred ret type: INT_TYPE-23(type: INT_TYPE) 
        FOR (uid: N176) inferred ret type: ROOT
          = (uid: N177) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N178) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N179) inferred ret type: INT_TYPE100(type: INT_TYPE) 
          < (uid: N180) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N181) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N182) inferred ret type: INT_TYPE200(type: INT_TYPE) 
          ++ (uid: N183) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N184) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          SEQ (uid: N185) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N186) inferred ret type: ROOT
              = (uid: N187) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N188) inferred ret type: INT_TYPEzz [scope (2,0) <- (1,0)] declared at line 62 (type: INT_TYPE) 
                INT_LITERAL (uid: N189) inferred ret type: INT_TYPE-100(type: INT_TYPE) 
            STATEMENT_LIST (uid: N190) inferred ret type: ROOT
              + (uid: N191) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N192) inferred ret type: INT_TYPEa [scope (2,0) <- (1,0)] declared at line 13 (type: INT_TYPE) 
                ID (uid: N193) inferred ret type: INT_TYPEb [scope (2,0) <- (1,0)] declared at line 13 (type: INT_TYPE) 
              = (uid: N194) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N195) inferred ret type: INT_TYPEc [scope (2,0) <- (1,0)] declared at line 13 (type: INT_TYPE) 
                + (uid: N196) inferred ret type: INT_TYPE(type: INT_TYPE) 
                  ID (uid: N197) inferred ret type: INT_TYPEe [scope (2,0) <- (1,0)] declared at line 14 (type: INT_TYPE) 
                  ID (uid: N198) inferred ret type: INT_TYPEf [scope (2,0) <- (1,0)] declared at line 14 (type: INT_TYPE) 
        WHILE (uid: N199) inferred ret type: ROOT
          == (uid: N200) inferred ret type: INT_TYPE(type: INT_TYPE) 
            - (uid: N201) inferred ret type: INT_TYPE(type: INT_TYPE) 
              / (uid: N202) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N203) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
                INT_LITERAL (uid: N204) inferred ret type: INT_TYPE5(type: INT_TYPE) 
              + (uid: N205) inferred ret type: INT_TYPE(type: INT_TYPE) 
                INT_LITERAL (uid: N206) inferred ret type: INT_TYPE-3(type: INT_TYPE) 
                INT_LITERAL (uid: N207) inferred ret type: INT_TYPE-8(type: INT_TYPE) 
            INT_LITERAL (uid: N208) inferred ret type: INT_TYPE100(type: INT_TYPE) 
          SEQ (uid: N209) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N210) inferred ret type: ROOT
              ID (uid: N211) inferred ret type: INT_TYPEtt [scope (2,1) <- (1,0)] declared at line 68 (type: INT_TYPE) 
              ARRAY_TYPE (uid: N212) inferred ret type: INT_TYPEuu [scope (2,1) <- (1,0)] declared at line 68 (type: INT_TYPE) 
                INT_LITERAL (uid: N213) inferred ret type: INT_TYPE10(type: INT_TYPE) 
            STATEMENT_LIST (uid: N214) inferred ret type: ROOT
              PRINT (uid: N215) inferred ret type: ROOT
                * (uid: N216) inferred ret type: INT_TYPE(type: INT_TYPE) 
                  INT_LITERAL (uid: N217) inferred ret type: INT_TYPE12(type: INT_TYPE) 
                  INT_LITERAL (uid: N218) inferred ret type: INT_TYPE21(type: INT_TYPE) 
        DO_WHILE (uid: N219) inferred ret type: ROOT
          INT_LITERAL (uid: N220) inferred ret type: INT_TYPE1(type: INT_TYPE) 
          SEQ (uid: N221) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N222) inferred ret type: ROOT
              ID (uid: N223) inferred ret type: INT_TYPEasd [scope (2,2) <- (1,0)] declared at line 74 (type: INT_TYPE) 
              ID (uid: N224) inferred ret type: INT_TYPEdsa [scope (2,2) <- (1,0)] declared at line 75 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N225) inferred ret type: ROOT
              = (uid: N226) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N227) inferred ret type: INT_TYPEasd [scope (2,2) <- (1,0)] declared at line 74 (type: INT_TYPE) 
                ID (uid: N228) inferred ret type: INT_TYPEdsa [scope (2,2) <- (1,0)] declared at line 75 (type: INT_TYPE) 
        IF_ELSE_STMT (uid: N229) inferred ret type: ROOT
          == (uid: N230) inferred ret type: INT_TYPE(type: INT_TYPE) 
            * (uid: N231) inferred ret type: INT_TYPE(type: INT_TYPE) 
              ID (uid: N232) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
              ID (uid: N233) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N234) inferred ret type: INT_TYPEd [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          SEQ (uid: N235) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N236) inferred ret type: ROOT
              ID (uid: N237) inferred ret type: INT_TYPEx [scope (2,3) <- (1,0)] declared at line 80 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N238) inferred ret type: ROOT
          SEQ (uid: N239) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N240) inferred ret type: ROOT
              ID (uid: N241) inferred ret type: INT_TYPEy [scope (2,4) <- (1,0)] declared at line 83 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N242) inferred ret type: ROOT
        RETURN (uid: N243) inferred ret type: ROOT[scope (1,0) <- (0,0)]return to main at line 6 
          INT_LITERAL (uid: N244) inferred ret type: INT_TYPE0(type: INT_TYPE) 
(0-0) contains:
  VAR_INT __-88 (offset: 0 or addr: 0)
  VAR_INT __-2 (offset: 0 or addr: 0)
  VAR_INT __-3 (offset: 0 or addr: 0)
  VAR_INT __-6 (offset: 0 or addr: 0)
  VAR_INT __-8 (offset: 0 or addr: 0)
  VAR_INT __100 (offset: 0 or addr: 0)
  VAR_INT __-100 (offset: 0 or addr: 0)
  VAR_INT __10 (offset: 0 or addr: 0)
  VAR_INT __12 (offset: 0 or addr: 0)
  VAR_INT __200 (offset: 0 or addr: 0)
  VAR_INT __-10 (offset: 0 or addr: 0)
  VAR_INT __21 (offset: 0 or addr: 0)
  VAR_INT __22 (offset: 0 or addr: 0)
  VAR_INT __23 (offset: 0 or addr: 0)
  VAR_INT __-23 (offset: 0 or addr: 0)
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __2 (offset: 0 or addr: 0)
  VAR_INT __3 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
  VAR_INT __5 (offset: 0 or addr: 0)
  VAR_INT __7 (offset: 0 or addr: 0)
  VAR_INT __9 (offset: 0 or addr: 0)
  STRING test basics!\n
There are 189 entries
0: (ASSIGN, a, __0, -)
1: (ASSIGN, c, __23, -)
2: (LABEL, main, -, -)
3: (ASSIGN, h, __2, -)
4: (ASSIGN, i, __3, -)
5: (MULT, __T0, __12, __4)
6: (ADDR, __T1, cc, -)
7: (ADD, __T2, __T0, __T1)
8: (DEREF, __T3, __T2, -)
9: (MULT, __T4, __5, __4)
10: (ADDR, __T5, dd, -)
11: (ADD, __T6, __T4, __T5)
12: (DEREF, __T7, __T6, -)
13: (MULT, __T8, a, b)
14: (MULT, __T9, __T8, __4)
15: (ADDR, __T10, cc, -)
16: (ADD, __T11, __T9, __T10)
17: (DEREF, __T12, __T11, -)
18: (MULT, __T13, a, b)
19: (ASSIGN, __T12, __T13, -)
20: (PRINT, test basics!\n, -, -)
21: (READ, f, -, -)
22: (SUB, __T14, __1, b)
23: (ASSIGN, c, __T14, -)
24: (ADD, __T15, b, __1)
25: (ASSIGN, c, __T15, -)
26: (SUB, __T16, __5, __5)
27: (ASSIGN, c, __T16, -)
28: (MULT, __T17, __1, __-6)
29: (ASSIGN, c, __T17, -)
30: (SUB, __T18, __-2, __9)
31: (ASSIGN, c, __T18, -)
32: (ADD, __T19, __1, __7)
33: (ASSIGN, c, __T19, -)
34: (SUB, __T20, __1, __-10)
35: (ASSIGN, c, __T20, -)
36: (SUB, __T21, __22, __-88)
37: (ASSIGN, c, __T21, -)
38: (NEG, __T22, b, -)
39: (MULT, __T23, a, __T22)
40: (ASSIGN, c, __T23, -)
41: (ADD, __T24, a, b)
42: (ASSIGN, c, __T24, -)
43: (SUB, __T25, a, b)
44: (ASSIGN, c, __T25, -)
45: (MULT, __T26, a, b)
46: (ASSIGN, c, __T26, -)
47: (DIV, __T27, a, b)
48: (ASSIGN, c, __T27, -)
49: (MOD, __T28, a, b)
50: (ASSIGN, c, __T28, -)
51: (LT, __T31, a, b)
52: (ifTrue, __L_114_TRUE, __T31, -)
53: (ASSIGN, __T31, __0, -)
54: (GOTO, __L_114_DONE, -, -)
55: (LABEL, __L_114_TRUE, -, -)
56: (ASSIGN, __T31, __1, -)
57: (LABEL, __L_114_DONE, -, -)
58: (ASSIGN, c, __T31, -)
59: (LTEQ, __T34, a, b)
60: (ifTrue, __L_119_TRUE, __T34, -)
61: (ASSIGN, __T34, __0, -)
62: (GOTO, __L_119_DONE, -, -)
63: (LABEL, __L_119_TRUE, -, -)
64: (ASSIGN, __T34, __1, -)
65: (LABEL, __L_119_DONE, -, -)
66: (ASSIGN, c, __T34, -)
67: (GT, __T37, a, b)
68: (ifTrue, __L_124_TRUE, __T37, -)
69: (ASSIGN, __T37, __0, -)
70: (GOTO, __L_124_DONE, -, -)
71: (LABEL, __L_124_TRUE, -, -)
72: (ASSIGN, __T37, __1, -)
73: (LABEL, __L_124_DONE, -, -)
74: (ASSIGN, c, __T37, -)
75: (GTEQ, __T40, a, b)
76: (ifTrue, __L_129_TRUE, __T40, -)
77: (ASSIGN, __T40, __0, -)
78: (GOTO, __L_129_DONE, -, -)
79: (LABEL, __L_129_TRUE, -, -)
80: (ASSIGN, __T40, __1, -)
81: (LABEL, __L_129_DONE, -, -)
82: (ASSIGN, c, __T40, -)
83: (EQ, __T43, a, b)
84: (ifTrue, __L_134_TRUE, __T43, -)
85: (ASSIGN, __T43, __0, -)
86: (GOTO, __L_134_DONE, -, -)
87: (LABEL, __L_134_TRUE, -, -)
88: (ASSIGN, __T43, __1, -)
89: (LABEL, __L_134_DONE, -, -)
90: (ASSIGN, c, __T43, -)
91: (NEQ, __T46, a, b)
92: (ifTrue, __L_139_TRUE, __T46, -)
93: (ASSIGN, __T46, __0, -)
94: (GOTO, __L_139_DONE, -, -)
95: (LABEL, __L_139_TRUE, -, -)
96: (ASSIGN, __T46, __1, -)
97: (LABEL, __L_139_DONE, -, -)
98: (ASSIGN, c, __T46, -)
99: (ASSIGN, __T48, a, -)
100: (ifFalse, __L_144_FALSE, __T48, -)
101: (ASSIGN, __T49, b, -)
102: (ifFalse, __L_144_FALSE, __T49, -)
103: (ASSIGN, __T50, __1, -)
104: (GOTO, __L_144_DONE, -, -)
105: (LABEL, __L_144_FALSE, -, -)
106: (ASSIGN, __T50, __0, -)
107: (LABEL, __L_144_DONE, -, -)
108: (ASSIGN, c, __T50, -)
109: (ASSIGN, __T51, a, -)
110: (ifTrue, __L_149_TRUE, __T51, -)
111: (ASSIGN, __T54, b, -)
112: (ifTrue, __L_149_TRUE, __T51, -)
113: (ASSIGN, __T53, __0, -)
114: (GOTO, __L_149_DONE, -, -)
115: (LABEL, __L_149_TRUE, -, -)
116: (ASSIGN, __T53, __1, -)
117: (LABEL, __L_149_DONE, -, -)
118: (ASSIGN, c, __T53, -)
119: (ASSIGN, __T55, b, -)
120: (ifFalse, __L_154_FALSE, __T55, -)
121: (ASSIGN, __T56, __0, -)
122: (GOTO, __L_154_DONE, -, -)
123: (LABEL, __L_154_FALSE, -, -)
124: (ASSIGN, __T56, __1, -)
125: (LABEL, __L_154_DONE, -, -)
126: (ASSIGN, c, __T56, -)
127: (NEG, __T57, b, -)
128: (ASSIGN, c, __T57, -)
129: (INC, __T58, b, -)
130: (ASSIGN, c, __T58, -)
131: (DEC, __T59, b, -)
132: (ASSIGN, c, __T59, -)
133: (MOD, __T60, a, __5)
134: (ASSIGN, c, __T60, -)
135: (ASSIGN, c, __-23, -)
136: (ASSIGN, a, __100, -)
137: (LABEL, __L_176_FOR_BEGIN, -, -)
138: (LT, __T63, a, __200)
139: (ifTrue, __L_180_TRUE, __T63, -)
140: (ASSIGN, __T63, __0, -)
141: (GOTO, __L_180_DONE, -, -)
142: (LABEL, __L_180_TRUE, -, -)
143: (ASSIGN, __T63, __1, -)
144: (LABEL, __L_180_DONE, -, -)
145: (ifFalse, __L_176_FOR_END, __T63, -)
146: (ASSIGN, zz, __-100, -)
147: (ADD, __T64, a, b)
148: (ADD, __T65, e, f)
149: (ASSIGN, c, __T65, -)
150: (INC, __T66, a, -)
151: (GOTO, __L_176_FOR_BEGIN, -, -)
152: (LABEL, __L_176_FOR_END, -, -)
153: (LABEL, __L_199_WHILE_BEGIN, -, -)
154: (DIV, __T67, a, __5)
155: (ADD, __T68, __-3, __-8)
156: (SUB, __T69, __T67, __T68)
157: (EQ, __T72, __T69, __100)
158: (ifTrue, __L_200_TRUE, __T72, -)
159: (ASSIGN, __T72, __0, -)
160: (GOTO, __L_200_DONE, -, -)
161: (LABEL, __L_200_TRUE, -, -)
162: (ASSIGN, __T72, __1, -)
163: (LABEL, __L_200_DONE, -, -)
164: (ifFalse, __L_199_WHILE_END, __T72, -)
165: (MULT, __T73, __10, __4)
166: (ADDR, __T74, uu, -)
167: (ADD, __T75, __T73, __T74)
168: (DEREF, __T76, __T75, -)
169: (MULT, __T77, __12, __21)
170: (PRINT, __T77, -, -)
171: (GOTO, __L_199_WHILE_BEGIN, -, -)
172: (LABEL, __L_219_DO_WHILE_BEGIN, -, -)
173: (ASSIGN, asd, dsa, -)
174: (ifTrue, __L_219_DO_WHILE_BEGIN, __1, -)
175: (MULT, __T79, a, b)
176: (EQ, __T82, __T79, d)
177: (ifTrue, __L_230_TRUE, __T82, -)
178: (ASSIGN, __T82, __0, -)
179: (GOTO, __L_230_DONE, -, -)
180: (LABEL, __L_230_TRUE, -, -)
181: (ASSIGN, __T82, __1, -)
182: (LABEL, __L_230_DONE, -, -)
183: (ASSIGN, __T78, __T82, -)
184: (ifFalse, __L_229_ELSE, __T78, -)
185: (GOTO, __L_229_FI, -, -)
186: (LABEL, __L_229_ELSE, -, -)
187: (LABEL, __L_229_FI, -, -)
188: (RETURN, __0, -, -)
a -32
b -36
c -40
d -44
e -48
f -52
h -56
i -60
zz -112
tt -116
dsa -160
asd -164
x -168
y -172

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 172
  VAR_INT a (offset: 0 or addr: 6048)
  VAR_INT b (offset: 0 or addr: 6052)
  VAR_INT c (offset: 0 or addr: 6056)
  (1-0) contains:
    VAR_ARRAY_INT dd (length: 5, offset: -8 or addr: 0)
    VAR_INT a (offset: -28 or addr: 0)
    VAR_INT b (offset: -32 or addr: 0)
    VAR_INT c (offset: -36 or addr: 0)
    VAR_INT d (offset: -40 or addr: 0)
    VAR_INT e (offset: -44 or addr: 0)
    VAR_INT f (offset: -48 or addr: 0)
    VAR_INT h (offset: -52 or addr: 0)
    VAR_INT i (offset: -56 or addr: 0)
    VAR_ARRAY_INT cc (length: 12, offset: -60 or addr: 0)
    (2-0) contains:
      VAR_INT zz (offset: -108 or addr: 0)
    (2-1) contains:
      VAR_INT tt (offset: -112 or addr: 0)
      VAR_ARRAY_INT uu (length: 10, offset: -116 or addr: 0)
    (2-2) contains:
      VAR_INT dsa (offset: -156 or addr: 0)
      VAR_INT asd (offset: -160 or addr: 0)
    (2-3) contains:
      VAR_INT x (offset: -164 or addr: 0)
    (2-4) contains:
      VAR_INT y (offset: -168 or addr: 0)


===========================================================
test1.c finished.
