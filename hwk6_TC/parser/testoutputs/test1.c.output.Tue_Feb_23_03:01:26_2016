Result of test done to parser.

test1.c BEGIN.
===========================================================



ROOT (uid: N0) inferred ret type: ROOT
  = (uid: N1) inferred ret type: INT_TYPE(type: INT_TYPE) 
    ID (uid: N2) inferred ret type: INT_TYPEa [scope (0,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
    INT_LITERAL (uid: N3) inferred ret type: INT_TYPE0(type: INT_TYPE) 
  ID (uid: N4) inferred ret type: INT_TYPEb [scope (0,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
  = (uid: N5) inferred ret type: INT_TYPE(type: INT_TYPE) 
    ID (uid: N6) inferred ret type: INT_TYPEc [scope (0,0) <- (0,0)] declared at line 3 (type: INT_TYPE) 
    INT_LITERAL (uid: N7) inferred ret type: INT_TYPE23(type: INT_TYPE) 
  FUNC_DECLARATION (uid: N8) inferred ret type: INT_TYPEmain  (0 params:)[scope (0,0) <- (0,0)] declared at line 6 (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N9) inferred ret type: ROOT
    SEQ (uid: N10) inferred ret type: ROOT
      LOCAL_DECLARATIONS (uid: N11) inferred ret type: ROOT
        ID (uid: N12) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        ID (uid: N13) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        ID (uid: N14) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        ID (uid: N15) inferred ret type: INT_TYPEd [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N16) inferred ret type: INT_TYPEe [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N17) inferred ret type: INT_TYPEf [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        = (uid: N18) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N19) inferred ret type: INT_TYPEh [scope (1,0) <- (0,0)] declared at line 15 (type: INT_TYPE) 
          INT_LITERAL (uid: N20) inferred ret type: INT_TYPE2(type: INT_TYPE) 
        = (uid: N21) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N22) inferred ret type: INT_TYPEi [scope (1,0) <- (0,0)] declared at line 15 (type: INT_TYPE) 
          INT_LITERAL (uid: N23) inferred ret type: INT_TYPE3(type: INT_TYPE) 
        ARRAY_TYPE (uid: N24) inferred ret type: INT_TYPEcc [scope (1,0) <- (0,0)] declared at line 16 (type: INT_TYPE) 
          INT_LITERAL (uid: N25) inferred ret type: INT_TYPE12(type: INT_TYPE) 
        ARRAY_TYPE (uid: N26) inferred ret type: INT_TYPEdd [scope (1,0) <- (0,0)] declared at line 16 (type: INT_TYPE) 
          INT_LITERAL (uid: N27) inferred ret type: INT_TYPE5(type: INT_TYPE) 
      STATEMENT_LIST (uid: N28) inferred ret type: ROOT
        = (uid: N29) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ARRAY_TYPE (uid: N30) inferred ret type: INT_TYPEcc [scope (1,0) <- (0,0)] declared at line 16 (type: INT_TYPE) 
            * (uid: N31) inferred ret type: INT_TYPE(type: INT_TYPE) 
              ID (uid: N32) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
              ID (uid: N33) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N34) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N35) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N36) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        PRINT (uid: N37) inferred ret type: ROOT
          STRING_LITERAL (uid: N38) inferred ret type: ROOTtest basics!\n 
        READ (uid: N39) inferred ret type: ROOT
          ID (uid: N40) inferred ret type: INT_TYPEf [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        = (uid: N41) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N42) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N43) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N44) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            ID (uid: N45) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N46) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N47) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          + (uid: N48) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N49) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N50) inferred ret type: INT_TYPE1(type: INT_TYPE) 
        = (uid: N51) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N52) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N53) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N54) inferred ret type: INT_TYPE5(type: INT_TYPE) 
            INT_LITERAL (uid: N55) inferred ret type: INT_TYPE5(type: INT_TYPE) 
        = (uid: N56) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N57) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N58) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N59) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            INT_LITERAL (uid: N60) inferred ret type: INT_TYPE-6(type: INT_TYPE) 
        = (uid: N61) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N62) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N63) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N64) inferred ret type: INT_TYPE-2(type: INT_TYPE) 
            INT_LITERAL (uid: N65) inferred ret type: INT_TYPE9(type: INT_TYPE) 
        = (uid: N66) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N67) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          + (uid: N68) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N69) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            INT_LITERAL (uid: N70) inferred ret type: INT_TYPE7(type: INT_TYPE) 
        = (uid: N71) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N72) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N73) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N74) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            INT_LITERAL (uid: N75) inferred ret type: INT_TYPE-10(type: INT_TYPE) 
        = (uid: N76) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N77) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N78) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N79) inferred ret type: INT_TYPE22(type: INT_TYPE) 
            INT_LITERAL (uid: N80) inferred ret type: INT_TYPE-88(type: INT_TYPE) 
        = (uid: N81) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N82) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N83) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N84) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            UNARY - (uid: N85) inferred ret type: INT_TYPE(type: INT_TYPE) 
              ID (uid: N86) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N87) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N88) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          + (uid: N89) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N90) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N91) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N92) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N93) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          - (uid: N94) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N95) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N96) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N97) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N98) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          * (uid: N99) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N100) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N101) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N102) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N103) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          / (uid: N104) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N105) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N106) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N107) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N108) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          % (uid: N109) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N110) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N111) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N112) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N113) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          < (uid: N114) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N115) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N116) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N117) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N118) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          <= (uid: N119) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N120) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N121) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N122) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N123) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          > (uid: N124) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N125) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N126) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N127) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N128) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          >= (uid: N129) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N130) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N131) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N132) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N133) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          == (uid: N134) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N135) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N136) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N137) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N138) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          != (uid: N139) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N140) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N141) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N142) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N143) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          && (uid: N144) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N145) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N146) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N147) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N148) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          || (uid: N149) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N150) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N151) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N152) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N153) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          ! (uid: N154) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N155) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N156) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N157) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          UNARY - (uid: N158) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N159) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N160) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N161) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          ++ (uid: N162) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N163) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N164) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N165) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          -- (uid: N166) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N167) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
        = (uid: N168) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N169) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          % (uid: N170) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N171) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N172) inferred ret type: INT_TYPE5(type: INT_TYPE) 
        = (uid: N173) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N174) inferred ret type: INT_TYPEc [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          INT_LITERAL (uid: N175) inferred ret type: INT_TYPE-23(type: INT_TYPE) 
        FOR (uid: N176) inferred ret type: ROOT
          = (uid: N177) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N178) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N179) inferred ret type: INT_TYPE100(type: INT_TYPE) 
          < (uid: N180) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N181) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            INT_LITERAL (uid: N182) inferred ret type: INT_TYPE200(type: INT_TYPE) 
          ++ (uid: N183) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N184) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
          SEQ (uid: N185) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N186) inferred ret type: ROOT
              = (uid: N187) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N188) inferred ret type: INT_TYPEzz [scope (2,0) <- (1,0)] declared at line 62 (type: INT_TYPE) 
                INT_LITERAL (uid: N189) inferred ret type: INT_TYPE-100(type: INT_TYPE) 
            STATEMENT_LIST (uid: N190) inferred ret type: ROOT
              + (uid: N191) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N192) inferred ret type: INT_TYPEa [scope (2,0) <- (1,0)] declared at line 13 (type: INT_TYPE) 
                ID (uid: N193) inferred ret type: INT_TYPEb [scope (2,0) <- (1,0)] declared at line 13 (type: INT_TYPE) 
              = (uid: N194) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N195) inferred ret type: INT_TYPEc [scope (2,0) <- (1,0)] declared at line 13 (type: INT_TYPE) 
                + (uid: N196) inferred ret type: INT_TYPE(type: INT_TYPE) 
                  ID (uid: N197) inferred ret type: INT_TYPEe [scope (2,0) <- (1,0)] declared at line 14 (type: INT_TYPE) 
                  ID (uid: N198) inferred ret type: INT_TYPEf [scope (2,0) <- (1,0)] declared at line 14 (type: INT_TYPE) 
        WHILE (uid: N199) inferred ret type: ROOT
          == (uid: N200) inferred ret type: INT_TYPE(type: INT_TYPE) 
            - (uid: N201) inferred ret type: INT_TYPE(type: INT_TYPE) 
              / (uid: N202) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N203) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
                INT_LITERAL (uid: N204) inferred ret type: INT_TYPE5(type: INT_TYPE) 
              + (uid: N205) inferred ret type: INT_TYPE(type: INT_TYPE) 
                INT_LITERAL (uid: N206) inferred ret type: INT_TYPE-3(type: INT_TYPE) 
                INT_LITERAL (uid: N207) inferred ret type: INT_TYPE-8(type: INT_TYPE) 
            INT_LITERAL (uid: N208) inferred ret type: INT_TYPE100(type: INT_TYPE) 
          SEQ (uid: N209) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N210) inferred ret type: ROOT
              ID (uid: N211) inferred ret type: INT_TYPEtt [scope (2,1) <- (1,0)] declared at line 68 (type: INT_TYPE) 
              ARRAY_TYPE (uid: N212) inferred ret type: INT_TYPEuu [scope (2,1) <- (1,0)] declared at line 68 (type: INT_TYPE) 
                INT_LITERAL (uid: N213) inferred ret type: INT_TYPE10(type: INT_TYPE) 
            STATEMENT_LIST (uid: N214) inferred ret type: ROOT
              PRINT (uid: N215) inferred ret type: ROOT
                * (uid: N216) inferred ret type: INT_TYPE(type: INT_TYPE) 
                  INT_LITERAL (uid: N217) inferred ret type: INT_TYPE12(type: INT_TYPE) 
                  INT_LITERAL (uid: N218) inferred ret type: INT_TYPE21(type: INT_TYPE) 
        DO_WHILE (uid: N219) inferred ret type: ROOT
          INT_LITERAL (uid: N220) inferred ret type: INT_TYPE1(type: INT_TYPE) 
          SEQ (uid: N221) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N222) inferred ret type: ROOT
              ID (uid: N223) inferred ret type: INT_TYPEasd [scope (2,2) <- (1,0)] declared at line 74 (type: INT_TYPE) 
              ID (uid: N224) inferred ret type: INT_TYPEdsa [scope (2,2) <- (1,0)] declared at line 75 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N225) inferred ret type: ROOT
              = (uid: N226) inferred ret type: INT_TYPE(type: INT_TYPE) 
                ID (uid: N227) inferred ret type: INT_TYPEasd [scope (2,2) <- (1,0)] declared at line 74 (type: INT_TYPE) 
                ID (uid: N228) inferred ret type: INT_TYPEdsa [scope (2,2) <- (1,0)] declared at line 75 (type: INT_TYPE) 
        IF_ELSE_STMT (uid: N229) inferred ret type: ROOT
          == (uid: N230) inferred ret type: INT_TYPE(type: INT_TYPE) 
            * (uid: N231) inferred ret type: INT_TYPE(type: INT_TYPE) 
              ID (uid: N232) inferred ret type: INT_TYPEa [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
              ID (uid: N233) inferred ret type: INT_TYPEb [scope (1,0) <- (0,0)] declared at line 13 (type: INT_TYPE) 
            ID (uid: N234) inferred ret type: INT_TYPEd [scope (1,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          SEQ (uid: N235) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N236) inferred ret type: ROOT
              ID (uid: N237) inferred ret type: INT_TYPEx [scope (2,3) <- (1,0)] declared at line 80 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N238) inferred ret type: ROOT
          SEQ (uid: N239) inferred ret type: ROOT
            LOCAL_DECLARATIONS (uid: N240) inferred ret type: ROOT
              ID (uid: N241) inferred ret type: INT_TYPEy [scope (2,4) <- (1,0)] declared at line 83 (type: INT_TYPE) 
            STATEMENT_LIST (uid: N242) inferred ret type: ROOT
        RETURN (uid: N243) inferred ret type: ROOT[scope (1,0) <- (0,0)]return to main at line 6 
          INT_LITERAL (uid: N244) inferred ret type: INT_TYPE0(type: INT_TYPE) 
(0-0) contains:
  VAR_INT __-88 (offset: 0 or addr: 0)
  VAR_INT __-2 (offset: 0 or addr: 0)
  VAR_INT __-3 (offset: 0 or addr: 0)
  VAR_INT __-6 (offset: 0 or addr: 0)
  VAR_INT __-8 (offset: 0 or addr: 0)
  VAR_INT __100 (offset: 0 or addr: 0)
  VAR_INT __-100 (offset: 0 or addr: 0)
  VAR_INT __10 (offset: 0 or addr: 0)
  VAR_INT __12 (offset: 0 or addr: 0)
  VAR_INT __200 (offset: 0 or addr: 0)
  VAR_INT __-10 (offset: 0 or addr: 0)
  VAR_INT __21 (offset: 0 or addr: 0)
  VAR_INT __22 (offset: 0 or addr: 0)
  VAR_INT __23 (offset: 0 or addr: 0)
  VAR_INT __-23 (offset: 0 or addr: 0)
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __2 (offset: 0 or addr: 0)
  VAR_INT __3 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
  VAR_INT __5 (offset: 0 or addr: 0)
  VAR_INT __7 (offset: 0 or addr: 0)
  VAR_INT __9 (offset: 0 or addr: 0)
  STRING test basics!\n
There are 177 entries
0: (ASSIGN, a, __0, -)
1: (ASSIGN, c, __23, -)
2: (LABEL, main, -, -)
3: (ASSIGN, h, __2, -)
4: (ASSIGN, i, __3, -)
5: (MULT, __T0, a, b)
6: (MULT, __T1, a, b)
7: (MULT, __T2, __T0, __4)
8: (ADDR, __T3, cc, -)
9: (SUB, __T4, __T3, __T2)
10: (ASSIGN, __T4, __T1, -)
11: (PRINT, test basics!\n, -, -)
12: (READ, f, -, -)
13: (SUB, __T6, __1, b)
14: (ASSIGN, c, __T6, -)
15: (ADD, __T7, b, __1)
16: (ASSIGN, c, __T7, -)
17: (SUB, __T8, __5, __5)
18: (ASSIGN, c, __T8, -)
19: (MULT, __T9, __1, __-6)
20: (ASSIGN, c, __T9, -)
21: (SUB, __T10, __-2, __9)
22: (ASSIGN, c, __T10, -)
23: (ADD, __T11, __1, __7)
24: (ASSIGN, c, __T11, -)
25: (SUB, __T12, __1, __-10)
26: (ASSIGN, c, __T12, -)
27: (SUB, __T13, __22, __-88)
28: (ASSIGN, c, __T13, -)
29: (NEG, __T14, b, -)
30: (MULT, __T15, a, __T14)
31: (ASSIGN, c, __T15, -)
32: (ADD, __T16, a, b)
33: (ASSIGN, c, __T16, -)
34: (SUB, __T17, a, b)
35: (ASSIGN, c, __T17, -)
36: (MULT, __T18, a, b)
37: (ASSIGN, c, __T18, -)
38: (DIV, __T19, a, b)
39: (ASSIGN, c, __T19, -)
40: (MOD, __T20, a, b)
41: (ASSIGN, c, __T20, -)
42: (LT, __T23, a, b)
43: (ifTrue, __L_114_TRUE, __T23, -)
44: (ASSIGN, __T23, __0, -)
45: (GOTO, __L_114_DONE, -, -)
46: (LABEL, __L_114_TRUE, -, -)
47: (ASSIGN, __T23, __1, -)
48: (LABEL, __L_114_DONE, -, -)
49: (ASSIGN, c, __T23, -)
50: (LTEQ, __T26, a, b)
51: (ifTrue, __L_119_TRUE, __T26, -)
52: (ASSIGN, __T26, __0, -)
53: (GOTO, __L_119_DONE, -, -)
54: (LABEL, __L_119_TRUE, -, -)
55: (ASSIGN, __T26, __1, -)
56: (LABEL, __L_119_DONE, -, -)
57: (ASSIGN, c, __T26, -)
58: (GT, __T29, a, b)
59: (ifTrue, __L_124_TRUE, __T29, -)
60: (ASSIGN, __T29, __0, -)
61: (GOTO, __L_124_DONE, -, -)
62: (LABEL, __L_124_TRUE, -, -)
63: (ASSIGN, __T29, __1, -)
64: (LABEL, __L_124_DONE, -, -)
65: (ASSIGN, c, __T29, -)
66: (GTEQ, __T32, a, b)
67: (ifTrue, __L_129_TRUE, __T32, -)
68: (ASSIGN, __T32, __0, -)
69: (GOTO, __L_129_DONE, -, -)
70: (LABEL, __L_129_TRUE, -, -)
71: (ASSIGN, __T32, __1, -)
72: (LABEL, __L_129_DONE, -, -)
73: (ASSIGN, c, __T32, -)
74: (EQ, __T35, a, b)
75: (ifTrue, __L_134_TRUE, __T35, -)
76: (ASSIGN, __T35, __0, -)
77: (GOTO, __L_134_DONE, -, -)
78: (LABEL, __L_134_TRUE, -, -)
79: (ASSIGN, __T35, __1, -)
80: (LABEL, __L_134_DONE, -, -)
81: (ASSIGN, c, __T35, -)
82: (NEQ, __T38, a, b)
83: (ifTrue, __L_139_TRUE, __T38, -)
84: (ASSIGN, __T38, __0, -)
85: (GOTO, __L_139_DONE, -, -)
86: (LABEL, __L_139_TRUE, -, -)
87: (ASSIGN, __T38, __1, -)
88: (LABEL, __L_139_DONE, -, -)
89: (ASSIGN, c, __T38, -)
90: (ASSIGN, __T40, a, -)
91: (ifFalse, __L_144_FALSE, __T40, -)
92: (ASSIGN, __T41, b, -)
93: (ifFalse, __L_144_FALSE, __T41, -)
94: (ASSIGN, __T42, __1, -)
95: (GOTO, __L_144_DONE, -, -)
96: (LABEL, __L_144_FALSE, -, -)
97: (ASSIGN, __T42, __0, -)
98: (LABEL, __L_144_DONE, -, -)
99: (ASSIGN, c, __T42, -)
100: (ASSIGN, __T43, a, -)
101: (ifTrue, __L_149_TRUE, __T43, -)
102: (ASSIGN, __T46, b, -)
103: (ifTrue, __L_149_TRUE, __T43, -)
104: (ASSIGN, __T45, __0, -)
105: (GOTO, __L_149_DONE, -, -)
106: (LABEL, __L_149_TRUE, -, -)
107: (ASSIGN, __T45, __1, -)
108: (LABEL, __L_149_DONE, -, -)
109: (ASSIGN, c, __T45, -)
110: (ASSIGN, __T47, b, -)
111: (ifFalse, __L_154_FALSE, __T47, -)
112: (ASSIGN, __T48, __0, -)
113: (GOTO, __L_154_DONE, -, -)
114: (LABEL, __L_154_FALSE, -, -)
115: (ASSIGN, __T48, __1, -)
116: (LABEL, __L_154_DONE, -, -)
117: (ASSIGN, c, __T48, -)
118: (NEG, __T49, b, -)
119: (ASSIGN, c, __T49, -)
120: (INC, __T50, b, -)
121: (ASSIGN, c, __T50, -)
122: (DEC, __T51, b, -)
123: (ASSIGN, c, __T51, -)
124: (MOD, __T52, a, __5)
125: (ASSIGN, c, __T52, -)
126: (ASSIGN, c, __-23, -)
127: (ASSIGN, a, __100, -)
128: (LABEL, __L_176_FOR_BEGIN, -, -)
129: (LT, __T55, a, __200)
130: (ifTrue, __L_180_TRUE, __T55, -)
131: (ASSIGN, __T55, __0, -)
132: (GOTO, __L_180_DONE, -, -)
133: (LABEL, __L_180_TRUE, -, -)
134: (ASSIGN, __T55, __1, -)
135: (LABEL, __L_180_DONE, -, -)
136: (ifFalse, __L_176_FOR_END, __T55, -)
137: (ASSIGN, zz, __-100, -)
138: (ADD, __T56, a, b)
139: (ADD, __T57, e, f)
140: (ASSIGN, c, __T57, -)
141: (INC, __T58, a, -)
142: (GOTO, __L_176_FOR_BEGIN, -, -)
143: (LABEL, __L_176_FOR_END, -, -)
144: (LABEL, __L_199_WHILE_BEGIN, -, -)
145: (DIV, __T59, a, __5)
146: (ADD, __T60, __-3, __-8)
147: (SUB, __T61, __T59, __T60)
148: (EQ, __T64, __T61, __100)
149: (ifTrue, __L_200_TRUE, __T64, -)
150: (ASSIGN, __T64, __0, -)
151: (GOTO, __L_200_DONE, -, -)
152: (LABEL, __L_200_TRUE, -, -)
153: (ASSIGN, __T64, __1, -)
154: (LABEL, __L_200_DONE, -, -)
155: (ifFalse, __L_199_WHILE_END, __T64, -)
156: (MULT, __T65, __12, __21)
157: (PRINT, __T65, -, -)
158: (GOTO, __L_199_WHILE_BEGIN, -, -)
159: (LABEL, __L_199_WHILE_END, -, -)
160: (LABEL, __L_219_DO_WHILE_BEGIN, -, -)
161: (ASSIGN, asd, dsa, -)
162: (ifTrue, __L_219_DO_WHILE_BEGIN, __1, -)
163: (MULT, __T67, a, b)
164: (EQ, __T70, __T67, d)
165: (ifTrue, __L_230_TRUE, __T70, -)
166: (ASSIGN, __T70, __0, -)
167: (GOTO, __L_230_DONE, -, -)
168: (LABEL, __L_230_TRUE, -, -)
169: (ASSIGN, __T70, __1, -)
170: (LABEL, __L_230_DONE, -, -)
171: (ASSIGN, __T66, __T70, -)
172: (ifFalse, __L_229_ELSE, __T66, -)
173: (GOTO, __L_229_FI, -, -)
174: (LABEL, __L_229_ELSE, -, -)
175: (LABEL, __L_229_FI, -, -)
176: (RETURN, __0, -, -)
a -32
b -36
c -40
d -44
e -48
f -52
h -56
i -60
zz -112
tt -116
dsa -160
asd -164
x -168
y -172
in var int 
in var int 
in var int 

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 172
  VAR_INT a (offset: 0 or addr: 5640)
  VAR_INT b (offset: 0 or addr: 5644)
  VAR_INT c (offset: 0 or addr: 5648)
  (1-0) contains:
    VAR_ARRAY_INT dd (length: 5, offset: -8 or addr: 0)
    VAR_INT a (offset: -28 or addr: 0)
    VAR_INT b (offset: -32 or addr: 0)
    VAR_INT c (offset: -36 or addr: 0)
    VAR_INT d (offset: -40 or addr: 0)
    VAR_INT e (offset: -44 or addr: 0)
    VAR_INT f (offset: -48 or addr: 0)
    VAR_INT h (offset: -52 or addr: 0)
    VAR_INT i (offset: -56 or addr: 0)
    VAR_ARRAY_INT cc (length: 12, offset: -60 or addr: 0)
    (2-0) contains:
      VAR_INT zz (offset: -108 or addr: 0)
    (2-1) contains:
      VAR_INT tt (offset: -112 or addr: 0)
      VAR_ARRAY_INT uu (length: 10, offset: -116 or addr: 0)
    (2-2) contains:
      VAR_INT dsa (offset: -156 or addr: 0)
      VAR_INT asd (offset: -160 or addr: 0)
    (2-3) contains:
      VAR_INT x (offset: -164 or addr: 0)
    (2-4) contains:
      VAR_INT y (offset: -168 or addr: 0)


===========================================================
test1.c finished.
