Result of test done to parser.

test9.c BEGIN.
===========================================================



ROOT (uid: N0) 
  FUNC_DECLARATION (uid: N1) my_func  (2 params: VAR_INT  VAR_INT )[scope (0,0) <- (0,0)] declared at line 1 (type: VOID_TYPE) 
    FORMAL_PARAMS (uid: N2) 
      ID (uid: N3) a [scope (1,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
      ID (uid: N4) d [scope (1,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
    SEQ (uid: N5) 
      LOCAL_DECLARATIONS (uid: N6) 
        ID (uid: N7) e [scope (1,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
        ID (uid: N8) f [scope (1,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
        ID (uid: N9) g [scope (1,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
        ID (uid: N10) h [scope (1,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N11) 
        = (uid: N12) (type: INT_TYPE) 
          ID (uid: N13) e [scope (1,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
          + (uid: N14) (type: INT_TYPE) 
            ID (uid: N15) f [scope (1,0) <- (0,0)] declared at line 2 (type: INT_TYPE) 
            INT_LITERAL (uid: N16) 4(type: INT_TYPE) 
        RETURN (uid: N0) [scope (0,0) <- (0,0)]return to my_func at line 1 (type: VOID_TYPE) 
          VOID_TYPE (uid: N0) 
  FUNC_DECLARATION (uid: N17) my_new_f  (0 params:)[scope (0,0) <- (0,0)] declared at line 7 (type: VOID_TYPE) 
    FORMAL_PARAMS (uid: N18) 
    SEQ (uid: N19) 
      LOCAL_DECLARATIONS (uid: N20) 
        ID (uid: N21) e [scope (1,1) <- (0,0)] declared at line 8 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N22) 
  FUNC_DECLARATION (uid: N23) main  (0 params:)[scope (0,0) <- (0,0)] declared at line 12 (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N24) 
    SEQ (uid: N25) 
      LOCAL_DECLARATIONS (uid: N26) 
        ID (uid: N27) a [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N28) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N29) c [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        ID (uid: N30) d [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N31) 
        = (uid: N32) (type: INT_TYPE) 
          ID (uid: N33) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          INT_LITERAL (uid: N34) 1(type: INT_TYPE) 
        = (uid: N35) (type: INT_TYPE) 
          ID (uid: N36) c [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          INT_LITERAL (uid: N37) 2(type: INT_TYPE) 
        = (uid: N38) (type: INT_TYPE) 
          ID (uid: N39) d [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          INT_LITERAL (uid: N40) 3(type: INT_TYPE) 
        IF_STMT (uid: N41) 
          == (uid: N42) (type: INT_TYPE) 
            ID (uid: N43) a [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
            INT_LITERAL (uid: N44) 1(type: INT_TYPE) 
          SEQ (uid: N45) 
            LOCAL_DECLARATIONS (uid: N46) 
            STATEMENT_LIST (uid: N47) 
              = (uid: N48) (type: INT_TYPE) 
                ID (uid: N49) b [scope (2,0) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N50) 1(type: INT_TYPE) 
        IF_ELSE_STMT (uid: N51) 
          == (uid: N52) (type: INT_TYPE) 
            ID (uid: N53) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
            INT_LITERAL (uid: N54) 1(type: INT_TYPE) 
          SEQ (uid: N55) 
            LOCAL_DECLARATIONS (uid: N56) 
            STATEMENT_LIST (uid: N57) 
              = (uid: N58) (type: INT_TYPE) 
                ID (uid: N59) c [scope (2,1) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N60) 2(type: INT_TYPE) 
              = (uid: N61) (type: INT_TYPE) 
                ID (uid: N62) d [scope (2,1) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N63) 4(type: INT_TYPE) 
              + (uid: N64) (type: INT_TYPE) 
                ID (uid: N65) a [scope (2,1) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                ID (uid: N66) b [scope (2,1) <- (1,2)] declared at line 14 (type: INT_TYPE) 
          SEQ (uid: N67) 
            LOCAL_DECLARATIONS (uid: N68) 
            STATEMENT_LIST (uid: N69) 
              = (uid: N70) (type: INT_TYPE) 
                ID (uid: N71) c [scope (2,2) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N72) 3(type: INT_TYPE) 
              = (uid: N73) (type: INT_TYPE) 
                ID (uid: N74) b [scope (2,2) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N75) 2(type: INT_TYPE) 
              = (uid: N76) (type: INT_TYPE) 
                ID (uid: N77) d [scope (2,2) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N78) 1(type: INT_TYPE) 
              = (uid: N79) (type: INT_TYPE) 
                ID (uid: N80) a [scope (2,2) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                + (uid: N81) (type: INT_TYPE) 
                  ID (uid: N82) d [scope (2,2) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                  ID (uid: N83) b [scope (2,2) <- (1,2)] declared at line 14 (type: INT_TYPE) 
        DO_WHILE (uid: N84) 
          == (uid: N85) (type: INT_TYPE) 
            ID (uid: N86) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
            INT_LITERAL (uid: N87) 3(type: INT_TYPE) 
          SEQ (uid: N88) 
            LOCAL_DECLARATIONS (uid: N89) 
            STATEMENT_LIST (uid: N90) 
              = (uid: N91) (type: INT_TYPE) 
                ID (uid: N92) a [scope (2,3) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N93) 3(type: INT_TYPE) 
        FOR (uid: N94) 
          FOR_HEADER_EMPTY (uid: N95) EMPTY FOR HEADER
          FOR_HEADER_EMPTY (uid: N96) EMPTY FOR HEADER
          FOR_HEADER_EMPTY (uid: N97) EMPTY FOR HEADER
          SEQ (uid: N98) 
            LOCAL_DECLARATIONS (uid: N99) 
            STATEMENT_LIST (uid: N100) 
              = (uid: N101) (type: INT_TYPE) 
                ID (uid: N102) b [scope (2,4) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N103) 3(type: INT_TYPE) 
              = (uid: N104) (type: INT_TYPE) 
                ID (uid: N105) b [scope (2,4) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N106) 3(type: INT_TYPE) 
              = (uid: N107) (type: INT_TYPE) 
                ID (uid: N108) b [scope (2,4) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N109) 3(type: INT_TYPE) 
              = (uid: N110) (type: INT_TYPE) 
                ID (uid: N111) b [scope (2,4) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N112) 3(type: INT_TYPE) 
              = (uid: N113) (type: INT_TYPE) 
                ID (uid: N114) b [scope (2,4) <- (1,2)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N115) 3(type: INT_TYPE) 
        PRINT (uid: N116) 
          STRING_LITERAL (uid: N117) alygljkglkug 
        PRINT (uid: N118) 
          * (uid: N119) (type: INT_TYPE) 
            ID (uid: N120) a [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
            ID (uid: N121) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        PRINT (uid: N122) 
          ID (uid: N123) c [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        CALL (uid: N124) 
          FUNCTION (uid: N125) my_func  (2 params: VOID_TYPE VOID_TYPE)[scope (1,2) <- (0,0)] declared at line 1 (type: VOID_TYPE) 
            + (uid: N126) (type: INT_TYPE) 
              + (uid: N127) (type: INT_TYPE) 
                ID (uid: N128) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
                INT_LITERAL (uid: N129) 3(type: INT_TYPE) 
              ID (uid: N130) d [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
            ID (uid: N131) c [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        = (uid: N132) (type: INT_TYPE) 
          ID (uid: N133) d [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          INT_LITERAL (uid: N134) 7(type: INT_TYPE) 
        + (uid: N135) (type: INT_TYPE) 
          ID (uid: N136) a [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          ID (uid: N137) c [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
        == (uid: N138) (type: INT_TYPE) 
          + (uid: N139) (type: INT_TYPE) 
            ID (uid: N140) d [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
            ID (uid: N141) b [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          INT_LITERAL (uid: N142) 2(type: INT_TYPE) 
        + (uid: N143) 
          ID (uid: N144) a [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          ARRAY_TYPE (uid: N145) b [scope (1,2) <- (0,0)] declared at line 14 
            INT_LITERAL (uid: N146) 3(type: INT_TYPE) 
        + (uid: N147) 
          ID (uid: N148) a [scope (1,2) <- (0,0)] declared at line 14 (type: INT_TYPE) 
          ARRAY_TYPE (uid: N149) b [scope (1,2) <- (0,0)] declared at line 14 
            INT_LITERAL (uid: N150) 5(type: INT_TYPE) 
        RETURN (uid: N151) [scope (1,2) <- (0,0)]return to main at line 12 
          INT_LITERAL (uid: N152) 0(type: INT_TYPE) 
(0-0) contains:
  STRING alygljkglkug
  VAR_INT __void (offset: 0)
  VAR_INT __0 (offset: 0)
  VAR_INT __1 (offset: 0)
  VAR_INT __2 (offset: 0)
  VAR_INT __3 (offset: 0)
  VAR_INT __4 (offset: 0)
  VAR_INT __5 (offset: 0)
  VAR_INT __7 (offset: 0)
There are 96 entries
0: (LABEL, my_func, -, -)
1: (ADD, __T0, f, __4)
2: (ASSIGN, e, __T0, -)
3: (RETURN, __void, -, -)
4: (LABEL, my_new_f, -, -)
5: (LABEL, main, -, -)
6: (ASSIGN, b, __1, -)
7: (ASSIGN, c, __2, -)
8: (ASSIGN, d, __3, -)
9: (EQ, __T4, a, __1)
10: (ifTrue, __L_42_TRUE, __T4, -)
11: (ASSIGN, __T4, __0, -)
12: (GOTO, __L_42_DONE, -, -)
13: (LABEL, __L_42_TRUE, -, -)
14: (ASSIGN, __T4, __1, -)
15: (LABEL, __L_42_DONE, -, -)
16: (ASSIGN, __L_41_FI, __T4, -)
17: (ifFalse, __L_41_FI, __T1, -)
18: (ASSIGN, b, __1, -)
19: (LABEL, __L_41_FI, -, -)
20: (EQ, __T8, b, __1)
21: (ifTrue, __L_52_TRUE, __T8, -)
22: (ASSIGN, __T8, __0, -)
23: (GOTO, __L_52_DONE, -, -)
24: (LABEL, __L_52_TRUE, -, -)
25: (ASSIGN, __T8, __1, -)
26: (LABEL, __L_52_DONE, -, -)
27: (ASSIGN, __T5, __T8, -)
28: (ifFalse, __L_51_ELSE, __T5, -)
29: (ASSIGN, c, __2, -)
30: (ASSIGN, d, __4, -)
31: (ADD, __T9, a, b)
32: (GOTO, __L_51_FI, -, -)
33: (LABEL, __L_51_ELSE, -, -)
34: (ASSIGN, c, __3, -)
35: (ASSIGN, b, __2, -)
36: (ASSIGN, d, __1, -)
37: (ADD, __T10, d, b)
38: (ASSIGN, a, __T10, -)
39: (LABEL, __L_51_FI, -, -)
40: (LABEL, __L_84_DO_WHILE_BEGIN, -, -)
41: (ASSIGN, a, __3, -)
42: (EQ, __T13, b, __3)
43: (ifTrue, __L_85_TRUE, __T13, -)
44: (ASSIGN, __T13, __0, -)
45: (GOTO, __L_85_DONE, -, -)
46: (LABEL, __L_85_TRUE, -, -)
47: (ASSIGN, __T13, __1, -)
48: (LABEL, __L_85_DONE, -, -)
49: (ifTrue, __L_84_DO_WHILE_BEGIN, __T13, -)
50: (ASSIGN, __T14, __1, -)
51: (LABEL, __L_94_FOR_BEGIN, -, -)
52: (ASSIGN, __T15, __1, -)
53: (ifFalse, __L_94_FOR_END, __T15, -)
54: (ASSIGN, b, __3, -)
55: (ASSIGN, b, __3, -)
56: (ASSIGN, b, __3, -)
57: (ASSIGN, b, __3, -)
58: (ASSIGN, b, __3, -)
59: (ASSIGN, __T16, __1, -)
60: (GOTO, __L_94_FOR_BEGIN, -, -)
61: (LABEL, __L_94_FOR_END, -, -)
62: (PRINT, __T17, alygljkglkug, -)
63: (MULT, __T18, a, b)
64: (PRINT, __T19, __T18, -)
65: (PRINT, __T20, c, -)
66: (LABEL, __L_124_FUNC_PROLOGUE_BEGIN, -, -)
67: (ADD, __T21, b, __3)
68: (ADD, __T22, __T21, d)
69: (ASSIGN, __T23, __T22, -)
70: (PUSH, __T23, -, -)
71: (ASSIGN, __T24, c, -)
72: (PUSH, __T24, -, -)
73: (CALL, my_func, -, -)
74: (LABEL, __L_124_FUNC_EPILOGUE, -, -)
75: (ASSIGN, d, __7, -)
76: (ADD, __T25, a, c)
77: (ADD, __T26, d, b)
78: (EQ, __T29, __T26, __2)
79: (ifTrue, __L_138_TRUE, __T29, -)
80: (ASSIGN, __T29, __0, -)
81: (GOTO, __L_138_DONE, -, -)
82: (LABEL, __L_138_TRUE, -, -)
83: (ASSIGN, __T29, __1, -)
84: (LABEL, __L_138_DONE, -, -)
85: (MULT, __T30, __3, __4)
86: (ADDR, __T31, b, -)
87: (ADD, __T32, __T30, __T31)
88: (DEREF, __T33, __T32, -)
89: (ADD, __T34, a, __T33)
90: (MULT, __T35, __5, __4)
91: (ADDR, __T36, b, -)
92: (ADD, __T37, __T35, __T36)
93: (DEREF, __T38, __T37, -)
94: (ADD, __T39, a, __T38)
95: (RETURN, __0, -, -)
a -12
b -16
c -20
d -24
e -12
a -12
d -16
e -20
f -24
g -28
h -32

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 24
  FUNC_VOID my_new_f (0 params:)space needed: 12
  FUNC_VOID my_func (2 params: VAR_INT  VAR_INT )space needed: 32
  (1-0) contains:
    VAR_INT a (offset: -8)
    VAR_INT d (offset: -12)
    VAR_INT e (offset: -16)
    VAR_INT f (offset: -20)
    VAR_INT g (offset: -24)
    VAR_INT h (offset: -28)
  (1-1) contains:
    VAR_INT e (offset: -8)
  (1-2) contains:
    VAR_INT a (offset: -8)
    VAR_INT b (offset: -12)
    VAR_INT c (offset: -16)
    VAR_INT d (offset: -20)
    (2-0) contains:
    (2-1) contains:
    (2-2) contains:
    (2-3) contains:
    (2-4) contains:


===========================================================
test9.c finished.
