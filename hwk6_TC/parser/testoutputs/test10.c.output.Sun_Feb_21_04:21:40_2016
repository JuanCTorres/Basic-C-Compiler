Result of test done to parser.

test10.c BEGIN.
===========================================================



ROOT (uid: N0) 
  FUNC_DECLARATION (uid: N1) recurr  (1 params: VAR_INT )[scope (0,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N2) 
      ID (uid: N3) a [scope (1,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
    SEQ (uid: N4) 
      LOCAL_DECLARATIONS (uid: N5) 
      STATEMENT_LIST (uid: N6) 
        IF_ELSE_STMT (uid: N7) 
          == (uid: N8) (type: INT_TYPE) 
            ID (uid: N9) a [scope (1,0) <- (0,0)] declared at line 1 (type: INT_TYPE) 
            INT_LITERAL (uid: N10) 0(type: INT_TYPE) 
          SEQ (uid: N11) 
            LOCAL_DECLARATIONS (uid: N12) 
            STATEMENT_LIST (uid: N13) 
              RETURN (uid: N14) [scope (2,0) <- (1,0)]return to recurr at line 1 
                INT_LITERAL (uid: N15) 1(type: INT_TYPE) 
          SEQ (uid: N16) 
            LOCAL_DECLARATIONS (uid: N17) 
            STATEMENT_LIST (uid: N18) 
              RETURN (uid: N19) [scope (2,1) <- (1,0)]return to recurr at line 1 
                * (uid: N20) 
                  ID (uid: N21) a [scope (2,1) <- (1,0)] declared at line 1 (type: INT_TYPE) 
                  CALL (uid: N22) 
                    FUNCTION (uid: N23) recurr  (1 params: INT_TYPE)[scope (2,1) <- (1,0)] declared at line 1 (type: INT_TYPE) 
                      - (uid: N24) (type: INT_TYPE) 
                        ID (uid: N25) a [scope (2,1) <- (1,0)] declared at line 1 (type: INT_TYPE) 
                        INT_LITERAL (uid: N26) 1(type: INT_TYPE) 
        RETURN (uid: N27) [scope (1,0) <- (0,0)]return to recurr at line 1 
          INT_LITERAL (uid: N28) 1(type: INT_TYPE) 
  FUNC_DECLARATION (uid: N29) main  (0 params:)[scope (0,0) <- (0,0)] declared at line 14 (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N30) 
    SEQ (uid: N31) 
      LOCAL_DECLARATIONS (uid: N32) 
        ID (uid: N33) answer [scope (1,1) <- (0,0)] declared at line 15 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N34) 
        = (uid: N35) 
          ID (uid: N36) answer [scope (1,1) <- (0,0)] declared at line 15 (type: INT_TYPE) 
          CALL (uid: N37) 
            FUNCTION (uid: N38) recurr  (1 params: INT_TYPE)[scope (1,1) <- (0,0)] declared at line 1 (type: INT_TYPE) 
              INT_LITERAL (uid: N39) 4(type: INT_TYPE) 
        PRINT (uid: N40) 
          ID (uid: N41) answer [scope (1,1) <- (0,0)] declared at line 15 (type: INT_TYPE) 
        RETURN (uid: N42) [scope (1,1) <- (0,0)]return to main at line 14 
          ID (uid: N43) answer [scope (1,1) <- (0,0)] declared at line 15 (type: INT_TYPE) 
(0-0) contains:
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
There are 32 entries
0: (LABEL, recurr, -, -)
1: (EQ, __T3, a, __0)
2: (ifTrue, __L_8_TRUE, __T3, -)
3: (ASSIGN, __T3, __0, -)
4: (GOTO, __L_8_DONE, -, -)
5: (LABEL, __L_8_TRUE, -, -)
6: (ASSIGN, __T3, __1, -)
7: (LABEL, __L_8_DONE, -, -)
8: (ASSIGN, __T0, __T3, -)
9: (ifFalse, __L_7_ELSE, __T0, -)
10: (RETURN, __1, -, -)
11: (GOTO, __L_7_FI, -, -)
12: (LABEL, __L_7_ELSE, -, -)
13: (LABEL, __L_22_FUNC_PROLOGUE_BEGIN, -, -)
14: (SUB, __T4, a, __1)
15: (ASSIGN, __T5, __T4, -)
16: (PUSH, __T5, -, -)
17: (CALL, recurr, -, -)
18: (LABEL, __L_22_FUNC_EPILOGUE, -, -)
19: (MULT, __T6, a, __RET_INT)
20: (RETURN, __T6, -, -)
21: (LABEL, __L_7_FI, -, -)
22: (RETURN, __1, -, -)
23: (LABEL, main, -, -)
24: (LABEL, __L_37_FUNC_PROLOGUE_BEGIN, -, -)
25: (ASSIGN, __T7, __4, -)
26: (PUSH, __T7, -, -)
27: (CALL, recurr, -, -)
28: (LABEL, __L_37_FUNC_EPILOGUE, -, -)
29: (ASSIGN, answer, __RET_INT, -)
30: (PRINT, answer, -, -)
31: (RETURN, answer, -, -)
answer -12
a -12

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 12
  FUNC_INT recurr (1 params: VAR_INT )space needed: 12
  (1-0) contains:
    VAR_INT a (offset: -8 or addr: 0)
    (2-0) contains:
    (2-1) contains:
  (1-1) contains:
    VAR_INT answer (offset: -8 or addr: 0)


===========================================================
test10.c finished.
