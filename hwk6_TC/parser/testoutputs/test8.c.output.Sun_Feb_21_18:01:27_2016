Result of test done to parser.

test8.c BEGIN.
===========================================================

3 line: 11 | Error: Returning wrong type for function main

WARNING: There were return errors. Data structure may be ill-formed.

line: 10 | Error: Type disagreement of variable(s) used with binary operator
=
line: 10 | Error: Type disagreement of variable(s) used with binary operator
=
line: 11 | Error: Type disagreement of variable(s) used with binary operator
*
line: 11 | Error: Type disagreement of variable(s) used with binary operator
*

WARNING: There were type disagreement in expressions. Data structure may be ill-formed.



ROOT (uid: N0) inferred ret type: ROOT
  FUNC_DECLARATION (uid: N1) inferred ret type: VOID_TYPEthis_func  (0 params:)[scope (0,0) <- (0,0)] declared at line 1 (type: VOID_TYPE) 
    FORMAL_PARAMS (uid: N2) inferred ret type: ROOT
    SEQ (uid: N3) inferred ret type: ROOT
      LOCAL_DECLARATIONS (uid: N4) inferred ret type: ROOT
      STATEMENT_LIST (uid: N5) inferred ret type: ROOT
  FUNC_DECLARATION (uid: N6) inferred ret type: INT_TYPEmain  (0 params:)[scope (0,0) <- (0,0)] declared at line 5 (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N7) inferred ret type: ROOT
    SEQ (uid: N8) inferred ret type: ROOT
      LOCAL_DECLARATIONS (uid: N9) inferred ret type: ROOT
        ID (uid: N10) inferred ret type: INT_TYPEa [scope (1,1) <- (0,0)] declared at line 6 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N11) inferred ret type: ROOT
        = (uid: N12) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N13) inferred ret type: INT_TYPEa [scope (1,1) <- (0,0)] declared at line 6 (type: INT_TYPE) 
          + (uid: N14) inferred ret type: INT_TYPE(type: INT_TYPE) 
            ID (uid: N15) inferred ret type: INT_TYPEa [scope (1,1) <- (0,0)] declared at line 6 (type: INT_TYPE) 
            INT_LITERAL (uid: N16) inferred ret type: INT_TYPE1(type: INT_TYPE) 
        * (uid: N17) inferred ret type: INT_TYPE(type: INT_TYPE) 
          INT_LITERAL (uid: N18) inferred ret type: INT_TYPE3(type: INT_TYPE) 
          INT_LITERAL (uid: N19) inferred ret type: INT_TYPE6(type: INT_TYPE) 
        = (uid: N20) inferred ret type: INT_TYPE(type: INT_TYPE) 
          ID (uid: N21) inferred ret type: INT_TYPEa [scope (1,1) <- (0,0)] declared at line 6 (type: INT_TYPE) 
          * (uid: N22) inferred ret type: INT_TYPE(type: INT_TYPE) 
            INT_LITERAL (uid: N23) inferred ret type: INT_TYPE5(type: INT_TYPE) 
            INT_LITERAL (uid: N24) inferred ret type: INT_TYPE2(type: INT_TYPE) 
        = (uid: N25) inferred ret type: ROOT
          ID (uid: N26) inferred ret type: INT_TYPEa [scope (1,1) <- (0,0)] declared at line 6 (type: INT_TYPE) 
          CALL (uid: N27) inferred ret type: VOID_TYPE(type: VOID_TYPE) 
            FUNCTION (uid: N28) inferred ret type: VOID_TYPEthis_func  (0 params:)[scope (1,1) <- (0,0)] declared at line 1 (type: VOID_TYPE) 
        RETURN (uid: N29) inferred ret type: ROOT[scope (1,1) <- (0,0)]return to main at line 5 
          * (uid: N30) inferred ret type: ROOT
            INT_LITERAL (uid: N31) inferred ret type: INT_TYPE1(type: INT_TYPE) 
            CALL (uid: N32) inferred ret type: VOID_TYPE(type: VOID_TYPE) 
              FUNCTION (uid: N33) inferred ret type: VOID_TYPEthis_func  (0 params:)[scope (1,1) <- (0,0)] declared at line 1 (type: VOID_TYPE) 
Halting


===========================================================
test8.c finished.
