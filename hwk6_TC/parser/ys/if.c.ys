

 #This function has locals 

#END OF PROG: 572

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
#(LABEL, main, -, -)
main:

	irmovl 20, %ecx
	subl %ecx, %esp
#NUM PARAMS: 0
#(ASSIGN, a, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -8(%ebp)
#(ASSIGN, __T1, a, -)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, 596
#(ASSIGN, __T2, a, -)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, 600
#(EQ, __T3, __T1, __T2)
	mrmovl 596, %eax
	mrmovl 600, %ecx
	subl %ecx, %eax
	rmmovl %eax, 604
#(ifTrue, __L_10_TRUE, __T3, -)
	je L_10_TRUE
#(ASSIGN, __T3, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 604
#(GOTO, __L_10_DONE, -, -)
	jmp L_10_DONE
#(LABEL, __L_10_TRUE, -, -)
L_10_TRUE:

#(ASSIGN, __T3, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 604
#(LABEL, __L_10_DONE, -, -)
L_10_DONE:

#(ASSIGN, __T0, __T3, -)
	mrmovl 604, %eax
	rmmovl %eax, 592
#(ifFalse, __L_9_ELSE, __T0, -)
	mrmovl 592, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_9_ELSE
#(ASSIGN, b, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
#(GOTO, __L_9_FI, -, -)
	jmp L_9_FI
#(LABEL, __L_9_ELSE, -, -)
L_9_ELSE:

#(ASSIGN, b, __0, -)
	irmovl 0, %eax
	rmmovl %eax, -16(%ebp)
#(LABEL, __L_9_FI, -, -)
L_9_FI:

#(RETURN, __void, -, -)
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret

.pos 0x268   # Start of global var space 
.pos 0x0000FFFC
stack:
