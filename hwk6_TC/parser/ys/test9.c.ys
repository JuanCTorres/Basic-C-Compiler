END OF PROG: 556(LABEL, my_func, -, -)
(ADD, __T0, f, __4)
	mrmovl -20(%ebp), %eax
	irmovl 4, %ecx
	addl %ecx %eax

(ASSIGN, e, __T0, -)
	mrmovl 556, %eax
	rmmovl %eax, -16(%ebp)
(RETURN, __void, -, -)
(LABEL, my_new_f, -, -)
(LABEL, main, -, -)
(ASSIGN, b, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, c, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -16(%ebp)
(ASSIGN, d, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -20(%ebp)
(EQ, __T4, a, __1)
	mrmovl -8(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 572
(ifTrue, __L_42_TRUE, __T4, -)
	je __L_42_TRUE
(ASSIGN, __T4, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 572
(GOTO, __L_42_DONE, -, -)
(LABEL, __L_42_TRUE, -, -)
(ASSIGN, __T4, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 572
(LABEL, __L_42_DONE, -, -)
(ASSIGN, __L_41_FI, __T4, -)
	mrmovl 572, %eax
(ifFalse, __L_41_FI, __T1, -)
(ASSIGN, b, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
(LABEL, __L_41_FI, -, -)
(EQ, __T8, b, __1)
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 588
(ifTrue, __L_52_TRUE, __T8, -)
	je __L_52_TRUE
(ASSIGN, __T8, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 588
(GOTO, __L_52_DONE, -, -)
(LABEL, __L_52_TRUE, -, -)
(ASSIGN, __T8, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 588
(LABEL, __L_52_DONE, -, -)
(ASSIGN, __T5, __T8, -)
	mrmovl 588, %eax
	rmmovl %eax, 576
(ifFalse, __L_51_ELSE, __T5, -)
(ASSIGN, c, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -16(%ebp)
(ASSIGN, d, __4, -)
	irmovl 4, %eax
	rmmovl %eax, -20(%ebp)
(ADD, __T9, a, b)
	mrmovl -8(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx %eax

(GOTO, __L_51_FI, -, -)
(LABEL, __L_51_ELSE, -, -)
(ASSIGN, c, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -16(%ebp)
(ASSIGN, b, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, d, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -20(%ebp)
(ADD, __T10, d, b)
	mrmovl -20(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx %eax

(ASSIGN, a, __T10, -)
	mrmovl 596, %eax
	rmmovl %eax, -8(%ebp)
(LABEL, __L_51_FI, -, -)
(LABEL, __L_84_DO_WHILE_BEGIN, -, -)
(ASSIGN, a, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -8(%ebp)
(EQ, __T13, b, __3)
	mrmovl -12(%ebp), %eax
	irmovl 3, %ecx
	subl %ecx, %eax
	rmmovl %eax, 608
(ifTrue, __L_85_TRUE, __T13, -)
	je __L_85_TRUE
(ASSIGN, __T13, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 608
(GOTO, __L_85_DONE, -, -)
(LABEL, __L_85_TRUE, -, -)
(ASSIGN, __T13, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 608
(LABEL, __L_85_DONE, -, -)
(ifTrue, __L_84_DO_WHILE_BEGIN, __T13, -)
(ASSIGN, a, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -8(%ebp)
(LABEL, __L_94_FOR_BEGIN, -, -)
(ifFalse, __L_94_FOR_END, -, -)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(INC, __T14, a, -)
	mrmovl -8(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -8(%ebp)
(GOTO, __L_94_FOR_BEGIN, -, -)
(LABEL, __L_94_FOR_END, -, -)
(PRINT, __T15, alygljkglkug, -)
(LABEL, __L_121_FUNC_PROLOGUE_BEGIN, -, -)
(ADD, __T16, b, __3)
	mrmovl -12(%ebp), %eax
	irmovl 3, %ecx
	addl %ecx %eax

(ADD, __T17, __T16, d)
	mrmovl 620, %eax
	mrmovl -20(%ebp), %ecx
	addl %ecx %eax

(ASSIGN, __T18, __T17, -)
	mrmovl 624, %eax
	rmmovl %eax, 628
(PUSH, __T18, -, -)
(ASSIGN, __T19, c, -)
	mrmovl -16(%ebp), %eax
	rmmovl %eax, 632
(PUSH, __T19, -, -)
(CALL, my_func, -, -)
(LABEL, __L_121_FUNC_EPILOGUE, -, -)
(ASSIGN, d, __7, -)
	irmovl 7, %eax
	rmmovl %eax, -20(%ebp)
(ADD, __T20, a, c)
	mrmovl -8(%ebp), %eax
	mrmovl -16(%ebp), %ecx
	addl %ecx %eax

(ADD, __T21, d, b)
	mrmovl -20(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx %eax

(EQ, __T24, __T21, __2)
	mrmovl 640, %eax
	irmovl 2, %ecx
	subl %ecx, %eax
	rmmovl %eax, 652
(ifTrue, __L_135_TRUE, __T24, -)
	je __L_135_TRUE
(ASSIGN, __T24, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 652
(GOTO, __L_135_DONE, -, -)
(LABEL, __L_135_TRUE, -, -)
(ASSIGN, __T24, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 652
(LABEL, __L_135_DONE, -, -)
(MULT, __T25, __3, __4)
	irmovl 3, %eax
	irmovl 4, %ecx
	mull %ecx %eax
(ADDR, __T26, b, -)
(ADD, __T27, __T25, __T26)
	mrmovl 656, %eax
	mrmovl 660, %ecx
	addl %ecx %eax

(DEREF, __T28, __T27, -)
(ADD, __T29, a, __T28)
	mrmovl -8(%ebp), %eax
	mrmovl 668, %ecx
	addl %ecx %eax

(MULT, __T30, __5, __4)
	irmovl 5, %eax
	irmovl 4, %ecx
	mull %ecx %eax
(ADDR, __T31, b, -)
(ADD, __T32, __T30, __T31)
	mrmovl 676, %eax
	mrmovl 680, %ecx
	addl %ecx %eax

(DEREF, __T33, __T32, -)
(ADD, __T34, a, __T33)
	mrmovl -8(%ebp), %eax
	mrmovl 688, %ecx
	addl %ecx %eax

(RETURN, __0, -, -)
.pos 0x2bc    #Start of string space

	.long 	0x616c7967
	.long 	0x6c6a6b67
	.long 	0x6c6b7567
.pos 0x2d0   # Start of global var space 
