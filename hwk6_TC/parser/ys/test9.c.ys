END OF PROG: 560(LABEL, my_func, -, -)
(ADD, __T0, f, __4)
	mrmovl -20(%ebp), %eax
	irmovl 4, %ecx
	addl %ecx %eax

(ASSIGN, e, __T0, -)
	mrmovl 560, %eax
	rmmovl %eax, -16(%ebp)
(RETURN, __void, -, -)
	irmovl 0, %edi
(LABEL, my_new_f, -, -)
(LABEL, main, -, -)
(ASSIGN, b, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, c, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -16(%ebp)
(ASSIGN, d, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -20(%ebp)
(EQ, __T4, a, __1)
	mrmovl -8(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 576
(ifTrue, __L_42_TRUE, __T4, -)
	je __L_42_TRUE
(ASSIGN, __T4, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 576
(GOTO, __L_42_DONE, -, -)
(LABEL, __L_42_TRUE, -, -)
(ASSIGN, __T4, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 576
(LABEL, __L_42_DONE, -, -)
(ASSIGN, __L_41_FI, __T4, -)
	mrmovl 576, %eax
(ifFalse, __L_41_FI, __T1, -)
	mrmovl 564, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_41_FI
(ASSIGN, b, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
(LABEL, __L_41_FI, -, -)
(EQ, __T8, b, __1)
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 592
(ifTrue, __L_52_TRUE, __T8, -)
	je __L_52_TRUE
(ASSIGN, __T8, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 592
(GOTO, __L_52_DONE, -, -)
(LABEL, __L_52_TRUE, -, -)
(ASSIGN, __T8, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 592
(LABEL, __L_52_DONE, -, -)
(ASSIGN, __T5, __T8, -)
	mrmovl 592, %eax
	rmmovl %eax, 580
(ifFalse, __L_51_ELSE, __T5, -)
	mrmovl 580, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_51_ELSE
(ASSIGN, c, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -16(%ebp)
(ASSIGN, d, __4, -)
	irmovl 4, %eax
	rmmovl %eax, -20(%ebp)
(ADD, __T9, a, b)
	mrmovl -8(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx %eax

(GOTO, __L_51_FI, -, -)
(LABEL, __L_51_ELSE, -, -)
(ASSIGN, c, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -16(%ebp)
(ASSIGN, b, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, d, __1, -)
	irmovl 1, %eax
	rmmovl %eax, -20(%ebp)
(ADD, __T10, d, b)
	mrmovl -20(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx %eax

(ASSIGN, a, __T10, -)
	mrmovl 600, %eax
	rmmovl %eax, -8(%ebp)
(LABEL, __L_51_FI, -, -)
(LABEL, __L_84_DO_WHILE_BEGIN, -, -)
(ASSIGN, a, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -8(%ebp)
(EQ, __T13, b, __3)
	mrmovl -12(%ebp), %eax
	irmovl 3, %ecx
	subl %ecx, %eax
	rmmovl %eax, 612
(ifTrue, __L_85_TRUE, __T13, -)
	je __L_85_TRUE
(ASSIGN, __T13, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 612
(GOTO, __L_85_DONE, -, -)
(LABEL, __L_85_TRUE, -, -)
(ASSIGN, __T13, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 612
(LABEL, __L_85_DONE, -, -)
(ifTrue, __L_84_DO_WHILE_BEGIN, __T13, -)
	mrmovl 612, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_84_DO_WHILE_BEGIN
(ASSIGN, __T14, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 616
(LABEL, __L_94_FOR_BEGIN, -, -)
(ASSIGN, __T15, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 620
(ifFalse, __L_94_FOR_END, __T15, -)
	mrmovl 620, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_94_FOR_END
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, b, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, __T16, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 624
(GOTO, __L_94_FOR_BEGIN, -, -)
(LABEL, __L_94_FOR_END, -, -)
(PRINT, __T17, alygljkglkug, -)
(LABEL, __L_118_FUNC_PROLOGUE_BEGIN, -, -)
(ADD, __T18, b, __3)
	mrmovl -12(%ebp), %eax
	irmovl 3, %ecx
	addl %ecx %eax

(ADD, __T19, __T18, d)
	mrmovl 632, %eax
	mrmovl -20(%ebp), %ecx
	addl %ecx %eax

(ASSIGN, __T20, __T19, -)
	mrmovl 636, %eax
	rmmovl %eax, 640
(PUSH, __T20, -, -)
	mrmovl 640, %eax
	push %eax
(ASSIGN, __T21, c, -)
	mrmovl -16(%ebp), %eax
	rmmovl %eax, 644
(PUSH, __T21, -, -)
	mrmovl 644, %eax
	push %eax
(CALL, my_func, -, -)
	call my_func
(LABEL, __L_118_FUNC_EPILOGUE, -, -)
(ASSIGN, d, __7, -)
	irmovl 7, %eax
	rmmovl %eax, -20(%ebp)
(ADD, __T22, a, c)
	mrmovl -8(%ebp), %eax
	mrmovl -16(%ebp), %ecx
	addl %ecx %eax

(ADD, __T23, d, b)
	mrmovl -20(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx %eax

(EQ, __T26, __T23, __2)
	mrmovl 652, %eax
	irmovl 2, %ecx
	subl %ecx, %eax
	rmmovl %eax, 664
(ifTrue, __L_132_TRUE, __T26, -)
	je __L_132_TRUE
(ASSIGN, __T26, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 664
(GOTO, __L_132_DONE, -, -)
(LABEL, __L_132_TRUE, -, -)
(ASSIGN, __T26, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 664
(LABEL, __L_132_DONE, -, -)
(MULT, __T27, __3, __4)
	irmovl 3, %eax
	irmovl 4, %ecx
	mull %ecx %eax
(ADDR, __T28, b, -)
(ADD, __T29, __T27, __T28)
	mrmovl 668, %eax
	mrmovl 672, %ecx
	addl %ecx %eax

(DEREF, __T30, __T29, -)
(ADD, __T31, a, __T30)
	mrmovl -8(%ebp), %eax
	mrmovl 680, %ecx
	addl %ecx %eax

(MULT, __T32, __5, __4)
	irmovl 5, %eax
	irmovl 4, %ecx
	mull %ecx %eax
(ADDR, __T33, b, -)
(ADD, __T34, __T32, __T33)
	mrmovl 688, %eax
	mrmovl 692, %ecx
	addl %ecx %eax

(DEREF, __T35, __T34, -)
(ADD, __T36, a, __T35)
	mrmovl -8(%ebp), %eax
	mrmovl 700, %ecx
	addl %ecx %eax

(RETURN, __0, -, -)
	irmovl 0, %edi
.pos 0x2c8    #Start of string space

	.long 	0x616c7967
	.long 	0x6c6a6b67
	.long 	0x6c6b7567
.pos 0x2dc   # Start of global var space 
