.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
my_func:

	rrmovl %esp, %ebp
	irmovl 32, %ecx
	subl %ecx, %esp
	mrmovl 4(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -20(%ebp), %eax
	irmovl 4, %ecx
	addl %ecx, %eax

	mrmovl 2932, %eax
	rmmovl %eax, -16(%ebp)
	irmovl 0, %edi
my_new_f:

	rrmovl %esp, %ebp
	irmovl 12, %ecx
	subl %ecx, %esp
main:

	rrmovl %esp, %ebp
	irmovl 24, %ecx
	subl %ecx, %esp
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 2, %eax
	rmmovl %eax, -16(%ebp)
	irmovl 3, %eax
	rmmovl %eax, -20(%ebp)
	mrmovl -8(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 2948
	je L_45_TRUE
	irmovl 0, %eax
	rmmovl %eax, 2948
	jmp L_45_DONE
L_45_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 2948
L_45_DONE:

	mrmovl 2948, %eax
	mrmovl 2936, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_44_FI
	irmovl 1, %eax
	rmmovl %eax, -12(%ebp)
L_44_FI:

	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 2964
	je L_55_TRUE
	irmovl 0, %eax
	rmmovl %eax, 2964
	jmp L_55_DONE
L_55_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 2964
L_55_DONE:

	mrmovl 2964, %eax
	rmmovl %eax, 2952
	mrmovl 2952, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_54_ELSE
	irmovl 2, %eax
	rmmovl %eax, -16(%ebp)
	irmovl 4, %eax
	rmmovl %eax, -20(%ebp)
	mrmovl -8(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx, %eax

	jmp L_54_FI
L_54_ELSE:

	irmovl 3, %eax
	rmmovl %eax, -16(%ebp)
	irmovl 2, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 1, %eax
	rmmovl %eax, -20(%ebp)
	mrmovl -20(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx, %eax

	mrmovl 2972, %eax
	rmmovl %eax, -8(%ebp)
L_54_FI:

L_87_DO_WHILE_BEGIN:

	irmovl 3, %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -12(%ebp), %eax
	irmovl 3, %ecx
	subl %ecx, %eax
	rmmovl %eax, 2984
	je L_88_TRUE
	irmovl 0, %eax
	rmmovl %eax, 2984
	jmp L_88_DONE
L_88_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 2984
L_88_DONE:

	mrmovl 2984, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne L_87_DO_WHILE_BEGIN
	irmovl 1, %eax
	rmmovl %eax, 2988
L_97_FOR_BEGIN:

	irmovl 1, %eax
	rmmovl %eax, 2992
	mrmovl 2992, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_97_FOR_END
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
	irmovl 1, %eax
	rmmovl %eax, 2996
	jmp L_97_FOR_BEGIN
L_97_FOR_END:

	mrmovl 3084, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 3100, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 3116, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl -8(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	mull %ecx, %eax
	mrmovl 3000, %edx
	rmmovl %edx, 0x00FFFE14
	mrmovl -16(%ebp), %edx
	rmmovl %edx, 0x00FFFE14
	mrmovl 3108, %edx
	rmmovl %edx, 0x00FFFE14
L_129_FUNC_PROLOGUE_BEGIN:

	mrmovl -12(%ebp), %eax
	irmovl 3, %ecx
	addl %ecx, %eax

	mrmovl 3004, %eax
	mrmovl -20(%ebp), %ecx
	addl %ecx, %eax

	mrmovl 3008, %eax
	rmmovl %eax, 3012
	mrmovl 3012, %eax
	pushl %eax
	mrmovl -16(%ebp), %eax
	rmmovl %eax, 3016
	mrmovl 3016, %eax
	pushl %eax
	pushl %ebp
	call my_func
L_129_FUNC_EPILOGUE:

	irmovl 7, %eax
	rmmovl %eax, -20(%ebp)
	mrmovl -8(%ebp), %eax
	mrmovl -16(%ebp), %ecx
	addl %ecx, %eax

	mrmovl -20(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	addl %ecx, %eax

	mrmovl 3024, %eax
	irmovl 2, %ecx
	subl %ecx, %eax
	rmmovl %eax, 3036
	je L_143_TRUE
	irmovl 0, %eax
	rmmovl %eax, 3036
	jmp L_143_DONE
L_143_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 3036
L_143_DONE:

	irmovl 3, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	mrmovl 3040, %eax
	mrmovl 3044, %ecx
	addl %ecx, %eax

	mrmovl -8(%ebp), %eax
	mrmovl 3052, %ecx
	addl %ecx, %eax

	irmovl 5, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	mrmovl 3060, %eax
	mrmovl 3064, %ecx
	addl %ecx, %eax

	mrmovl -8(%ebp), %eax
	mrmovl 3072, %ecx
	addl %ecx, %eax

	irmovl 0, %edi
.pos 0xc0c    #Start of string space

	.long 	0x616c7967
	.long 	0x6c6a6b67
	.long 	0x6c6b7567
.pos 0xc20   # Start of global var space 
	.long 0x00000000
	.long 0x00000000
	.long 0x00000000
.pos 0x0000FFFF
stack:
