

 #This function has locals 

#END OF PROG: 5312

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
#(ASSIGN, a, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5640
#(ASSIGN, c, __23, -)
	irmovl 23, %eax
	rmmovl %eax, 5648
#(LABEL, main, -, -)
main:

	irmovl 172, %ecx
	subl %ecx, %esp
#NUM PARAMS: 0
#(ASSIGN, h, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -52(%ebp)
#(ASSIGN, i, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -56(%ebp)
#(MULT, __T0, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 5332

#(MULT, __T1, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 5336

#(MULT, __T2, __T0, __4)
	mrmovl 5332, %eax
	irmovl 8, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5340

#(ADDR, __T3, cc, -)
	irmovl -60, %eax
	addl %ebp, %eax
	rmmovl %eax, 5344
#(SUB, __T4, __T3, __T2)
	mrmovl 5344, %eax
	mrmovl 5340, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5348

#(ASSIGN, __T4, __T1, -)
	mrmovl 5336, %eax
	mrmovl 5348, %ecx
	rmmovl %eax, (%ecx)#(PRINT, test basics!\n, -, -)
	irmovl 5620, %edx
	rmmovl %edx, 0x00FFFE10
#(READ, f, -, -)
	mrmovl 0x00FFFE1C, %eax
	rmmovl %eax, -48(%ebp)
#(SUB, __T6, __1, b)
	irmovl 1, %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5356

#(ASSIGN, c, __T6, -)
	mrmovl 5356, %eax
	rmmovl %eax, -36(%ebp)
#(ADD, __T7, b, __1)
	mrmovl -32(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, 5360

#(ASSIGN, c, __T7, -)
	mrmovl 5360, %eax
	rmmovl %eax, -36(%ebp)
#(SUB, __T8, __5, __5)
	irmovl 5, %eax
	irmovl 5, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5364

#(ASSIGN, c, __T8, -)
	mrmovl 5364, %eax
	rmmovl %eax, -36(%ebp)
#(MULT, __T9, __1, __-6)
	irmovl 1, %eax
	irmovl -6, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5368

#(ASSIGN, c, __T9, -)
	mrmovl 5368, %eax
	rmmovl %eax, -36(%ebp)
#(SUB, __T10, __-2, __9)
	irmovl -2, %eax
	irmovl 9, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5372

#(ASSIGN, c, __T10, -)
	mrmovl 5372, %eax
	rmmovl %eax, -36(%ebp)
#(ADD, __T11, __1, __7)
	irmovl 1, %eax
	irmovl 7, %ecx
	addl %ecx, %eax
	rmmovl %eax, 5376

#(ASSIGN, c, __T11, -)
	mrmovl 5376, %eax
	rmmovl %eax, -36(%ebp)
#(SUB, __T12, __1, __-10)
	irmovl 1, %eax
	irmovl -10, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5380

#(ASSIGN, c, __T12, -)
	mrmovl 5380, %eax
	rmmovl %eax, -36(%ebp)
#(SUB, __T13, __22, __-88)
	irmovl 22, %eax
	irmovl -88, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5384

#(ASSIGN, c, __T13, -)
	mrmovl 5384, %eax
	rmmovl %eax, -36(%ebp)
#(NEG, __T14, b, -)
	mrmovl -32(%ebp), %ecx
	irmovl 0, %eax
	subl %ecx, %eax
	rmmovl %eax, 5388
#(MULT, __T15, a, __T14)
	mrmovl -28(%ebp), %eax
	mrmovl 5388, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5392

#(ASSIGN, c, __T15, -)
	mrmovl 5392, %eax
	rmmovl %eax, -36(%ebp)
#(ADD, __T16, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 5396

#(ASSIGN, c, __T16, -)
	mrmovl 5396, %eax
	rmmovl %eax, -36(%ebp)
#(SUB, __T17, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5400

#(ASSIGN, c, __T17, -)
	mrmovl 5400, %eax
	rmmovl %eax, -36(%ebp)
#(MULT, __T18, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 5404

#(ASSIGN, c, __T18, -)
	mrmovl 5404, %eax
	rmmovl %eax, -36(%ebp)
#(DIV, __T19, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	divl %ecx, %eax
	rmmovl %eax, 5408

#(ASSIGN, c, __T19, -)
	mrmovl 5408, %eax
	rmmovl %eax, -36(%ebp)
#(MOD, __T20, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	modl %ecx, %eax
	rmmovl %eax, 5412

#(ASSIGN, c, __T20, -)
	mrmovl 5412, %eax
	rmmovl %eax, -36(%ebp)
#(LT, __T23, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5424
#(ifTrue, __L_114_TRUE, __T23, -)
	jl L_114_TRUE
#(ASSIGN, __T23, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5424
#(GOTO, __L_114_DONE, -, -)
	jmp L_114_DONE
#(LABEL, __L_114_TRUE, -, -)
L_114_TRUE:

#(ASSIGN, __T23, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5424
#(LABEL, __L_114_DONE, -, -)
L_114_DONE:

#(ASSIGN, c, __T23, -)
	mrmovl 5424, %eax
	rmmovl %eax, -36(%ebp)
#(LTEQ, __T26, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5436
#(ifTrue, __L_119_TRUE, __T26, -)
	jle L_119_TRUE
#(ASSIGN, __T26, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5436
#(GOTO, __L_119_DONE, -, -)
	jmp L_119_DONE
#(LABEL, __L_119_TRUE, -, -)
L_119_TRUE:

#(ASSIGN, __T26, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5436
#(LABEL, __L_119_DONE, -, -)
L_119_DONE:

#(ASSIGN, c, __T26, -)
	mrmovl 5436, %eax
	rmmovl %eax, -36(%ebp)
#(GT, __T29, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5448
#(ifTrue, __L_124_TRUE, __T29, -)
	jg L_124_TRUE
#(ASSIGN, __T29, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5448
#(GOTO, __L_124_DONE, -, -)
	jmp L_124_DONE
#(LABEL, __L_124_TRUE, -, -)
L_124_TRUE:

#(ASSIGN, __T29, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5448
#(LABEL, __L_124_DONE, -, -)
L_124_DONE:

#(ASSIGN, c, __T29, -)
	mrmovl 5448, %eax
	rmmovl %eax, -36(%ebp)
#(GTEQ, __T32, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5460
#(ifTrue, __L_129_TRUE, __T32, -)
	jge L_129_TRUE
#(ASSIGN, __T32, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5460
#(GOTO, __L_129_DONE, -, -)
	jmp L_129_DONE
#(LABEL, __L_129_TRUE, -, -)
L_129_TRUE:

#(ASSIGN, __T32, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5460
#(LABEL, __L_129_DONE, -, -)
L_129_DONE:

#(ASSIGN, c, __T32, -)
	mrmovl 5460, %eax
	rmmovl %eax, -36(%ebp)
#(EQ, __T35, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5472
#(ifTrue, __L_134_TRUE, __T35, -)
	je L_134_TRUE
#(ASSIGN, __T35, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5472
#(GOTO, __L_134_DONE, -, -)
	jmp L_134_DONE
#(LABEL, __L_134_TRUE, -, -)
L_134_TRUE:

#(ASSIGN, __T35, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5472
#(LABEL, __L_134_DONE, -, -)
L_134_DONE:

#(ASSIGN, c, __T35, -)
	mrmovl 5472, %eax
	rmmovl %eax, -36(%ebp)
#(NEQ, __T38, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5484
#(ifTrue, __L_139_TRUE, __T38, -)
	jne L_139_TRUE
#(ASSIGN, __T38, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5484
#(GOTO, __L_139_DONE, -, -)
	jmp L_139_DONE
#(LABEL, __L_139_TRUE, -, -)
L_139_TRUE:

#(ASSIGN, __T38, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5484
#(LABEL, __L_139_DONE, -, -)
L_139_DONE:

#(ASSIGN, c, __T38, -)
	mrmovl 5484, %eax
	rmmovl %eax, -36(%ebp)
#(ASSIGN, __T40, a, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, 5492
#(ifFalse, __L_144_FALSE, __T40, -)
	mrmovl 5492, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_144_FALSE
#(ASSIGN, __T41, b, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 5496
#(ifFalse, __L_144_FALSE, __T41, -)
	mrmovl 5496, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_144_FALSE
#(ASSIGN, __T42, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5500
#(GOTO, __L_144_DONE, -, -)
	jmp L_144_DONE
#(LABEL, __L_144_FALSE, -, -)
L_144_FALSE:

#(ASSIGN, __T42, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5500
#(LABEL, __L_144_DONE, -, -)
L_144_DONE:

#(ASSIGN, c, __T42, -)
	mrmovl 5500, %eax
	rmmovl %eax, -36(%ebp)
#(ASSIGN, __T43, a, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, 5504
#(ifTrue, __L_149_TRUE, __T43, -)
	mrmovl 5504, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne L_149_TRUE
#(ASSIGN, __T46, b, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 5516
#(ifTrue, __L_149_TRUE, __T43, -)
	mrmovl 5504, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne L_149_TRUE
#(ASSIGN, __T45, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5512
#(GOTO, __L_149_DONE, -, -)
	jmp L_149_DONE
#(LABEL, __L_149_TRUE, -, -)
L_149_TRUE:

#(ASSIGN, __T45, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5512
#(LABEL, __L_149_DONE, -, -)
L_149_DONE:

#(ASSIGN, c, __T45, -)
	mrmovl 5512, %eax
	rmmovl %eax, -36(%ebp)
#(ASSIGN, __T47, b, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 5520
#(ifFalse, __L_154_FALSE, __T47, -)
	mrmovl 5520, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_154_FALSE
#(ASSIGN, __T48, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5524
#(GOTO, __L_154_DONE, -, -)
	jmp L_154_DONE
#(LABEL, __L_154_FALSE, -, -)
L_154_FALSE:

#(ASSIGN, __T48, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5524
#(LABEL, __L_154_DONE, -, -)
L_154_DONE:

#(ASSIGN, c, __T48, -)
	mrmovl 5524, %eax
	rmmovl %eax, -36(%ebp)
#(NEG, __T49, b, -)
	mrmovl -32(%ebp), %ecx
	irmovl 0, %eax
	subl %ecx, %eax
	rmmovl %eax, 5528
#(ASSIGN, c, __T49, -)
	mrmovl 5528, %eax
	rmmovl %eax, -36(%ebp)
#(INC, __T50, b, -)
	mrmovl -32(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -32(%ebp)
#(ASSIGN, c, __T50, -)
	mrmovl 5532, %eax
	rmmovl %eax, -36(%ebp)
#(DEC, __T51, b, -)
	mrmovl -32(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, -32(%ebp)
#(ASSIGN, c, __T51, -)
	mrmovl 5536, %eax
	rmmovl %eax, -36(%ebp)
#(MOD, __T52, a, __5)
	mrmovl -28(%ebp), %eax
	irmovl 5, %ecx
	modl %ecx, %eax
	rmmovl %eax, 5540

#(ASSIGN, c, __T52, -)
	mrmovl 5540, %eax
	rmmovl %eax, -36(%ebp)
#(ASSIGN, c, __-23, -)
	irmovl -23, %eax
	rmmovl %eax, -36(%ebp)
#(ASSIGN, a, __100, -)
	irmovl 100, %eax
	rmmovl %eax, -28(%ebp)
#(LABEL, __L_176_FOR_BEGIN, -, -)
L_176_FOR_BEGIN:

#(LT, __T55, a, __200)
	mrmovl -28(%ebp), %eax
	irmovl 200, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5552
#(ifTrue, __L_180_TRUE, __T55, -)
	jl L_180_TRUE
#(ASSIGN, __T55, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5552
#(GOTO, __L_180_DONE, -, -)
	jmp L_180_DONE
#(LABEL, __L_180_TRUE, -, -)
L_180_TRUE:

#(ASSIGN, __T55, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5552
#(LABEL, __L_180_DONE, -, -)
L_180_DONE:

#(ifFalse, __L_176_FOR_END, __T55, -)
	mrmovl 5552, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_176_FOR_END
#(ASSIGN, zz, __-100, -)
	irmovl -100, %eax
	rmmovl %eax, -108(%ebp)
#(ADD, __T56, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 5556

#(ADD, __T57, e, f)
	mrmovl -44(%ebp), %eax
	mrmovl -48(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 5560

#(ASSIGN, c, __T57, -)
	mrmovl 5560, %eax
	rmmovl %eax, -36(%ebp)
#(INC, __T58, a, -)
	mrmovl -28(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -28(%ebp)
#(GOTO, __L_176_FOR_BEGIN, -, -)
	jmp L_176_FOR_BEGIN
#(LABEL, __L_176_FOR_END, -, -)
L_176_FOR_END:

#(LABEL, __L_199_WHILE_BEGIN, -, -)
L_199_WHILE_BEGIN:

#(DIV, __T59, a, __5)
	mrmovl -28(%ebp), %eax
	irmovl 5, %ecx
	divl %ecx, %eax
	rmmovl %eax, 5568

#(ADD, __T60, __-3, __-8)
	irmovl -3, %eax
	irmovl -8, %ecx
	addl %ecx, %eax
	rmmovl %eax, 5572

#(SUB, __T61, __T59, __T60)
	mrmovl 5568, %eax
	mrmovl 5572, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5576

#(EQ, __T64, __T61, __100)
	mrmovl 5576, %eax
	irmovl 100, %ecx
	subl %ecx, %eax
	rmmovl %eax, 5588
#(ifTrue, __L_200_TRUE, __T64, -)
	je L_200_TRUE
#(ASSIGN, __T64, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5588
#(GOTO, __L_200_DONE, -, -)
	jmp L_200_DONE
#(LABEL, __L_200_TRUE, -, -)
L_200_TRUE:

#(ASSIGN, __T64, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5588
#(LABEL, __L_200_DONE, -, -)
L_200_DONE:

#(ifFalse, __L_199_WHILE_END, __T64, -)
	mrmovl 5588, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_199_WHILE_END
#(MULT, __T65, __12, __21)
	irmovl 12, %eax
	irmovl 21, %ecx
	mull %ecx, %eax
	rmmovl %eax, 5592

#(PRINT, __T65, -, -)
	mrmovl 5592, %edx
	rmmovl %edx, 0x00FFFE14
#(GOTO, __L_199_WHILE_BEGIN, -, -)
	jmp L_199_WHILE_BEGIN
#(LABEL, __L_199_WHILE_END, -, -)
L_199_WHILE_END:

#(LABEL, __L_219_DO_WHILE_BEGIN, -, -)
L_219_DO_WHILE_BEGIN:

#(ASSIGN, asd, dsa, -)
	mrmovl -156(%ebp), %eax
	rmmovl %eax, -160(%ebp)
#(ifTrue, __L_219_DO_WHILE_BEGIN, __1, -)
	irmovl 1, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne L_219_DO_WHILE_BEGIN
#(MULT, __T67, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 5600

#(EQ, __T70, __T67, d)
	mrmovl 5600, %eax
	mrmovl -40(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 5612
#(ifTrue, __L_230_TRUE, __T70, -)
	je L_230_TRUE
#(ASSIGN, __T70, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 5612
#(GOTO, __L_230_DONE, -, -)
	jmp L_230_DONE
#(LABEL, __L_230_TRUE, -, -)
L_230_TRUE:

#(ASSIGN, __T70, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 5612
#(LABEL, __L_230_DONE, -, -)
L_230_DONE:

#(ASSIGN, __T66, __T70, -)
	mrmovl 5612, %eax
	rmmovl %eax, 5596
#(ifFalse, __L_229_ELSE, __T66, -)
	mrmovl 5596, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_229_ELSE
#(GOTO, __L_229_FI, -, -)
	jmp L_229_FI
#(LABEL, __L_229_ELSE, -, -)
L_229_ELSE:

#(LABEL, __L_229_FI, -, -)
L_229_FI:

#(RETURN, __0, -, -)
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
.pos 0x15f4    #Start of string space

	.byte 	0x74
	.byte 	0x65
	.byte 	0x73
	.byte 	0x74
	.byte 	0x20
	.byte 	0x62
	.byte 	0x61
	.byte 	0x73
	.byte 	0x69
	.byte 	0x63
	.byte 	0x73
	.byte 	0x21
	.byte 	0xa
.pos 0x1608   # Start of global var space 
	.long 0x00000000
	.long 0x00000000
	.long 0x00000000
.pos 0x0000FFFC
stack:
