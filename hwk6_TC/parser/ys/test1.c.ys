END OF PROG: 1136(ASSIGN, a, __0, -)
	irmovl 0, %eax
	rmmvol %eax, 0
(ASSIGN, c, __23, -)
	irmovl 17, %eax
	rmmvol %eax, 0
(LABEL, main, -, -)
(ASSIGN, h, __2, -)
	irmovl 2, %eax
	rmmovl %eax, -52(%ebp)
(ASSIGN, i, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -56(%ebp)
(MULT, __T0, __12, __4)
	irmovl c, %eax
	irmovl 8, %ecx
	mull %ecx %eax
(ADDR, __T1, cc, -)
(ADD, __T2, __T0, __T1)
	mrmovl 1136, %eax
	mrmovl 1140, %ecx
	addl %ecx %eax

(DEREF, __T3, __T2, -)
(MULT, __T4, __5, __4)
	irmovl 5, %eax
	irmovl 8, %ecx
	mull %ecx %eax
(ADDR, __T5, dd, -)
(ADD, __T6, __T4, __T5)
	mrmovl 1152, %eax
	mrmovl 1156, %ecx
	addl %ecx %eax

(DEREF, __T7, __T6, -)
(MULT, __T8, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx %eax
(MULT, __T9, __T8, __4)
	mrmovl 1168, %eax
	irmovl 8, %ecx
	mull %ecx %eax
(ADDR, __T10, cc, -)
(ADD, __T11, __T9, __T10)
	mrmovl 1172, %eax
	mrmovl 1176, %ecx
	addl %ecx %eax

(DEREF, __T12, __T11, -)
(MULT, __T13, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx %eax
(ASSIGN, __T12, __T13, -)
	mrmovl 1188, %eax
	rmmovl %eax, 1184
(PRINT, __T14, test basics!\n, -)
(READ, __T15, f, -)
(SUB, __T16, __1, b)
	irmovl 1, %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx %eax

(ASSIGN, c, __T16, -)
	mrmovl 1200, %eax
	rmmovl %eax, -36(%ebp)
(ADD, __T17, b, __1)
	mrmovl -32(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx %eax

(ASSIGN, c, __T17, -)
	mrmovl 1204, %eax
	rmmovl %eax, -36(%ebp)
(SUB, __T18, __5, __5)
	irmovl 5, %eax
	irmovl 5, %ecx
	subl %ecx %eax

(ASSIGN, c, __T18, -)
	mrmovl 1208, %eax
	rmmovl %eax, -36(%ebp)
(MULT, __T19, __1, __-6)
	irmovl 1, %eax
	irmovl fffffffa, %ecx
	mull %ecx %eax
(ASSIGN, c, __T19, -)
	mrmovl 1212, %eax
	rmmovl %eax, -36(%ebp)
(SUB, __T20, __-2, __9)
	irmovl fffffffe, %eax
	irmovl 9, %ecx
	subl %ecx %eax

(ASSIGN, c, __T20, -)
	mrmovl 1216, %eax
	rmmovl %eax, -36(%ebp)
(ADD, __T21, __1, __7)
	irmovl 1, %eax
	irmovl 7, %ecx
	addl %ecx %eax

(ASSIGN, c, __T21, -)
	mrmovl 1220, %eax
	rmmovl %eax, -36(%ebp)
(SUB, __T22, __1, __-10)
	irmovl 1, %eax
	irmovl fffffff6, %ecx
	subl %ecx %eax

(ASSIGN, c, __T22, -)
	mrmovl 1224, %eax
	rmmovl %eax, -36(%ebp)
(SUB, __T23, __22, __-88)
	irmovl 16, %eax
	irmovl ffffffa8, %ecx
	subl %ecx %eax

(ASSIGN, c, __T23, -)
	mrmovl 1228, %eax
	rmmovl %eax, -36(%ebp)
(NEG, __T24, b, -)
	mrmovl -32(%ebp), %eax
(MULT, __T25, a, __T24)
	mrmovl -28(%ebp), %eax
	mrmovl 1232, %ecx
	mull %ecx %eax
(ASSIGN, c, __T25, -)
	mrmovl 1236, %eax
	rmmovl %eax, -36(%ebp)
(ADD, __T26, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	addl %ecx %eax

(ASSIGN, c, __T26, -)
	mrmovl 1240, %eax
	rmmovl %eax, -36(%ebp)
(SUB, __T27, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx %eax

(ASSIGN, c, __T27, -)
	mrmovl 1244, %eax
	rmmovl %eax, -36(%ebp)
(MULT, __T28, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx %eax
(ASSIGN, c, __T28, -)
	mrmovl 1248, %eax
	rmmovl %eax, -36(%ebp)
(DIV, __T29, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	 divl %ecx %eax
(ASSIGN, c, __T29, -)
	mrmovl 1252, %eax
	rmmovl %eax, -36(%ebp)
(MOD, __T30, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	 modl %ecx %eax
(ASSIGN, c, __T30, -)
	mrmovl 1256, %eax
	rmmovl %eax, -36(%ebp)
(LT, __T33, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1268
(ifTrue, __L_114_TRUE, __T33, -)
	jl __L_114_TRUE
(ASSIGN, __T33, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1268
(GOTO, __L_114_DONE, -, -)
(LABEL, __L_114_TRUE, -, -)
(ASSIGN, __T33, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1268
(LABEL, __L_114_DONE, -, -)
(ASSIGN, c, __T33, -)
	mrmovl 1268, %eax
	rmmovl %eax, -36(%ebp)
(LTEQ, __T36, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1280
(ifTrue, __L_119_TRUE, __T36, -)
	jle __L_119_TRUE
(ASSIGN, __T36, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1280
(GOTO, __L_119_DONE, -, -)
(LABEL, __L_119_TRUE, -, -)
(ASSIGN, __T36, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1280
(LABEL, __L_119_DONE, -, -)
(ASSIGN, c, __T36, -)
	mrmovl 1280, %eax
	rmmovl %eax, -36(%ebp)
(GT, __T39, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1292
(ifTrue, __L_124_TRUE, __T39, -)
	jg __L_124_TRUE
(ASSIGN, __T39, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1292
(GOTO, __L_124_DONE, -, -)
(LABEL, __L_124_TRUE, -, -)
(ASSIGN, __T39, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1292
(LABEL, __L_124_DONE, -, -)
(ASSIGN, c, __T39, -)
	mrmovl 1292, %eax
	rmmovl %eax, -36(%ebp)
(GTEQ, __T42, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1304
(ifTrue, __L_129_TRUE, __T42, -)
	jge __L_129_TRUE
(ASSIGN, __T42, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1304
(GOTO, __L_129_DONE, -, -)
(LABEL, __L_129_TRUE, -, -)
(ASSIGN, __T42, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1304
(LABEL, __L_129_DONE, -, -)
(ASSIGN, c, __T42, -)
	mrmovl 1304, %eax
	rmmovl %eax, -36(%ebp)
(EQ, __T45, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1316
(ifTrue, __L_134_TRUE, __T45, -)
	je __L_134_TRUE
(ASSIGN, __T45, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1316
(GOTO, __L_134_DONE, -, -)
(LABEL, __L_134_TRUE, -, -)
(ASSIGN, __T45, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1316
(LABEL, __L_134_DONE, -, -)
(ASSIGN, c, __T45, -)
	mrmovl 1316, %eax
	rmmovl %eax, -36(%ebp)
(NEQ, __T48, a, b)
(ifTrue, __L_139_TRUE, __T48, -)
	mrmovl 1328, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_139_TRUE
(ASSIGN, __T48, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1328
(GOTO, __L_139_DONE, -, -)
(LABEL, __L_139_TRUE, -, -)
(ASSIGN, __T48, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1328
(LABEL, __L_139_DONE, -, -)
(ASSIGN, c, __T48, -)
	mrmovl 1328, %eax
	rmmovl %eax, -36(%ebp)
(ASSIGN, __T50, a, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, 1336
(ifFalse, __L_144_FALSE, __T50, -)
	mrmovl 1336, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_144_FALSE
(ASSIGN, __T51, b, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 1340
(ifFalse, __L_144_FALSE, __T51, -)
	mrmovl 1340, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_144_FALSE
(ASSIGN, __T52, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1344
(GOTO, __L_144_DONE, -, -)
(LABEL, __L_144_FALSE, -, -)
(ASSIGN, __T52, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1344
(LABEL, __L_144_DONE, -, -)
(ASSIGN, c, __T52, -)
	mrmovl 1344, %eax
	rmmovl %eax, -36(%ebp)
(ASSIGN, __T53, a, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, 1348
(ifTrue, __L_149_TRUE, __T53, -)
	mrmovl 1348, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_149_TRUE
(ASSIGN, __T56, b, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 1360
(ifTrue, __L_149_TRUE, __T53, -)
	mrmovl 1348, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_149_TRUE
(ASSIGN, __T55, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1356
(GOTO, __L_149_DONE, -, -)
(LABEL, __L_149_TRUE, -, -)
(ASSIGN, __T55, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1356
(LABEL, __L_149_DONE, -, -)
(ASSIGN, c, __T55, -)
	mrmovl 1356, %eax
	rmmovl %eax, -36(%ebp)
(ASSIGN, __T57, b, -)
	mrmovl -32(%ebp), %eax
	rmmovl %eax, 1364
(ifFalse, __L_154_FALSE, __T57, -)
	mrmovl 1364, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_154_FALSE
(ASSIGN, __T58, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1368
(GOTO, __L_154_DONE, -, -)
(LABEL, __L_154_FALSE, -, -)
(ASSIGN, __T58, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1368
(LABEL, __L_154_DONE, -, -)
(ASSIGN, c, __T58, -)
	mrmovl 1368, %eax
	rmmovl %eax, -36(%ebp)
(NEG, __T59, b, -)
	mrmovl -32(%ebp), %eax
(ASSIGN, c, __T59, -)
	mrmovl 1372, %eax
	rmmovl %eax, -36(%ebp)
(INC, __T60, b, -)
	mrmovl -32(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -32(%ebp)
(ASSIGN, c, __T60, -)
	mrmovl 1376, %eax
	rmmovl %eax, -36(%ebp)
(DEC, __T61, b, -)
	mrmovl -32(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, -32(%ebp)
(ASSIGN, c, __T61, -)
	mrmovl 1380, %eax
	rmmovl %eax, -36(%ebp)
(MOD, __T62, a, __5)
	mrmovl -28(%ebp), %eax
	irmovl 5, %ecx
	 modl %ecx %eax
(ASSIGN, c, __T62, -)
	mrmovl 1384, %eax
	rmmovl %eax, -36(%ebp)
(ASSIGN, c, __-23, -)
	irmovl ffffffe9, %eax
	rmmovl %eax, -36(%ebp)
(ASSIGN, a, __100, -)
	irmovl 64, %eax
	rmmovl %eax, -28(%ebp)
(LABEL, __L_176_FOR_BEGIN, -, -)
(LT, __T65, a, __200)
	mrmovl -28(%ebp), %eax
	irmovl c8, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1396
(ifTrue, __L_180_TRUE, __T65, -)
	jl __L_180_TRUE
(ASSIGN, __T65, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1396
(GOTO, __L_180_DONE, -, -)
(LABEL, __L_180_TRUE, -, -)
(ASSIGN, __T65, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1396
(LABEL, __L_180_DONE, -, -)
(ifFalse, __L_176_FOR_END, __T65, -)
	mrmovl 1396, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_176_FOR_END
(ASSIGN, zz, __-100, -)
	irmovl ffffff9c, %eax
	rmmovl %eax, -108(%ebp)
(ADD, __T66, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	addl %ecx %eax

(ADD, __T67, e, f)
	mrmovl -44(%ebp), %eax
	mrmovl -48(%ebp), %ecx
	addl %ecx %eax

(ASSIGN, c, __T67, -)
	mrmovl 1404, %eax
	rmmovl %eax, -36(%ebp)
(INC, __T68, a, -)
	mrmovl -28(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -28(%ebp)
(GOTO, __L_176_FOR_BEGIN, -, -)
(LABEL, __L_176_FOR_END, -, -)
(LABEL, __L_199_WHILE_BEGIN, -, -)
(DIV, __T69, a, __5)
	mrmovl -28(%ebp), %eax
	irmovl 5, %ecx
	 divl %ecx %eax
(ADD, __T70, __-3, __-8)
	irmovl fffffffd, %eax
	irmovl fffffff8, %ecx
	addl %ecx %eax

(SUB, __T71, __T69, __T70)
	mrmovl 1412, %eax
	mrmovl 1416, %ecx
	subl %ecx %eax

(EQ, __T74, __T71, __100)
	mrmovl 1420, %eax
	irmovl 64, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1432
(ifTrue, __L_200_TRUE, __T74, -)
	je __L_200_TRUE
(ASSIGN, __T74, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1432
(GOTO, __L_200_DONE, -, -)
(LABEL, __L_200_TRUE, -, -)
(ASSIGN, __T74, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1432
(LABEL, __L_200_DONE, -, -)
(ifFalse, __L_199_WHILE_END, __T74, -)
	mrmovl 1432, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_199_WHILE_END
(MULT, __T75, __10, __4)
	irmovl a, %eax
	irmovl 8, %ecx
	mull %ecx %eax
(ADDR, __T76, uu, -)
(ADD, __T77, __T75, __T76)
	mrmovl 1436, %eax
	mrmovl 1440, %ecx
	addl %ecx %eax

(DEREF, __T78, __T77, -)
(MULT, __T79, __12, __21)
	irmovl c, %eax
	irmovl 15, %ecx
	mull %ecx %eax
(PRINT, __T80, __T79, -)
(GOTO, __L_199_WHILE_BEGIN, -, -)
(LABEL, __L_219_DO_WHILE_BEGIN, -, -)
(ASSIGN, asd, dsa, -)
	mrmovl -156(%ebp), %eax
	rmmovl %eax, -160(%ebp)
(ifTrue, __L_219_DO_WHILE_BEGIN, __1, -)
	irmovl 1, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_219_DO_WHILE_BEGIN
(MULT, __T82, a, b)
	mrmovl -28(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx %eax
(EQ, __T85, __T82, d)
	mrmovl 1464, %eax
	mrmovl -40(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1476
(ifTrue, __L_230_TRUE, __T85, -)
	je __L_230_TRUE
(ASSIGN, __T85, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1476
(GOTO, __L_230_DONE, -, -)
(LABEL, __L_230_TRUE, -, -)
(ASSIGN, __T85, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1476
(LABEL, __L_230_DONE, -, -)
(ASSIGN, __T81, __T85, -)
	mrmovl 1476, %eax
	rmmovl %eax, 1460
(ifFalse, __L_229_ELSE, __T81, -)
	mrmovl 1460, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_229_ELSE
(GOTO, __L_229_FI, -, -)
(LABEL, __L_229_ELSE, -, -)
(LABEL, __L_229_FI, -, -)
(RETURN, __0, -, -)
	irmovl 0, %edi
.pos 0x5cc    #Start of string space

	.long 	0x74657374
	.long 	0x20626173
	.long 	0x69637321
	.long 	0x5c6e
.pos 0x5e0   # Start of global var space 
	.long 0x00000000
	.long 0x00000000
	.long 0x00000000
