.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
main:

	irmovl 28, %ecx
	subl %ecx, %esp
	irmovl 10, %eax
	rmmovl %eax, -16(%ebp)
	irmovl 0, %eax
	rmmovl %eax, -24(%ebp)
	irmovl 1, %eax
	rmmovl %eax, -8(%ebp)
	irmovl 0, %eax
	rmmovl %eax, -12(%ebp)
L_17_FOR_BEGIN:

	mrmovl -12(%ebp), %eax
	mrmovl -16(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 1112
	jl L_21_TRUE
	irmovl 0, %eax
	rmmovl %eax, 1112
	jmp L_21_DONE
L_21_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 1112
L_21_DONE:

	mrmovl 1112, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_17_FOR_END
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1128
	jle L_30_TRUE
	irmovl 0, %eax
	rmmovl %eax, 1128
	jmp L_30_DONE
L_30_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 1128
L_30_DONE:

	mrmovl 1128, %eax
	rmmovl %eax, 1116
	mrmovl 1116, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_29_ELSE
	mrmovl -12(%ebp), %eax
	rmmovl %eax, -20(%ebp)
	jmp L_29_FI
L_29_ELSE:

	mrmovl -24(%ebp), %eax
	mrmovl -8(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 1132

	mrmovl 1132, %eax
	rmmovl %eax, -20(%ebp)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, -24(%ebp)
	mrmovl -20(%ebp), %eax
	rmmovl %eax, -8(%ebp)
L_29_FI:

	mrmovl -20(%ebp), %edx
	rmmovl %edx, 0x00FFFE14
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -12(%ebp)
	jmp L_17_FOR_BEGIN
L_17_FOR_END:

	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
.pos 0x478    #Start of string space

.pos 0x47c   # Start of global var space 
.pos 0x0000FFFC
stack:
