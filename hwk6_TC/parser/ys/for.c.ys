

 #This function has locals 

#END OF PROG: 632

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
#(LABEL, main, -, -)
main:

	irmovl 52, %ecx
	subl %ecx, %esp
#NUM PARAMS: 0
#(ASSIGN, a, __0, -)
	irmovl 0, %eax
	rmmovl %eax, -8(%ebp)
#(LABEL, __L_9_FOR_BEGIN, -, -)
L_9_FOR_BEGIN:

#(ASSIGN, __T0, a, -)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, 652
#(ASSIGN, __T1, __10, -)
	irmovl 10, %eax
	rmmovl %eax, 656
#(LT, __T2, __T0, __T1)
	mrmovl 652, %eax
	mrmovl 656, %ecx
	subl %ecx, %eax
	rmmovl %eax, 660
#(ifTrue, __L_13_TRUE, __T2, -)
	jl L_13_TRUE
#(ASSIGN, __T2, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 660
#(GOTO, __L_13_DONE, -, -)
	jmp L_13_DONE
#(LABEL, __L_13_TRUE, -, -)
L_13_TRUE:

#(ASSIGN, __T2, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 660
#(LABEL, __L_13_DONE, -, -)
L_13_DONE:

#(ifFalse, __L_9_FOR_END, __T2, -)
	mrmovl 660, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_9_FOR_END
#(MULT, __T3, a, __4)
	mrmovl -8(%ebp), %eax
	irmovl 8, %ecx
	mull %ecx, %eax
	rmmovl %eax, 664

#(ADDR, __T4, b, -)
	irmovl -12, %eax
	addl %ebp, %eax
	rmmovl %eax, 668
#(SUB, __T5, __T4, __T3)
	mrmovl 668, %eax
	mrmovl 664, %ecx
	subl %ecx, %eax
	rmmovl %eax, 672

#(ASSIGN, __T5, a, -)
	mrmovl -8(%ebp), %eax
	mrmovl 672, %ecx
	rmmovl %eax, (%ecx)#(INC, a, -, -)
	mrmovl -8(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -8(%ebp)
#(GOTO, __L_9_FOR_BEGIN, -, -)
	jmp L_9_FOR_BEGIN
#(LABEL, __L_9_FOR_END, -, -)
L_9_FOR_END:

#(RETURN, __void, -, -)
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
.pos 0x2b0    #Start of string space

.pos 0x2b4   # Start of global var space 
.pos 0x0000FFFC
stack:
