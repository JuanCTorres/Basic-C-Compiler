END OF PROG: 1144

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
(LABEL, main, -, -)
(NEQ, __T3, e, f)
(ifTrue, __L_23_TRUE, __T3, -)
	mrmovl 1156, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_23_TRUE
(ASSIGN, __T3, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1156
(GOTO, __L_23_DONE, -, -)
	jmp __L_23_DONE
(LABEL, __L_23_TRUE, -, -)
(ASSIGN, __T3, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1156
(LABEL, __L_23_DONE, -, -)
(ASSIGN, __L_22_FI, __T3, -)
	mrmovl 1156, %eax
(ifFalse, __L_22_FI, __T0, -)
	mrmovl 1144, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_22_FI
(LABEL, __L_34_WHILE_BEGIN, -, -)
(NEQ, __T6, h, __0)
(ifTrue, __L_35_TRUE, __T6, -)
	mrmovl 1168, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne __L_35_TRUE
(ASSIGN, __T6, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1168
(GOTO, __L_35_DONE, -, -)
	jmp __L_35_DONE
(LABEL, __L_35_TRUE, -, -)
(ASSIGN, __T6, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1168
(LABEL, __L_35_DONE, -, -)
(ifFalse, __L_34_WHILE_END, __T6, -)
	mrmovl 1168, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_34_WHILE_END
(LABEL, __L_42_FOR_BEGIN, -, -)
(GT, __T9, h, __10)
	mrmovl -40(%ebp), %eax
	irmovl a, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1180
(ifTrue, __L_44_TRUE, __T9, -)
	jg __L_44_TRUE
(ASSIGN, __T9, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1180
(GOTO, __L_44_DONE, -, -)
	jmp __L_44_DONE
(LABEL, __L_44_TRUE, -, -)
(ASSIGN, __T9, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1180
(LABEL, __L_44_DONE, -, -)
(ifFalse, __L_42_FOR_END, __T9, -)
	mrmovl 1180, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je __L_42_FOR_END
(INC, __T10, h, -)
	mrmovl -40(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -40(%ebp)
(GOTO, __L_42_FOR_BEGIN, -, -)
	jmp __L_42_FOR_BEGIN
(LABEL, __L_42_FOR_END, -, -)
(GOTO, __L_34_WHILE_BEGIN, -, -)
	jmp __L_34_WHILE_BEGIN
(LABEL, __L_22_FI, -, -)
(MULT, __T11, __100, __4)
	irmovl 64, %eax
	irmovl 8, %ecx
	mull %ecx %eax
(ADDR, __T12, catz, -)
(ADD, __T13, __T11, __T12)
	mrmovl 1188, %eax
	mrmovl 1192, %ecx
	addl %ecx %eax

(DEREF, __T14, __T13, -)
(RETURN, __void, -, -)
	irmovl 0, %edi
.pos 0x4cc    #Start of string space

.pos 0x4d0   # Start of global var space 
.pos 0x0000FFFF
stack:
