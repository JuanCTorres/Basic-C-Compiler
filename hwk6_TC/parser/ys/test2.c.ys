END OF PROG: 548(LABEL, my_func, -, -)
(ADD, __T0, q, b)
	mrmovl -12(%ebp), %eax
	mrmovl -8(%ebp), %ecx
	addl %ecx %eax

(PRINT, __T1, __T0, -)
(RETURN, __12345, -, -)
(LABEL, your_func, -, -)
(PRINT, __T2, LOL!\n, -)
(RETURN, __void, -, -)
(LABEL, main, -, -)
(MULT, __T3, __2, __4)
	irmovl 2, %eax
	irmovl 4, %ecx
	mull %ecx %eax
(ADDR, __T4, fff, -)
(ADD, __T5, __T3, __T4)
	mrmovl 560, %eax
	mrmovl 564, %ecx
	addl %ecx %eax

(DEREF, __T6, __T5, -)
(DIV, __T7, __4, __5)
	irmovl 4, %eax
	irmovl 5, %ecx
	 divl %ecx %eax
(NEG, __T8, __T7, -)
(ASSIGN, y, __T8, -)
	mrmovl 580, %eax
	rmmovl %eax, -28(%ebp)
(ASSIGN, t, y, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, -12(%ebp)
(ASSIGN, a, t, -)
	mrmovl -12(%ebp), %eax
	rmmovl %eax, -8(%ebp)
(GT, __T12, a, __10)
(ifTrue, __L_48_TRUE, __T12, -)
(ASSIGN, __T12, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 596
(GOTO, __L_48_DONE, -, -)
(LABEL, __L_48_TRUE, -, -)
(ASSIGN, __T12, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 596
(LABEL, __L_48_DONE, -, -)
(ASSIGN, __T9, __T12, -)
	mrmovl 596, %eax
	rmmovl %eax, 584
(ifFalse, __L_47_ELSE, __T9, -)
(ASSIGN, __T13, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 600
(ifFalse, __L_54_ELSE, __T13, -)
(LABEL, __L_59_DO_WHILE_BEGIN, -, -)
(ASSIGN, a, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -8(%ebp)
(ASSIGN, a, __4, -)
	irmovl 4, %eax
	rmmovl %eax, -8(%ebp)
(ASSIGN, t, __3, -)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
(MULT, __T14, a, t)
	mrmovl -8(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	mull %ecx %eax
(SUB, __T15, t, u)
	mrmovl -12(%ebp), %eax
	mrmovl -16(%ebp), %ecx
	subl %ecx %eax

(MULT, __T16, a, __T15)
	mrmovl -8(%ebp), %eax
	mrmovl 608, %ecx
	mull %ecx %eax
(DIV, __T17, __T16, w)
	mrmovl 612, %eax
	mrmovl -24(%ebp), %ecx
	 divl %ecx %eax
(NEQ, __T20, __T17, __10)
(ifTrue, __L_60_TRUE, __T20, -)
(ASSIGN, __T20, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 628
(GOTO, __L_60_DONE, -, -)
(LABEL, __L_60_TRUE, -, -)
(ASSIGN, __T20, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 628
(LABEL, __L_60_DONE, -, -)
(ifTrue, __L_59_DO_WHILE_BEGIN, __T20, -)
(GOTO, __L_54_FI, -, -)
(LABEL, __L_54_ELSE, -, -)
(PRINT, __T21, not\n, -)
(LABEL, __L_54_FI, -, -)
(GOTO, __L_47_FI, -, -)
(LABEL, __L_47_ELSE, -, -)
(ASSIGN, qwert, __123, -)
	irmovl 7b, %eax
	rmmovl %eax, -44(%ebp)
(ASSIGN, t, __0, -)
	irmovl 0, %eax
	rmmovl %eax, -12(%ebp)
(LABEL, __L_95_FOR_BEGIN, -, -)
(LT, __T24, t, __99)
(ifTrue, __L_99_TRUE, __T24, -)
(ASSIGN, __T24, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 644
(GOTO, __L_99_DONE, -, -)
(LABEL, __L_99_TRUE, -, -)
(ASSIGN, __T24, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 644
(LABEL, __L_99_DONE, -, -)
(ifFalse, __L_95_FOR_END, __T24, -)
(ASSIGN, y, u, -)
	mrmovl -16(%ebp), %eax
	rmmovl %eax, -28(%ebp)
(ASSIGN, a, y, -)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, -8(%ebp)
(ASSIGN, a, w, -)
	mrmovl -24(%ebp), %eax
	rmmovl %eax, -8(%ebp)
(ASSIGN, y, a, -)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, -28(%ebp)
(PRINT, __T25, in for loop\n, -)
(INC, __T26, t, -)
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -12(%ebp)
(GOTO, __L_95_FOR_BEGIN, -, -)
(LABEL, __L_95_FOR_END, -, -)
(LABEL, __L_47_FI, -, -)
(LABEL, __L_119_FUNC_PROLOGUE_BEGIN, -, -)
(CALL, your_func, -, -)
(LABEL, __L_119_FUNC_EPILOGUE, -, -)
(MULT, __T27, __2, a)
	irmovl 2, %eax
	mrmovl -8(%ebp), %ecx
	mull %ecx %eax
(ASSIGN, w, __T27, -)
	mrmovl 656, %eax
	rmmovl %eax, -24(%ebp)
(LABEL, __L_130_FUNC_PROLOGUE_BEGIN, -, -)
(ASSIGN, __T28, a, -)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, 660
(PUSH, __T28, -, -)
(ASSIGN, __T29, t, -)
	mrmovl -12(%ebp), %eax
	rmmovl %eax, 664
(PUSH, __T29, -, -)
(CALL, my_func, -, -)
(LABEL, __L_130_FUNC_EPILOGUE, -, -)
(MULT, __T30, __2, __RET_INT)
	irmovl 2, %eax
	rrmovl %edi %ecx
	mull %ecx %eax
(ASSIGN, w, __T30, -)
	mrmovl 668, %eax
	rmmovl %eax, -24(%ebp)
(ADD, __T31, a, w)
	mrmovl -8(%ebp), %eax
	mrmovl -24(%ebp), %ecx
	addl %ecx %eax

(MULT, __T32, t, ppp)
	mrmovl -12(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx %eax
(SUB, __T33, __T32, y)
	mrmovl 676, %eax
	mrmovl -28(%ebp), %ecx
	subl %ecx %eax

(SUB, __T34, __T33, u)
	mrmovl 680, %eax
	mrmovl -16(%ebp), %ecx
	subl %ecx %eax

(SUB, __T35, __T34, w)
	mrmovl 684, %eax
	mrmovl -24(%ebp), %ecx
	subl %ecx %eax

(DIV, __T36, __T31, __T35)
	mrmovl 672, %eax
	mrmovl 688, %ecx
	 divl %ecx %eax
(RETURN, __T36, -, -)
.pos 0x2bc    #Start of string space

	.long 	0x4c4f4c21
	.long 	0x5c6e
	.long 	0x696e2066
	.long 	0x6f72206c
	.long 	0x6f6f705c
	.long 	0x6e
	.long 	0x6e6f745c
	.long 	0x6e
.pos 0x2e0   # Start of global var space 
