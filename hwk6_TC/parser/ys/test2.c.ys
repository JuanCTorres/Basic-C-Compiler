.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
my_func:

	irmovl 16, %ecx
	subl %ecx, %esp
	mrmovl 4(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl 8(%ebp), %eax
	rmmovl %eax, -12(%ebp)
	mrmovl -12(%ebp), %eax
	mrmovl -8(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 2752

	mrmovl 2752, %edx
	rmmovl %edx, 0x00FFFE14
	irmovl 12345, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
your_func:

	irmovl 16, %ecx
	subl %ecx, %esp
	mrmovl 2888, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 2904, %edx
	rmmovl %edx, 0x00FFFE10
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
main:

	irmovl 48, %ecx
	subl %ecx, %esp
	irmovl 2, %eax
	irmovl 4, %ecx
	mull %ecx, %eax
	rmmovl %eax, 2756

	irmovl -36, %eax
	addl %ebp, %eax
	rmmovl %eax, 2760
	mrmovl 2756, %eax
	mrmovl 2760, %ecx
	addl %ecx, %eax
	rmmovl %eax, 2764

	mrmovl 2764, %eax
	rmmovl %eax, 2768
	irmovl 4, %eax
	irmovl 5, %ecx
	divl %ecx, %eax
	rmmovl %eax, 2772

	mrmovl 2772, %eax
	mrmovl 2776, %eax
	rmmovl %eax, -28(%ebp)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, -12(%ebp)
	mrmovl -12(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -8(%ebp), %eax
	irmovl 10, %ecx
	subl %ecx, %eax
	rmmovl %eax, 2792
	jg L_48_TRUE
	irmovl 0, %eax
	rmmovl %eax, 2792
	jmp L_48_DONE
L_48_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 2792
L_48_DONE:

	mrmovl 2792, %eax
	rmmovl %eax, 2780
	mrmovl 2780, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_47_ELSE
	irmovl 1, %eax
	rmmovl %eax, 2796
	mrmovl 2796, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_54_ELSE
L_59_DO_WHILE_BEGIN:

	irmovl 3, %eax
	rmmovl %eax, -8(%ebp)
	irmovl 4, %eax
	rmmovl %eax, -8(%ebp)
	irmovl 3, %eax
	rmmovl %eax, -12(%ebp)
	mrmovl -8(%ebp), %eax
	mrmovl -12(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 2800

	mrmovl -12(%ebp), %eax
	mrmovl -16(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 2804

	mrmovl -8(%ebp), %eax
	mrmovl 2804, %ecx
	mull %ecx, %eax
	rmmovl %eax, 2808

	mrmovl 2808, %eax
	mrmovl -24(%ebp), %ecx
	divl %ecx, %eax
	rmmovl %eax, 2812

	mrmovl 2824, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne L_60_TRUE
	irmovl 0, %eax
	rmmovl %eax, 2824
	jmp L_60_DONE
L_60_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 2824
L_60_DONE:

	mrmovl 2824, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	jne L_59_DO_WHILE_BEGIN
	jmp L_54_FI
L_54_ELSE:

	mrmovl 2912, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 2928, %edx
	rmmovl %edx, 0x00FFFE10
L_54_FI:

	jmp L_47_FI
L_47_ELSE:

	irmovl 123, %eax
	rmmovl %eax, -44(%ebp)
	irmovl 0, %eax
	rmmovl %eax, -12(%ebp)
L_95_FOR_BEGIN:

	mrmovl -12(%ebp), %eax
	irmovl 99, %ecx
	subl %ecx, %eax
	rmmovl %eax, 2836
	jl L_99_TRUE
	irmovl 0, %eax
	rmmovl %eax, 2836
	jmp L_99_DONE
L_99_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 2836
L_99_DONE:

	mrmovl 2836, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_95_FOR_END
	mrmovl -16(%ebp), %eax
	rmmovl %eax, -28(%ebp)
	mrmovl -28(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -24(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, -28(%ebp)
	mrmovl 2896, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 2912, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 2928, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl 2944, %edx
	rmmovl %edx, 0x00FFFE10
	mrmovl -12(%ebp), %eax
	irmovl 1, %ecx
	addl %ecx, %eax
	rmmovl %eax, -12(%ebp)
	jmp L_95_FOR_BEGIN
L_95_FOR_END:

L_47_FI:

	pushl %ebp
	rrmovl %esp, %ebp
	call your_func
	irmovl 20, %ecx
	rrmovl %ebp, %esp
	addl %ecx, %esp
	irmovl 2, %eax
	mrmovl -8(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 2844

	mrmovl 2844, %eax
	rmmovl %eax, -24(%ebp)
	mrmovl -8(%ebp), %eax
	rmmovl %eax, 2848
	mrmovl 2848, %eax
	pushl %eax
	mrmovl -12(%ebp), %eax
	rmmovl %eax, 2852
	mrmovl 2852, %eax
	pushl %eax
	pushl %ebp
	rrmovl %esp, %ebp
	call my_func
	irmovl 20, %ecx
	rrmovl %ebp, %esp
	addl %ecx, %esp
	irmovl 2, %eax
	rrmovl %edi, %ecx
	mull %ecx, %eax
	rmmovl %eax, 2856

	mrmovl 2856, %eax
	rmmovl %eax, -24(%ebp)
	mrmovl -8(%ebp), %eax
	mrmovl -24(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 2860

	mrmovl -12(%ebp), %eax
	mrmovl -32(%ebp), %ecx
	mull %ecx, %eax
	rmmovl %eax, 2864

	mrmovl 2864, %eax
	mrmovl -28(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 2868

	mrmovl 2868, %eax
	mrmovl -16(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 2872

	mrmovl 2872, %eax
	mrmovl -24(%ebp), %ecx
	subl %ecx, %eax
	rmmovl %eax, 2876

	mrmovl 2860, %eax
	mrmovl 2876, %ecx
	divl %ecx, %eax
	rmmovl %eax, 2880

	mrmovl 2880, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
.pos 0xb48    #Start of string space

	.long 	0x4c4f4c21
	.long 	0x5c6e
	.long 	0x696e2066
	.long 	0x6f72206c
	.long 	0x6f6f705c
	.long 	0x6e
	.long 	0x6e6f745c
	.long 	0x6e
.pos 0xb6c   # Start of global var space 
.pos 0x0000FFFC
stack:
