.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
recurr:

	rrmovl %esp, %ebp
	irmovl 16, %ecx
	subl %ecx, %esp
	mrmovl 4(%ebp), %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -8(%ebp), %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	rmmovl %eax, 964
	je L_9_TRUE
	irmovl 0, %eax
	rmmovl %eax, 964
	jmp L_9_DONE
L_9_TRUE:

	irmovl 1, %eax
	rmmovl %eax, 964
L_9_DONE:

	mrmovl 964, %eax
	rmmovl %eax, 952
	mrmovl 952, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_8_ELSE
	irmovl 1, %edi
	jmp L_8_FI
L_8_ELSE:

L_23_FUNC_PROLOGUE_BEGIN:

	mrmovl -8(%ebp), %eax
	irmovl 1, %ecx
	subl %ecx, %eax

	mrmovl 968, %eax
	rmmovl %eax, 972
	mrmovl 972, %eax
	pushl %eax
	pushl %ebp
	call recurr
L_23_FUNC_EPILOGUE:

	mrmovl -8(%ebp), %eax
	rrmovl %edi, %ecx
	mull %ecx, %eax
	mrmovl 976, %edi
L_8_FI:

	mrmovl -12(%ebp), %edi
main:

	rrmovl %esp, %ebp
	irmovl 12, %ecx
	subl %ecx, %esp
L_38_FUNC_PROLOGUE_BEGIN:

	irmovl a, %eax
	rmmovl %eax, 980
	mrmovl 980, %eax
	pushl %eax
	pushl %ebp
	call recurr
L_38_FUNC_EPILOGUE:

	rrmovl %edi, %eax
	rmmovl %eax, -8(%ebp)
	mrmovl -8(%ebp), %edi
.pos 0x3dc    #Start of string space

.pos 0x3e0   # Start of global var space 
.pos 0x0000FFFF
stack:
