#END OF PROG: 1024

.pos 0
	irmovl stack, %esp
	irmovl stack, %ebp
	call main
	halt
.pos 0x14
#(LABEL, myfunc, -, -)
myfunc:

	irmovl 12, %ecx
	subl %ecx, %esp
#NUM PARAMS: 2
#### SOMETHING
#(ASSIGN, c, __9, -)
	irmovl 9, %eax
	rmmovl %eax, -8(%ebp)
#(PRINT, c, -, -)
	mrmovl -8(%ebp), %edx
	rmmovl %edx, 0x00FFFE14
#(ADD, __T0, a, b)
	mrmovl 8(%ebp), %eax
	mrmovl 4(%ebp), %ecx
	addl %ecx, %eax
	rmmovl %eax, 1044

#(ASSIGN, a, __T0, -)
	mrmovl 1044, %eax
	rmmovl %eax, 8(%ebp)
#(PRINT, a, -, -)
	mrmovl 8(%ebp), %edx
	rmmovl %edx, 0x00FFFE14
#(RETURN, __999, -, -)
	irmovl 999, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret
#(LABEL, main, -, -)
main:

	irmovl 0, %ecx
	subl %ecx, %esp
#NUM PARAMS: 0
#### SOMETHING
#(ASSIGN, __T2, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1052
#(ASSIGN, __T3, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1056
#(EQ, __T4, __T2, __T3)
	mrmovl 1052, %eax
	mrmovl 1056, %ecx
	subl %ecx, %eax
	rmmovl %eax, 1060
#(ifTrue, __L_31_TRUE, __T4, -)
	je L_31_TRUE
#(ASSIGN, __T4, __0, -)
	irmovl 0, %eax
	rmmovl %eax, 1060
#(GOTO, __L_31_DONE, -, -)
	jmp L_31_DONE
#(LABEL, __L_31_TRUE, -, -)
L_31_TRUE:

#(ASSIGN, __T4, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1060
#(LABEL, __L_31_DONE, -, -)
L_31_DONE:

#(ASSIGN, __T1, __T4, -)
	mrmovl 1060, %eax
	rmmovl %eax, 1048
#(ifFalse, __L_30_FI, __T1, -)
	mrmovl 1048, %eax
	irmovl 0, %ecx
	subl %ecx, %eax
	je L_30_FI
#(ASSIGN, a, __333, -)
	irmovl 333, %eax
	rmmovl %eax, 0(%ebp)
#(PRINT, a, -, -)
	mrmovl 0(%ebp), %edx
	rmmovl %edx, 0x00FFFE14
#(LABEL, __L_30_FI, -, -)
L_30_FI:

#(ASSIGN, a, __1, -)
	irmovl 1, %eax
	rmmovl %eax, 1080
#(ASSIGN, c, __11, -)
	irmovl 11, %eax
	rmmovl %eax, 1088
#(ASSIGN, __T5, __3, -)
	irmovl 3, %eax
	rmmovl %eax, 1064
#(PUSH, __T5, -, -)
	mrmovl 1064, %eax
	pushl %eax
#(ASSIGN, __T6, __4, -)
	irmovl 4, %eax
	rmmovl %eax, 1068
#(PUSH, __T6, -, -)
	mrmovl 1068, %eax
	pushl %eax
#(PRECALL, myfunc, -, -)
	pushl %ebp
	rrmovl %esp, %ebp
#(CALL, myfunc, -, -)
	call myfunc
#(POSTCALL, myfunc, -, -)
	irmovl 16, %ecx
	rrmovl %ebp, %esp
	addl %ecx, %esp
#(PRINT, a, -, -)
	mrmovl 1080, %edx
	rmmovl %edx, 0x00FFFE14
#(PRINT, c, -, -)
	mrmovl 1088, %edx
	rmmovl %edx, 0x00FFFE14
#(RETURN, __0, -, -)
	irmovl 0, %edi
	rrmovl %ebp, %esp
	popl %ebp
	irmovl -8, %ecx
	addl %ecx, %esp
	ret

.pos 0x438   # Start of global var space 
	.long 0x00000000
	.long 0x00000000
	.long 0x00000000
.pos 0x0000FFFC
stack:
