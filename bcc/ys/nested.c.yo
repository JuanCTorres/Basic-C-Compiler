                       | #END OF PROG: 1172
                       | 
  0x0000:              | .pos 0
  0x0000:30f4fcff0000  | 	irmovl stack, %esp
  0x0006:30f5fcff0000  | 	irmovl stack, %ebp
  0x000c:8020000000    | 	call main
  0x0011:00            | 	halt
  0x0014:              | .pos 0x14
                       | #(ASSIGN, a, __0, -)
  0x0014:30f000000000  | 	irmovl 0, %eax
  0x001a:400fea040000  | 	rmmovl %eax, 1258
                       | #(LABEL, main, -, -)
  0x0020:              | main:
                       | 
  0x0020:30f100000000  | 	irmovl 0, %ecx
  0x0026:6114          | 	subl %ecx, %esp
                       | #NUM PARAMS: 0
                       | #### SOMETHING
                       | #(ASSIGN, a, __0, -)
  0x0028:30f000000000  | 	irmovl 0, %eax
  0x002e:400fea040000  | 	rmmovl %eax, 1258
                       | #(LABEL, __L_9_FOR_BEGIN, -, -)
  0x0034:              | L_9_FOR_BEGIN:
                       | 
                       | #(ASSIGN, __T0, a, -)
  0x0034:500fea040000  | 	mrmovl 1258, %eax
  0x003a:400fa8040000  | 	rmmovl %eax, 1192
                       | #(ASSIGN, __T1, __10, -)
  0x0040:30f00a000000  | 	irmovl 10, %eax
  0x0046:400fac040000  | 	rmmovl %eax, 1196
                       | #(LT, __T2, __T0, __T1)
  0x004c:500fa8040000  | 	mrmovl 1192, %eax
  0x0052:501fac040000  | 	mrmovl 1196, %ecx
  0x0058:6110          | 	subl %ecx, %eax
  0x005a:400fb0040000  | 	rmmovl %eax, 1200
                       | #(ifTrue, __L_13_TRUE, __T2, -)
  0x0060:7276000000    | 	jl L_13_TRUE
                       | #(ASSIGN, __T2, __0, -)
  0x0065:30f000000000  | 	irmovl 0, %eax
  0x006b:400fb0040000  | 	rmmovl %eax, 1200
                       | #(GOTO, __L_13_DONE, -, -)
  0x0071:7082000000    | 	jmp L_13_DONE
                       | #(LABEL, __L_13_TRUE, -, -)
  0x0076:              | L_13_TRUE:
                       | 
                       | #(ASSIGN, __T2, __1, -)
  0x0076:30f001000000  | 	irmovl 1, %eax
  0x007c:400fb0040000  | 	rmmovl %eax, 1200
                       | #(LABEL, __L_13_DONE, -, -)
  0x0082:              | L_13_DONE:
                       | 
                       | #(ifFalse, __L_9_FOR_END, __T2, -)
  0x0082:500fb0040000  | 	mrmovl 1200, %eax
  0x0088:30f100000000  | 	irmovl 0, %ecx
  0x008e:6110          | 	subl %ecx, %eax
  0x0090:7384010000    | 	je L_9_FOR_END
                       | #(ASSIGN, b, a, -)
  0x0095:500fea040000  | 	mrmovl 1258, %eax
  0x009b:400500000000  | 	rmmovl %eax, 0(%ebp)
                       | #(ASSIGN, __T4, a, -)
  0x00a1:500fea040000  | 	mrmovl 1258, %eax
  0x00a7:400fb8040000  | 	rmmovl %eax, 1208
                       | #(ASSIGN, __T5, b, -)
  0x00ad:500500000000  | 	mrmovl 0(%ebp), %eax
  0x00b3:400fbc040000  | 	rmmovl %eax, 1212
                       | #(EQ, __T6, __T4, __T5)
  0x00b9:500fb8040000  | 	mrmovl 1208, %eax
  0x00bf:501fbc040000  | 	mrmovl 1212, %ecx
  0x00c5:6110          | 	subl %ecx, %eax
  0x00c7:400fc0040000  | 	rmmovl %eax, 1216
                       | #(ifTrue, __L_25_TRUE, __T6, -)
  0x00cd:73e3000000    | 	je L_25_TRUE
                       | #(ASSIGN, __T6, __0, -)
  0x00d2:30f000000000  | 	irmovl 0, %eax
  0x00d8:400fc0040000  | 	rmmovl %eax, 1216
                       | #(GOTO, __L_25_DONE, -, -)
  0x00de:70ef000000    | 	jmp L_25_DONE
                       | #(LABEL, __L_25_TRUE, -, -)
  0x00e3:              | L_25_TRUE:
                       | 
                       | #(ASSIGN, __T6, __1, -)
  0x00e3:30f001000000  | 	irmovl 1, %eax
  0x00e9:400fc0040000  | 	rmmovl %eax, 1216
                       | #(LABEL, __L_25_DONE, -, -)
  0x00ef:              | L_25_DONE:
                       | 
                       | #(ASSIGN, __T3, __T6, -)
  0x00ef:500fc0040000  | 	mrmovl 1216, %eax
  0x00f5:400fb4040000  | 	rmmovl %eax, 1204
                       | #(ifFalse, __L_24_ELSE, __T3, -)
  0x00fb:500fb4040000  | 	mrmovl 1204, %eax
  0x0101:30f100000000  | 	irmovl 0, %ecx
  0x0107:6110          | 	subl %ecx, %eax
  0x0109:733f010000    | 	je L_24_ELSE
                       | #(ADD, __T7, a, b)
  0x010e:500fea040000  | 	mrmovl 1258, %eax
  0x0114:501500000000  | 	mrmovl 0(%ebp), %ecx
  0x011a:6010          | 	addl %ecx, %eax
  0x011c:400fc4040000  | 	rmmovl %eax, 1220
                       | 
                       | #(ASSIGN, c, __T7, -)
  0x0122:500fc4040000  | 	mrmovl 1220, %eax
  0x0128:400500000000  | 	rmmovl %eax, 0(%ebp)
                       | #(PRINT, yes, -, -)
  0x012e:30f2d4040000  | 	irmovl 1236, %edx
  0x0134:402f10feff00  | 	rmmovl %edx, 0x00FFFE10
                       | #(GOTO, __L_24_FI, -, -)
  0x013a:706b010000    | 	jmp L_24_FI
                       | #(LABEL, __L_24_ELSE, -, -)
  0x013f:              | L_24_ELSE:
                       | 
                       | #(SUB, __T8, a, b)
  0x013f:500fea040000  | 	mrmovl 1258, %eax
  0x0145:501500000000  | 	mrmovl 0(%ebp), %ecx
  0x014b:6110          | 	subl %ecx, %eax
  0x014d:400fc8040000  | 	rmmovl %eax, 1224
                       | 
                       | #(ASSIGN, c, __T8, -)
  0x0153:500fc8040000  | 	mrmovl 1224, %eax
  0x0159:400500000000  | 	rmmovl %eax, 0(%ebp)
                       | #(PRINT, no, -, -)
  0x015f:30f2de040000  | 	irmovl 1246, %edx
  0x0165:402f10feff00  | 	rmmovl %edx, 0x00FFFE10
                       | #(LABEL, __L_24_FI, -, -)
  0x016b:              | L_24_FI:
                       | 
                       | #(INC, a, -, -)
  0x016b:500fea040000  | 	mrmovl 1258, %eax
  0x0171:30f101000000  | 	irmovl 1, %ecx
  0x0177:6010          | 	addl %ecx, %eax
  0x0179:400fea040000  | 	rmmovl %eax, 1258
                       | #(GOTO, __L_9_FOR_BEGIN, -, -)
  0x017f:7034000000    | 	jmp L_9_FOR_BEGIN
                       | #(LABEL, __L_9_FOR_END, -, -)
  0x0184:              | L_9_FOR_END:
                       | 
                       | #(RETURN, __void, -, -)
  0x0184:30f700000000  | 	irmovl 0, %edi
  0x018a:2054          | 	rrmovl %ebp, %esp
  0x018c:b05f          | 	popl %ebp
  0x018e:30f1f8ffffff  | 	irmovl -8, %ecx
  0x0194:6014          | 	addl %ecx, %esp
  0x0196:90            | 	ret
  0x04d4:              | .pos 0x4d4    #qwerty
                       | 
  0x04d4:79            | 	.byte 	0x79
                       | 
  0x04d5:65            | 	.byte 	0x65
                       | 
  0x04d6:73            | 	.byte 	0x73
                       | 
  0x04d7:00            | 	.byte 	0x0
  0x04de:              | .pos 0x4de    #qwerty
                       | 
  0x04de:6e            | 	.byte 	0x6e
                       | 
  0x04df:6f            | 	.byte 	0x6f
                       | 
  0x04e0:00            | 	.byte 	0x0
                       | 
  0x04ea:              | .pos 0x4ea   # Start of global var space 
  0x04ea:00000000      | 	.long 0x00000000
  0xfffc:              | .pos 0x0000FFFC
  0xfffc:              | stack:
