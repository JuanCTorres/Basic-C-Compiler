Result of test done to parser.

arr.c BEGIN.
===========================================================






ROOT (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  ARRAY_TYPE (uid: N1) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 glob [scope (0,0) <- (0,0)] declared at line 1  (type: INT_TYPE) 
    INT_LITERAL (uid: N2) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 3 (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N3) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0 fun2  (1 params: VAR_ARRAY_INT )[scope (0,0) <- (0,0)] declared at line 3  (type: VOID_TYPE) 
    FORMAL_PARAMS (uid: N4) inferred ret type: ROOT isDecl = 0, ignore = 0 
      ARRAY_TYPE (uid: N5) inferred ret type: ARRAY_TYPE isDecl = 1, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 3  (type: ARRAY_TYPE) 
    SEQ (uid: N6) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N7) inferred ret type: ROOT isDecl = 0, ignore = 0 
      STATEMENT_LIST (uid: N8) inferred ret type: ROOT isDecl = 0, ignore = 0 
        = (uid: N9) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ARRAY_TYPE (uid: N10) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,0) <- (0,0)] declared at line 3  (type: INT_TYPE) 
            INT_LITERAL (uid: N11) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
          INT_LITERAL (uid: N12) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 17 (type: INT_TYPE) 
        RETURN (uid: N0) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0 [scope (0,0) <- (0,0)]return to fun2 at line 3  (type: VOID_TYPE) 
          VOID_TYPE (uid: N0) inferred ret type: ROOT isDecl = 0, ignore = 0 
  FUNC_DECLARATION (uid: N13) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 fun1  (1 params: VAR_ARRAY_INT )[scope (0,0) <- (0,0)] declared at line 9  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N14) inferred ret type: ROOT isDecl = 0, ignore = 0 
      ARRAY_TYPE (uid: N15) inferred ret type: ARRAY_TYPE isDecl = 1, ignore = 0 a [scope (1,1) <- (0,0)] declared at line 9  (type: ARRAY_TYPE) 
    SEQ (uid: N16) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N17) inferred ret type: ROOT isDecl = 0, ignore = 0 
        ARRAY_TYPE (uid: N18) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 c [scope (1,1) <- (0,0)] declared at line 11  (type: INT_TYPE) 
          INT_LITERAL (uid: N19) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 3 (type: INT_TYPE) 
      STATEMENT_LIST (uid: N20) inferred ret type: ROOT isDecl = 0, ignore = 0 
        = (uid: N21) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ARRAY_TYPE (uid: N22) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,1) <- (0,0)] declared at line 11  (type: INT_TYPE) 
            INT_LITERAL (uid: N23) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
          INT_LITERAL (uid: N24) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 0 (type: INT_TYPE) 
        CALL (uid: N25) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0  (type: VOID_TYPE) 
          FUNCTION (uid: N26) inferred ret type: VOID_TYPE isDecl = 0, ignore = 0 fun2  (1 params: VOID_TYPE)[scope (1,1) <- (0,0)] declared at line 3  (type: VOID_TYPE) 
            ID (uid: N27) inferred ret type: ARRAY_TYPE isDecl = 0, ignore = 0 c  array length: 3 [scope (1,1) <- (0,0)] declared at line 11  (type: ARRAY_TYPE) 
        PRINT (uid: N28) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ARRAY_TYPE (uid: N29) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 c [scope (1,1) <- (0,0)] declared at line 11  (type: INT_TYPE) 
            INT_LITERAL (uid: N30) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 1 (type: INT_TYPE) 
        = (uid: N31) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ARRAY_TYPE (uid: N32) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 a [scope (1,1) <- (0,0)] declared at line 9  (type: INT_TYPE) 
            INT_LITERAL (uid: N33) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 2 (type: INT_TYPE) 
          INT_LITERAL (uid: N34) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 23 (type: INT_TYPE) 
        RETURN (uid: N35) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,1) <- (0,0)]return to fun1 at line 9 
          INT_LITERAL (uid: N36) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 32 (type: INT_TYPE) 
  FUNC_DECLARATION (uid: N37) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 main  (0 params:)[scope (0,0) <- (0,0)] declared at line 27  (type: INT_TYPE) 
    FORMAL_PARAMS (uid: N38) inferred ret type: ROOT isDecl = 0, ignore = 0 
    SEQ (uid: N39) inferred ret type: ROOT isDecl = 0, ignore = 0 
      LOCAL_DECLARATIONS (uid: N40) inferred ret type: ROOT isDecl = 0, ignore = 0 
        ARRAY_TYPE (uid: N41) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 la [scope (1,2) <- (0,0)] declared at line 29  (type: INT_TYPE) 
          INT_LITERAL (uid: N42) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 3 (type: INT_TYPE) 
        ID (uid: N43) inferred ret type: INT_TYPE isDecl = 1, ignore = 0 y [scope (1,2) <- (0,0)] declared at line 30  (type: INT_TYPE) 
      STATEMENT_LIST (uid: N44) inferred ret type: ROOT isDecl = 0, ignore = 0 
        = (uid: N45) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N46) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 y [scope (1,2) <- (0,0)] declared at line 30  (type: INT_TYPE) 
          CALL (uid: N47) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            FUNCTION (uid: N48) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 fun1  (1 params: INT_TYPE)[scope (1,2) <- (0,0)] declared at line 9  (type: INT_TYPE) 
              ID (uid: N49) inferred ret type: ARRAY_TYPE isDecl = 0, ignore = 0 glob  array length: 3 [scope (1,2) <- (0,0)] declared at line 1  (type: ARRAY_TYPE) 
        PRINT (uid: N50) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ARRAY_TYPE (uid: N51) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 glob [scope (1,2) <- (0,0)] declared at line 1  (type: INT_TYPE) 
            INT_LITERAL (uid: N52) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 2 (type: INT_TYPE) 
        = (uid: N53) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
          ID (uid: N54) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 y [scope (1,2) <- (0,0)] declared at line 30  (type: INT_TYPE) 
          CALL (uid: N55) inferred ret type: INT_TYPE isDecl = 0, ignore = 0  (type: INT_TYPE) 
            FUNCTION (uid: N56) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 fun1  (1 params: INT_TYPE)[scope (1,2) <- (0,0)] declared at line 9  (type: INT_TYPE) 
              ID (uid: N57) inferred ret type: ARRAY_TYPE isDecl = 0, ignore = 0 la  array length: 3 [scope (1,2) <- (0,0)] declared at line 29  (type: ARRAY_TYPE) 
        PRINT (uid: N58) inferred ret type: ROOT isDecl = 0, ignore = 0 
          ARRAY_TYPE (uid: N59) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 la [scope (1,2) <- (0,0)] declared at line 29  (type: INT_TYPE) 
            INT_LITERAL (uid: N60) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 2 (type: INT_TYPE) 
        RETURN (uid: N61) inferred ret type: ROOT isDecl = 0, ignore = 0 [scope (1,2) <- (0,0)]return to main at line 27 
          INT_LITERAL (uid: N62) inferred ret type: INT_TYPE isDecl = 0, ignore = 0 123 (type: INT_TYPE) 
(0-0) contains:
  VAR_INT __void (offset: 0 or addr: 0)
  VAR_INT __123 (offset: 0 or addr: 0)
  VAR_INT __17 (offset: 0 or addr: 0)
  VAR_INT __23 (offset: 0 or addr: 0)
  VAR_INT __32 (offset: 0 or addr: 0)
  VAR_INT __0 (offset: 0 or addr: 0)
  VAR_INT __1 (offset: 0 or addr: 0)
  VAR_INT __2 (offset: 0 or addr: 0)
  VAR_INT __3 (offset: 0 or addr: 0)
  VAR_INT __4 (offset: 0 or addr: 0)
There are 404 entries
0: (LABEL, fun2, -, -)
1: (MULT, __T0, __1, __4)
2: (ADDR, __T1, a, -)
3: (SUB, __T2, __T1, __T0)
4: (ASSIGN, __T2, __17, -)
5: (RETURN, __void, -, -)
6: (LABEL, fun1, -, -)
7: (MULT, __T4, __1, __4)
8: (ADDR, __T5, c, -)
9: (SUB, __T6, __T5, __T4)
10: (ASSIGN, __T6, __0, -)
11: (MULT, __T9, __0, __4)
12: (ADDR, __T10, c, -)
13: (SUB, __T11, __T10, __T9)
14: (DEREF, __T8, __T11, -)
15: (ASSIGN, __T13, __T8, -)
16: (PUSH, __T13, -, -)
17: (MULT, __T15, __1, __4)
18: (ADDR, __T16, c, -)
19: (SUB, __T17, __T16, __T15)
20: (DEREF, __T14, __T17, -)
21: (ASSIGN, __T19, __T14, -)
22: (PUSH, __T19, -, -)
23: (MULT, __T21, __2, __4)
24: (ADDR, __T22, c, -)
25: (SUB, __T23, __T22, __T21)
26: (DEREF, __T20, __T23, -)
27: (ASSIGN, __T25, __T20, -)
28: (PUSH, __T25, -, -)
29: (MULT, __T27, __3, __4)
30: (ADDR, __T28, c, -)
31: (SUB, __T29, __T28, __T27)
32: (DEREF, __T26, __T29, -)
33: (ASSIGN, __T31, __T26, -)
34: (PUSH, __T31, -, -)
35: (MULT, __T33, __4, __4)
36: (ADDR, __T34, c, -)
37: (SUB, __T35, __T34, __T33)
38: (DEREF, __T32, __T35, -)
39: (ASSIGN, __T37, __T32, -)
40: (PUSH, __T37, -, -)
41: (MULT, __T39, __5, __4)
42: (ADDR, __T40, c, -)
43: (SUB, __T41, __T40, __T39)
44: (DEREF, __T38, __T41, -)
45: (ASSIGN, __T43, __T38, -)
46: (PUSH, __T43, -, -)
47: (MULT, __T45, __6, __4)
48: (ADDR, __T46, c, -)
49: (SUB, __T47, __T46, __T45)
50: (DEREF, __T44, __T47, -)
51: (ASSIGN, __T49, __T44, -)
52: (PUSH, __T49, -, -)
53: (MULT, __T51, __7, __4)
54: (ADDR, __T52, c, -)
55: (SUB, __T53, __T52, __T51)
56: (DEREF, __T50, __T53, -)
57: (ASSIGN, __T55, __T50, -)
58: (PUSH, __T55, -, -)
59: (MULT, __T57, __8, __4)
60: (ADDR, __T58, c, -)
61: (SUB, __T59, __T58, __T57)
62: (DEREF, __T56, __T59, -)
63: (ASSIGN, __T61, __T56, -)
64: (PUSH, __T61, -, -)
65: (MULT, __T63, __9, __4)
66: (ADDR, __T64, c, -)
67: (SUB, __T65, __T64, __T63)
68: (DEREF, __T62, __T65, -)
69: (ASSIGN, __T67, __T62, -)
70: (PUSH, __T67, -, -)
71: (MULT, __T69, __10, __4)
72: (ADDR, __T70, c, -)
73: (SUB, __T71, __T70, __T69)
74: (DEREF, __T68, __T71, -)
75: (ASSIGN, __T73, __T68, -)
76: (PUSH, __T73, -, -)
77: (MULT, __T75, __11, __4)
78: (ADDR, __T76, c, -)
79: (SUB, __T77, __T76, __T75)
80: (DEREF, __T74, __T77, -)
81: (ASSIGN, __T79, __T74, -)
82: (PUSH, __T79, -, -)
83: (MULT, __T81, __12, __4)
84: (ADDR, __T82, c, -)
85: (SUB, __T83, __T82, __T81)
86: (DEREF, __T80, __T83, -)
87: (ASSIGN, __T85, __T80, -)
88: (PUSH, __T85, -, -)
89: (MULT, __T87, __13, __4)
90: (ADDR, __T88, c, -)
91: (SUB, __T89, __T88, __T87)
92: (DEREF, __T86, __T89, -)
93: (ASSIGN, __T91, __T86, -)
94: (PUSH, __T91, -, -)
95: (MULT, __T93, __14, __4)
96: (ADDR, __T94, c, -)
97: (SUB, __T95, __T94, __T93)
98: (DEREF, __T92, __T95, -)
99: (ASSIGN, __T97, __T92, -)
100: (PUSH, __T97, -, -)
101: (MULT, __T99, __15, __4)
102: (ADDR, __T100, c, -)
103: (SUB, __T101, __T100, __T99)
104: (DEREF, __T98, __T101, -)
105: (ASSIGN, __T103, __T98, -)
106: (PUSH, __T103, -, -)
107: (MULT, __T105, __16, __4)
108: (ADDR, __T106, c, -)
109: (SUB, __T107, __T106, __T105)
110: (DEREF, __T104, __T107, -)
111: (ASSIGN, __T109, __T104, -)
112: (PUSH, __T109, -, -)
113: (MULT, __T111, __17, __4)
114: (ADDR, __T112, c, -)
115: (SUB, __T113, __T112, __T111)
116: (DEREF, __T110, __T113, -)
117: (ASSIGN, __T115, __T110, -)
118: (PUSH, __T115, -, -)
119: (MULT, __T117, __18, __4)
120: (ADDR, __T118, c, -)
121: (SUB, __T119, __T118, __T117)
122: (DEREF, __T116, __T119, -)
123: (ASSIGN, __T121, __T116, -)
124: (PUSH, __T121, -, -)
125: (MULT, __T123, __19, __4)
126: (ADDR, __T124, c, -)
127: (SUB, __T125, __T124, __T123)
128: (DEREF, __T122, __T125, -)
129: (ASSIGN, __T127, __T122, -)
130: (PUSH, __T127, -, -)
131: (PRECALL, fun2, -, -)
132: (CALL, fun2, -, -)
133: (POSTCALL, fun2, -, -)
134: (MULT, __T129, __1, __4)
135: (ADDR, __T130, c, -)
136: (SUB, __T131, __T130, __T129)
137: (DEREF, __T128, __T131, -)
138: (PRINT, __T128, -, -)
139: (MULT, __T133, __2, __4)
140: (ADDR, __T134, a, -)
141: (SUB, __T135, __T134, __T133)
142: (ASSIGN, __T135, __23, -)
143: (RETURN, __32, -, -)
144: (LABEL, main, -, -)
145: (MULT, __T138, __0, __4)
146: (ADDR, __T139, glob, -)
147: (ADD, __T140, __T139, __T138)
148: (DEREF, __T137, __T140, -)
149: (ASSIGN, __T142, __T137, -)
150: (PUSH, __T142, -, -)
151: (MULT, __T144, __1, __4)
152: (ADDR, __T145, glob, -)
153: (ADD, __T146, __T145, __T144)
154: (DEREF, __T143, __T146, -)
155: (ASSIGN, __T148, __T143, -)
156: (PUSH, __T148, -, -)
157: (MULT, __T150, __2, __4)
158: (ADDR, __T151, glob, -)
159: (ADD, __T152, __T151, __T150)
160: (DEREF, __T149, __T152, -)
161: (ASSIGN, __T154, __T149, -)
162: (PUSH, __T154, -, -)
163: (MULT, __T156, __3, __4)
164: (ADDR, __T157, glob, -)
165: (ADD, __T158, __T157, __T156)
166: (DEREF, __T155, __T158, -)
167: (ASSIGN, __T160, __T155, -)
168: (PUSH, __T160, -, -)
169: (MULT, __T162, __4, __4)
170: (ADDR, __T163, glob, -)
171: (ADD, __T164, __T163, __T162)
172: (DEREF, __T161, __T164, -)
173: (ASSIGN, __T166, __T161, -)
174: (PUSH, __T166, -, -)
175: (MULT, __T168, __5, __4)
176: (ADDR, __T169, glob, -)
177: (ADD, __T170, __T169, __T168)
178: (DEREF, __T167, __T170, -)
179: (ASSIGN, __T172, __T167, -)
180: (PUSH, __T172, -, -)
181: (MULT, __T174, __6, __4)
182: (ADDR, __T175, glob, -)
183: (ADD, __T176, __T175, __T174)
184: (DEREF, __T173, __T176, -)
185: (ASSIGN, __T178, __T173, -)
186: (PUSH, __T178, -, -)
187: (MULT, __T180, __7, __4)
188: (ADDR, __T181, glob, -)
189: (ADD, __T182, __T181, __T180)
190: (DEREF, __T179, __T182, -)
191: (ASSIGN, __T184, __T179, -)
192: (PUSH, __T184, -, -)
193: (MULT, __T186, __8, __4)
194: (ADDR, __T187, glob, -)
195: (ADD, __T188, __T187, __T186)
196: (DEREF, __T185, __T188, -)
197: (ASSIGN, __T190, __T185, -)
198: (PUSH, __T190, -, -)
199: (MULT, __T192, __9, __4)
200: (ADDR, __T193, glob, -)
201: (ADD, __T194, __T193, __T192)
202: (DEREF, __T191, __T194, -)
203: (ASSIGN, __T196, __T191, -)
204: (PUSH, __T196, -, -)
205: (MULT, __T198, __10, __4)
206: (ADDR, __T199, glob, -)
207: (ADD, __T200, __T199, __T198)
208: (DEREF, __T197, __T200, -)
209: (ASSIGN, __T202, __T197, -)
210: (PUSH, __T202, -, -)
211: (MULT, __T204, __11, __4)
212: (ADDR, __T205, glob, -)
213: (ADD, __T206, __T205, __T204)
214: (DEREF, __T203, __T206, -)
215: (ASSIGN, __T208, __T203, -)
216: (PUSH, __T208, -, -)
217: (MULT, __T210, __12, __4)
218: (ADDR, __T211, glob, -)
219: (ADD, __T212, __T211, __T210)
220: (DEREF, __T209, __T212, -)
221: (ASSIGN, __T214, __T209, -)
222: (PUSH, __T214, -, -)
223: (MULT, __T216, __13, __4)
224: (ADDR, __T217, glob, -)
225: (ADD, __T218, __T217, __T216)
226: (DEREF, __T215, __T218, -)
227: (ASSIGN, __T220, __T215, -)
228: (PUSH, __T220, -, -)
229: (MULT, __T222, __14, __4)
230: (ADDR, __T223, glob, -)
231: (ADD, __T224, __T223, __T222)
232: (DEREF, __T221, __T224, -)
233: (ASSIGN, __T226, __T221, -)
234: (PUSH, __T226, -, -)
235: (MULT, __T228, __15, __4)
236: (ADDR, __T229, glob, -)
237: (ADD, __T230, __T229, __T228)
238: (DEREF, __T227, __T230, -)
239: (ASSIGN, __T232, __T227, -)
240: (PUSH, __T232, -, -)
241: (MULT, __T234, __16, __4)
242: (ADDR, __T235, glob, -)
243: (ADD, __T236, __T235, __T234)
244: (DEREF, __T233, __T236, -)
245: (ASSIGN, __T238, __T233, -)
246: (PUSH, __T238, -, -)
247: (MULT, __T240, __17, __4)
248: (ADDR, __T241, glob, -)
249: (ADD, __T242, __T241, __T240)
250: (DEREF, __T239, __T242, -)
251: (ASSIGN, __T244, __T239, -)
252: (PUSH, __T244, -, -)
253: (MULT, __T246, __18, __4)
254: (ADDR, __T247, glob, -)
255: (ADD, __T248, __T247, __T246)
256: (DEREF, __T245, __T248, -)
257: (ASSIGN, __T250, __T245, -)
258: (PUSH, __T250, -, -)
259: (MULT, __T252, __19, __4)
260: (ADDR, __T253, glob, -)
261: (ADD, __T254, __T253, __T252)
262: (DEREF, __T251, __T254, -)
263: (ASSIGN, __T256, __T251, -)
264: (PUSH, __T256, -, -)
265: (PRECALL, fun1, -, -)
266: (CALL, fun1, -, -)
267: (POSTCALL, fun1, -, -)
268: (ASSIGN, y, __RET_INT, -)
269: (MULT, __T258, __2, __4)
270: (ADDR, __T259, glob, -)
271: (ADD, __T260, __T259, __T258)
272: (DEREF, __T257, __T260, -)
273: (PRINT, __T257, -, -)
274: (MULT, __T263, __0, __4)
275: (ADDR, __T264, la, -)
276: (SUB, __T265, __T264, __T263)
277: (DEREF, __T262, __T265, -)
278: (ASSIGN, __T267, __T262, -)
279: (PUSH, __T267, -, -)
280: (MULT, __T269, __1, __4)
281: (ADDR, __T270, la, -)
282: (SUB, __T271, __T270, __T269)
283: (DEREF, __T268, __T271, -)
284: (ASSIGN, __T273, __T268, -)
285: (PUSH, __T273, -, -)
286: (MULT, __T275, __2, __4)
287: (ADDR, __T276, la, -)
288: (SUB, __T277, __T276, __T275)
289: (DEREF, __T274, __T277, -)
290: (ASSIGN, __T279, __T274, -)
291: (PUSH, __T279, -, -)
292: (MULT, __T281, __3, __4)
293: (ADDR, __T282, la, -)
294: (SUB, __T283, __T282, __T281)
295: (DEREF, __T280, __T283, -)
296: (ASSIGN, __T285, __T280, -)
297: (PUSH, __T285, -, -)
298: (MULT, __T287, __4, __4)
299: (ADDR, __T288, la, -)
300: (SUB, __T289, __T288, __T287)
301: (DEREF, __T286, __T289, -)
302: (ASSIGN, __T291, __T286, -)
303: (PUSH, __T291, -, -)
304: (MULT, __T293, __5, __4)
305: (ADDR, __T294, la, -)
306: (SUB, __T295, __T294, __T293)
307: (DEREF, __T292, __T295, -)
308: (ASSIGN, __T297, __T292, -)
309: (PUSH, __T297, -, -)
310: (MULT, __T299, __6, __4)
311: (ADDR, __T300, la, -)
312: (SUB, __T301, __T300, __T299)
313: (DEREF, __T298, __T301, -)
314: (ASSIGN, __T303, __T298, -)
315: (PUSH, __T303, -, -)
316: (MULT, __T305, __7, __4)
317: (ADDR, __T306, la, -)
318: (SUB, __T307, __T306, __T305)
319: (DEREF, __T304, __T307, -)
320: (ASSIGN, __T309, __T304, -)
321: (PUSH, __T309, -, -)
322: (MULT, __T311, __8, __4)
323: (ADDR, __T312, la, -)
324: (SUB, __T313, __T312, __T311)
325: (DEREF, __T310, __T313, -)
326: (ASSIGN, __T315, __T310, -)
327: (PUSH, __T315, -, -)
328: (MULT, __T317, __9, __4)
329: (ADDR, __T318, la, -)
330: (SUB, __T319, __T318, __T317)
331: (DEREF, __T316, __T319, -)
332: (ASSIGN, __T321, __T316, -)
333: (PUSH, __T321, -, -)
334: (MULT, __T323, __10, __4)
335: (ADDR, __T324, la, -)
336: (SUB, __T325, __T324, __T323)
337: (DEREF, __T322, __T325, -)
338: (ASSIGN, __T327, __T322, -)
339: (PUSH, __T327, -, -)
340: (MULT, __T329, __11, __4)
341: (ADDR, __T330, la, -)
342: (SUB, __T331, __T330, __T329)
343: (DEREF, __T328, __T331, -)
344: (ASSIGN, __T333, __T328, -)
345: (PUSH, __T333, -, -)
346: (MULT, __T335, __12, __4)
347: (ADDR, __T336, la, -)
348: (SUB, __T337, __T336, __T335)
349: (DEREF, __T334, __T337, -)
350: (ASSIGN, __T339, __T334, -)
351: (PUSH, __T339, -, -)
352: (MULT, __T341, __13, __4)
353: (ADDR, __T342, la, -)
354: (SUB, __T343, __T342, __T341)
355: (DEREF, __T340, __T343, -)
356: (ASSIGN, __T345, __T340, -)
357: (PUSH, __T345, -, -)
358: (MULT, __T347, __14, __4)
359: (ADDR, __T348, la, -)
360: (SUB, __T349, __T348, __T347)
361: (DEREF, __T346, __T349, -)
362: (ASSIGN, __T351, __T346, -)
363: (PUSH, __T351, -, -)
364: (MULT, __T353, __15, __4)
365: (ADDR, __T354, la, -)
366: (SUB, __T355, __T354, __T353)
367: (DEREF, __T352, __T355, -)
368: (ASSIGN, __T357, __T352, -)
369: (PUSH, __T357, -, -)
370: (MULT, __T359, __16, __4)
371: (ADDR, __T360, la, -)
372: (SUB, __T361, __T360, __T359)
373: (DEREF, __T358, __T361, -)
374: (ASSIGN, __T363, __T358, -)
375: (PUSH, __T363, -, -)
376: (MULT, __T365, __17, __4)
377: (ADDR, __T366, la, -)
378: (SUB, __T367, __T366, __T365)
379: (DEREF, __T364, __T367, -)
380: (ASSIGN, __T369, __T364, -)
381: (PUSH, __T369, -, -)
382: (MULT, __T371, __18, __4)
383: (ADDR, __T372, la, -)
384: (SUB, __T373, __T372, __T371)
385: (DEREF, __T370, __T373, -)
386: (ASSIGN, __T375, __T370, -)
387: (PUSH, __T375, -, -)
388: (MULT, __T377, __19, __4)
389: (ADDR, __T378, la, -)
390: (SUB, __T379, __T378, __T377)
391: (DEREF, __T376, __T379, -)
392: (ASSIGN, __T381, __T376, -)
393: (PUSH, __T381, -, -)
394: (PRECALL, fun1, -, -)
395: (CALL, fun1, -, -)
396: (POSTCALL, fun1, -, -)
397: (ASSIGN, y, __RET_INT, -)
398: (MULT, __T383, __2, __4)
399: (ADDR, __T384, la, -)
400: (SUB, __T385, __T384, __T383)
401: (DEREF, __T382, __T385, -)
402: (PRINT, __T382, -, -)
403: (RETURN, __123, -, -)

Print hashtables (level-sibno) according to their hierarchy
(0-0) contains:
  FUNC_INT main (0 params:)space needed: 92
  VAR_ARRAY_INT glob (length: 3, offset: 0 or addr: 13700), sym_length = 3 
  FUNC_INT fun1 (1 params: VAR_ARRAY_INT )space needed: 88
  FUNC_VOID fun2 (1 params: VAR_ARRAY_INT )space needed: 8
  (1-0) contains:
    VAR_ARRAY_INT a (length: 0, offset: 80 or addr: 0), sym_length = 0 
  (1-1) contains:
    VAR_ARRAY_INT a (length: 0, offset: 80 or addr: 0), sym_length = 0 
    VAR_ARRAY_INT c (length: 3, offset: -8 or addr: 0), sym_length = 3 
  (1-2) contains:
    VAR_INT y (offset: -8 or addr: 0)
    VAR_ARRAY_INT la (length: 3, offset: -12 or addr: 0), sym_length = 3 


===========================================================
arr.c finished.
